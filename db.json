{"meta":{"version":1,"warehouse":"5.0.1"},"models":{"Asset":[{"_id":"source/img/network-flow.jpg","path":"img/network-flow.jpg","modified":0,"renderable":0},{"_id":"source/img/solution-luogu-p3210-1.png","path":"img/solution-luogu-p3210-1.png","modified":0,"renderable":0},{"_id":"source/img/solution-luogu-p3210-2.png","path":"img/solution-luogu-p3210-2.png","modified":0,"renderable":0},{"_id":"source/img/solution-luogu-p3365-banner.png","path":"img/solution-luogu-p3365-banner.png","modified":0,"renderable":0},{"_id":"source/img/welcome.jpg","path":"img/welcome.jpg","modified":0,"renderable":0},{"_id":"themes/redefine/source/assets/hbe.style.css","path":"assets/hbe.style.css","modified":0,"renderable":1},{"_id":"themes/redefine/source/assets/odometer-theme-minimal.css","path":"assets/odometer-theme-minimal.css","modified":0,"renderable":1},{"_id":"themes/redefine/source/css/style.styl","path":"css/style.styl","modified":0,"renderable":1},{"_id":"themes/redefine/source/fontawesome/all.min.css","path":"fontawesome/all.min.css","modified":0,"renderable":1},{"_id":"themes/redefine/source/fontawesome/brands.min.css","path":"fontawesome/brands.min.css","modified":0,"renderable":1},{"_id":"themes/redefine/source/fontawesome/duotone.min.css","path":"fontawesome/duotone.min.css","modified":0,"renderable":1},{"_id":"themes/redefine/source/fontawesome/fontawesome.min.css","path":"fontawesome/fontawesome.min.css","modified":0,"renderable":1},{"_id":"themes/redefine/source/fontawesome/light.min.css","path":"fontawesome/light.min.css","modified":0,"renderable":1},{"_id":"themes/redefine/source/fontawesome/regular.min.css","path":"fontawesome/regular.min.css","modified":0,"renderable":1},{"_id":"themes/redefine/source/fontawesome/sharp-solid.min.css","path":"fontawesome/sharp-solid.min.css","modified":0,"renderable":1},{"_id":"themes/redefine/source/fontawesome/solid.min.css","path":"fontawesome/solid.min.css","modified":0,"renderable":1},{"_id":"themes/redefine/source/fontawesome/svg-with-js.min.css","path":"fontawesome/svg-with-js.min.css","modified":0,"renderable":1},{"_id":"themes/redefine/source/fontawesome/thin.min.css","path":"fontawesome/thin.min.css","modified":0,"renderable":1},{"_id":"themes/redefine/source/fontawesome/v4-font-face.min.css","path":"fontawesome/v4-font-face.min.css","modified":0,"renderable":1},{"_id":"themes/redefine/source/fontawesome/v4-shims.min.css","path":"fontawesome/v4-shims.min.css","modified":0,"renderable":1},{"_id":"themes/redefine/source/fontawesome/v5-font-face.min.css","path":"fontawesome/v5-font-face.min.css","modified":0,"renderable":1},{"_id":"themes/redefine/source/images/Xlon-WU.png","path":"images/Xlon-WU.png","modified":0,"renderable":1},{"_id":"themes/redefine/source/images/loading.svg","path":"images/loading.svg","modified":0,"renderable":1},{"_id":"themes/redefine/source/images/redefine-avatar.svg","path":"images/redefine-avatar.svg","modified":0,"renderable":1},{"_id":"themes/redefine/source/images/redefine-favicon.svg","path":"images/redefine-favicon.svg","modified":0,"renderable":1},{"_id":"themes/redefine/source/images/redefine-logo.svg","path":"images/redefine-logo.svg","modified":0,"renderable":1},{"_id":"themes/redefine/source/images/redefine-logo.webp","path":"images/redefine-logo.webp","modified":0,"renderable":1},{"_id":"themes/redefine/source/images/wallhaven-wqery6-dark.webp","path":"images/wallhaven-wqery6-dark.webp","modified":0,"renderable":1},{"_id":"themes/redefine/source/images/wallhaven-wqery6-light.webp","path":"images/wallhaven-wqery6-light.webp","modified":0,"renderable":1},{"_id":"themes/redefine/source/images/城南花已开.jpg","path":"images/城南花已开.jpg","modified":0,"renderable":1},{"_id":"themes/redefine/source/js/firework.js","path":"js/firework.js","modified":0,"renderable":1},{"_id":"themes/redefine/source/js/main.js","path":"js/main.js","modified":0,"renderable":1},{"_id":"themes/redefine/source/js/utils.js","path":"js/utils.js","modified":0,"renderable":1},{"_id":"themes/redefine/source/live2d-widget/LICENSE","path":"live2d-widget/LICENSE","modified":0,"renderable":1},{"_id":"themes/redefine/source/live2d-widget/README.en.md","path":"live2d-widget/README.en.md","modified":0,"renderable":1},{"_id":"themes/redefine/source/live2d-widget/README.md","path":"live2d-widget/README.md","modified":0,"renderable":1},{"_id":"themes/redefine/source/live2d-widget/autoload.js","path":"live2d-widget/autoload.js","modified":0,"renderable":1},{"_id":"themes/redefine/source/live2d-widget/live2d.min.js","path":"live2d-widget/live2d.min.js","modified":0,"renderable":1},{"_id":"themes/redefine/source/live2d-widget/package.json","path":"live2d-widget/package.json","modified":0,"renderable":1},{"_id":"themes/redefine/source/live2d-widget/rollup.config.js","path":"live2d-widget/rollup.config.js","modified":0,"renderable":1},{"_id":"themes/redefine/source/live2d-widget/waifu-tips.js","path":"live2d-widget/waifu-tips.js","modified":0,"renderable":1},{"_id":"themes/redefine/source/live2d-widget/waifu-tips.json","path":"live2d-widget/waifu-tips.json","modified":0,"renderable":1},{"_id":"themes/redefine/source/live2d-widget/waifu.css","path":"live2d-widget/waifu.css","modified":0,"renderable":1},{"_id":"themes/redefine/source/music/城南花已开.m4a","path":"music/城南花已开.m4a","modified":0,"renderable":1},{"_id":"themes/redefine/source/webfonts/fa-brands-400.ttf","path":"webfonts/fa-brands-400.ttf","modified":0,"renderable":1},{"_id":"themes/redefine/source/webfonts/fa-brands-400.woff2","path":"webfonts/fa-brands-400.woff2","modified":0,"renderable":1},{"_id":"themes/redefine/source/webfonts/fa-duotone-900.ttf","path":"webfonts/fa-duotone-900.ttf","modified":0,"renderable":1},{"_id":"themes/redefine/source/webfonts/fa-duotone-900.woff2","path":"webfonts/fa-duotone-900.woff2","modified":0,"renderable":1},{"_id":"themes/redefine/source/webfonts/fa-light-300.ttf","path":"webfonts/fa-light-300.ttf","modified":0,"renderable":1},{"_id":"themes/redefine/source/webfonts/fa-light-300.woff2","path":"webfonts/fa-light-300.woff2","modified":0,"renderable":1},{"_id":"themes/redefine/source/webfonts/fa-regular-400.ttf","path":"webfonts/fa-regular-400.ttf","modified":0,"renderable":1},{"_id":"themes/redefine/source/webfonts/fa-regular-400.woff2","path":"webfonts/fa-regular-400.woff2","modified":0,"renderable":1},{"_id":"themes/redefine/source/webfonts/fa-sharp-solid-900.ttf","path":"webfonts/fa-sharp-solid-900.ttf","modified":0,"renderable":1},{"_id":"themes/redefine/source/webfonts/fa-sharp-solid-900.woff2","path":"webfonts/fa-sharp-solid-900.woff2","modified":0,"renderable":1},{"_id":"themes/redefine/source/webfonts/fa-solid-900.ttf","path":"webfonts/fa-solid-900.ttf","modified":0,"renderable":1},{"_id":"themes/redefine/source/webfonts/fa-solid-900.woff2","path":"webfonts/fa-solid-900.woff2","modified":0,"renderable":1},{"_id":"themes/redefine/source/webfonts/fa-thin-100.ttf","path":"webfonts/fa-thin-100.ttf","modified":0,"renderable":1},{"_id":"themes/redefine/source/webfonts/fa-thin-100.woff2","path":"webfonts/fa-thin-100.woff2","modified":0,"renderable":1},{"_id":"themes/redefine/source/webfonts/fa-v4compatibility.ttf","path":"webfonts/fa-v4compatibility.ttf","modified":0,"renderable":1},{"_id":"themes/redefine/source/webfonts/fa-v4compatibility.woff2","path":"webfonts/fa-v4compatibility.woff2","modified":0,"renderable":1},{"_id":"themes/redefine/source/assets/build/styles.css","path":"assets/build/styles.css","modified":0,"renderable":1},{"_id":"themes/redefine/source/css/common/animated.styl","path":"css/common/animated.styl","modified":0,"renderable":1},{"_id":"themes/redefine/source/css/common/basic.styl","path":"css/common/basic.styl","modified":0,"renderable":1},{"_id":"themes/redefine/source/css/common/redefine-theme.styl","path":"css/common/redefine-theme.styl","modified":0,"renderable":1},{"_id":"themes/redefine/source/css/common/markdown.styl","path":"css/common/markdown.styl","modified":0,"renderable":1},{"_id":"themes/redefine/source/css/common/variables.styl","path":"css/common/variables.styl","modified":0,"renderable":1},{"_id":"themes/redefine/source/css/layout/archive-content.styl","path":"css/layout/archive-content.styl","modified":0,"renderable":1},{"_id":"themes/redefine/source/css/layout/article-content.styl","path":"css/layout/article-content.styl","modified":0,"renderable":1},{"_id":"themes/redefine/source/css/layout/category-content.styl","path":"css/layout/category-content.styl","modified":0,"renderable":1},{"_id":"themes/redefine/source/css/layout/home-content.styl","path":"css/layout/home-content.styl","modified":0,"renderable":1},{"_id":"themes/redefine/source/css/layout/category-list.styl","path":"css/layout/category-list.styl","modified":0,"renderable":1},{"_id":"themes/redefine/source/css/layout/home-sidebar.styl","path":"css/layout/home-sidebar.styl","modified":0,"renderable":1},{"_id":"themes/redefine/source/css/layout/page.styl","path":"css/layout/page.styl","modified":0,"renderable":1},{"_id":"themes/redefine/source/css/layout/tag-content.styl","path":"css/layout/tag-content.styl","modified":0,"renderable":1},{"_id":"themes/redefine/source/fonts/Chillax/Chillax-Variable.eot","path":"fonts/Chillax/Chillax-Variable.eot","modified":0,"renderable":1},{"_id":"themes/redefine/source/fonts/Chillax/Chillax-Variable.ttf","path":"fonts/Chillax/Chillax-Variable.ttf","modified":0,"renderable":1},{"_id":"themes/redefine/source/fonts/Chillax/Chillax-Variable.woff","path":"fonts/Chillax/Chillax-Variable.woff","modified":0,"renderable":1},{"_id":"themes/redefine/source/fonts/Chillax/Chillax-Variable.woff2","path":"fonts/Chillax/Chillax-Variable.woff2","modified":0,"renderable":1},{"_id":"themes/redefine/source/fonts/Chillax/chillax.css","path":"fonts/Chillax/chillax.css","modified":0,"renderable":1},{"_id":"themes/redefine/source/fonts/Geist/GeistVF.ttf","path":"fonts/Geist/GeistVF.ttf","modified":0,"renderable":1},{"_id":"themes/redefine/source/fonts/Geist/GeistVF.woff","path":"fonts/Geist/GeistVF.woff","modified":0,"renderable":1},{"_id":"themes/redefine/source/fonts/Geist/GeistVF.woff2","path":"fonts/Geist/GeistVF.woff2","modified":0,"renderable":1},{"_id":"themes/redefine/source/fonts/Geist/geist.css","path":"fonts/Geist/geist.css","modified":0,"renderable":1},{"_id":"themes/redefine/source/fonts/GeistMono/GeistMonoVF.ttf","path":"fonts/GeistMono/GeistMonoVF.ttf","modified":0,"renderable":1},{"_id":"themes/redefine/source/fonts/GeistMono/GeistMonoVF.woff","path":"fonts/GeistMono/GeistMonoVF.woff","modified":0,"renderable":1},{"_id":"themes/redefine/source/fonts/GeistMono/GeistMonoVF.woff2","path":"fonts/GeistMono/GeistMonoVF.woff2","modified":0,"renderable":1},{"_id":"themes/redefine/source/fonts/GeistMono/geist-mono.css","path":"fonts/GeistMono/geist-mono.css","modified":0,"renderable":1},{"_id":"themes/redefine/source/js/layouts/categoryList.js","path":"js/layouts/categoryList.js","modified":0,"renderable":1},{"_id":"themes/redefine/source/js/layouts/lazyload.js","path":"js/layouts/lazyload.js","modified":0,"renderable":1},{"_id":"themes/redefine/source/js/layouts/navbarShrink.js","path":"js/layouts/navbarShrink.js","modified":0,"renderable":1},{"_id":"themes/redefine/source/js/layouts/toc.js","path":"js/layouts/toc.js","modified":0,"renderable":1},{"_id":"themes/redefine/source/js/libs/APlayer.min.js","path":"js/libs/APlayer.min.js","modified":0,"renderable":1},{"_id":"themes/redefine/source/js/libs/APlayer.min.js.map","path":"js/libs/APlayer.min.js.map","modified":0,"renderable":1},{"_id":"themes/redefine/source/js/libs/Swup.min.js","path":"js/libs/Swup.min.js","modified":0,"renderable":1},{"_id":"themes/redefine/source/js/libs/Swup.min.js.map","path":"js/libs/Swup.min.js.map","modified":0,"renderable":1},{"_id":"themes/redefine/source/js/libs/SwupPreloadPlugin.min.js","path":"js/libs/SwupPreloadPlugin.min.js","modified":0,"renderable":1},{"_id":"themes/redefine/source/js/libs/SwupPreloadPlugin.min.js.map","path":"js/libs/SwupPreloadPlugin.min.js.map","modified":0,"renderable":1},{"_id":"themes/redefine/source/js/libs/SwupProgressPlugin.min.js","path":"js/libs/SwupProgressPlugin.min.js","modified":0,"renderable":1},{"_id":"themes/redefine/source/js/libs/SwupScriptsPlugin.min.js","path":"js/libs/SwupScriptsPlugin.min.js","modified":0,"renderable":1},{"_id":"themes/redefine/source/js/libs/SwupScrollPlugin.min.js","path":"js/libs/SwupScrollPlugin.min.js","modified":0,"renderable":1},{"_id":"themes/redefine/source/js/libs/SwupScrollPlugin.min.js.map","path":"js/libs/SwupScrollPlugin.min.js.map","modified":0,"renderable":1},{"_id":"themes/redefine/source/js/libs/SwupSlideTheme.min.js","path":"js/libs/SwupSlideTheme.min.js","modified":0,"renderable":1},{"_id":"themes/redefine/source/js/libs/Typed.min.js","path":"js/libs/Typed.min.js","modified":0,"renderable":1},{"_id":"themes/redefine/source/js/libs/anime.min.js","path":"js/libs/anime.min.js","modified":0,"renderable":1},{"_id":"themes/redefine/source/js/libs/mermaid.min.js","path":"js/libs/mermaid.min.js","modified":0,"renderable":1},{"_id":"themes/redefine/source/js/libs/mermaid.min.js.map","path":"js/libs/mermaid.min.js.map","modified":0,"renderable":1},{"_id":"themes/redefine/source/js/libs/minimasonry.min.js","path":"js/libs/minimasonry.min.js","modified":0,"renderable":1},{"_id":"themes/redefine/source/js/libs/odometer.min.js","path":"js/libs/odometer.min.js","modified":0,"renderable":1},{"_id":"themes/redefine/source/js/libs/pjax.min.js","path":"js/libs/pjax.min.js","modified":0,"renderable":1},{"_id":"themes/redefine/source/js/libs/waline.mjs","path":"js/libs/waline.mjs","modified":0,"renderable":1},{"_id":"themes/redefine/source/js/libs/waline.mjs.map","path":"js/libs/waline.mjs.map","modified":0,"renderable":1},{"_id":"themes/redefine/source/js/plugins/aplayer.js","path":"js/plugins/aplayer.js","modified":0,"renderable":1},{"_id":"themes/redefine/source/js/plugins/hbe.js","path":"js/plugins/hbe.js","modified":0,"renderable":1},{"_id":"themes/redefine/source/js/plugins/masonry.js","path":"js/plugins/masonry.js","modified":0,"renderable":1},{"_id":"themes/redefine/source/js/plugins/mermaid.js","path":"js/plugins/mermaid.js","modified":0,"renderable":1},{"_id":"themes/redefine/source/js/plugins/tabs.js","path":"js/plugins/tabs.js","modified":0,"renderable":1},{"_id":"themes/redefine/source/js/plugins/typed.js","path":"js/plugins/typed.js","modified":0,"renderable":1},{"_id":"themes/redefine/source/js/tools/codeBlock.js","path":"js/tools/codeBlock.js","modified":0,"renderable":1},{"_id":"themes/redefine/source/js/tools/imageViewer.js","path":"js/tools/imageViewer.js","modified":0,"renderable":1},{"_id":"themes/redefine/source/js/tools/lightDarkSwitch.js","path":"js/tools/lightDarkSwitch.js","modified":0,"renderable":1},{"_id":"themes/redefine/source/js/tools/localSearch.js","path":"js/tools/localSearch.js","modified":0,"renderable":1},{"_id":"themes/redefine/source/js/tools/runtime.js","path":"js/tools/runtime.js","modified":0,"renderable":1},{"_id":"themes/redefine/source/js/tools/scrollTopBottom.js","path":"js/tools/scrollTopBottom.js","modified":0,"renderable":1},{"_id":"themes/redefine/source/js/tools/tocToggle.js","path":"js/tools/tocToggle.js","modified":0,"renderable":1},{"_id":"themes/redefine/source/live2d-widget/assets/screenshot-1.png","path":"live2d-widget/assets/screenshot-1.png","modified":0,"renderable":1},{"_id":"themes/redefine/source/live2d-widget/assets/screenshot-2.png","path":"live2d-widget/assets/screenshot-2.png","modified":0,"renderable":1},{"_id":"themes/redefine/source/live2d-widget/assets/screenshot-3.png","path":"live2d-widget/assets/screenshot-3.png","modified":0,"renderable":1},{"_id":"themes/redefine/source/live2d-widget/demo/demo.html","path":"live2d-widget/demo/demo.html","modified":0,"renderable":1},{"_id":"themes/redefine/source/live2d-widget/demo/login.html","path":"live2d-widget/demo/login.html","modified":0,"renderable":1},{"_id":"themes/redefine/source/live2d-widget/src/index.js","path":"live2d-widget/src/index.js","modified":0,"renderable":1},{"_id":"themes/redefine/source/live2d-widget/src/message.js","path":"live2d-widget/src/message.js","modified":0,"renderable":1},{"_id":"themes/redefine/source/live2d-widget/src/model.js","path":"live2d-widget/src/model.js","modified":0,"renderable":1},{"_id":"themes/redefine/source/live2d-widget/src/tools.js","path":"live2d-widget/src/tools.js","modified":0,"renderable":1},{"_id":"themes/redefine/source/live2d-widget/src/utils.js","path":"live2d-widget/src/utils.js","modified":0,"renderable":1},{"_id":"themes/redefine/source/live2d-widget/src/waifu-tips.js","path":"live2d-widget/src/waifu-tips.js","modified":0,"renderable":1},{"_id":"themes/redefine/source/css/common/codeblock/code-block.styl","path":"css/common/codeblock/code-block.styl","modified":0,"renderable":1},{"_id":"themes/redefine/source/css/common/codeblock/code-theme.styl","path":"css/common/codeblock/code-theme.styl","modified":0,"renderable":1},{"_id":"themes/redefine/source/css/common/codeblock/highlight.styl","path":"css/common/codeblock/highlight.styl","modified":0,"renderable":1},{"_id":"themes/redefine/source/images/Breath-and-Life.jpg","path":"images/Breath-and-Life.jpg","modified":0,"renderable":1},{"_id":"themes/redefine/source/images/Light-Above-The-Sky.jpg","path":"images/Light-Above-The-Sky.jpg","modified":0,"renderable":1},{"_id":"themes/redefine/source/images/Moment.jpg","path":"images/Moment.jpg","modified":0,"renderable":1},{"_id":"themes/redefine/source/images/一路生花.jpg","path":"images/一路生花.jpg","modified":0,"renderable":1},{"_id":"themes/redefine/source/images/人是_.jpg","path":"images/人是_.jpg","modified":0,"renderable":1},{"_id":"themes/redefine/source/images/你曾这样问过.jpg","path":"images/你曾这样问过.jpg","modified":0,"renderable":1},{"_id":"themes/redefine/source/images/化身孤岛的鲸.jpg","path":"images/化身孤岛的鲸.jpg","modified":0,"renderable":1},{"_id":"themes/redefine/source/images/安静的午后.jpg","path":"images/安静的午后.jpg","modified":0,"renderable":1},{"_id":"themes/redefine/source/images/未闻花名.jpg","path":"images/未闻花名.jpg","modified":0,"renderable":1},{"_id":"themes/redefine/source/images/浮光.jpg","path":"images/浮光.jpg","modified":0,"renderable":1},{"_id":"themes/redefine/source/images/煙火.jpg","path":"images/煙火.jpg","modified":0,"renderable":1},{"_id":"themes/redefine/source/images/蜃楼.jpg","path":"images/蜃楼.jpg","modified":0,"renderable":1},{"_id":"themes/redefine/source/images/追繁星的孩子.jpg","path":"images/追繁星的孩子.jpg","modified":0,"renderable":1},{"_id":"themes/redefine/source/music/Breath-and-Life.m4a","path":"music/Breath-and-Life.m4a","modified":0,"renderable":1},{"_id":"themes/redefine/source/music/Light-Above-The-Sky.m4a","path":"music/Light-Above-The-Sky.m4a","modified":0,"renderable":1},{"_id":"themes/redefine/source/music/Moment.m4a","path":"music/Moment.m4a","modified":0,"renderable":1},{"_id":"themes/redefine/source/music/一路生花.mp3","path":"music/一路生花.mp3","modified":0,"renderable":1},{"_id":"themes/redefine/source/music/人是_.m4a","path":"music/人是_.m4a","modified":0,"renderable":1},{"_id":"themes/redefine/source/music/你曾这样问过.mp3","path":"music/你曾这样问过.mp3","modified":0,"renderable":1},{"_id":"themes/redefine/source/music/化身孤岛的鲸.m4a","path":"music/化身孤岛的鲸.m4a","modified":0,"renderable":1},{"_id":"themes/redefine/source/music/安静的午后.m4a","path":"music/安静的午后.m4a","modified":0,"renderable":1},{"_id":"themes/redefine/source/music/浮光.m4a","path":"music/浮光.m4a","modified":0,"renderable":1},{"_id":"themes/redefine/source/music/煙火.m4a","path":"music/煙火.m4a","modified":0,"renderable":1},{"_id":"themes/redefine/source/music/背水.m4a","path":"music/背水.m4a","modified":0,"renderable":1},{"_id":"themes/redefine/source/music/蜃楼.m4a","path":"music/蜃楼.m4a","modified":0,"renderable":1},{"_id":"themes/redefine/source/music/追逐繁星的孩子.m4a","path":"music/追逐繁星的孩子.m4a","modified":0,"renderable":1},{"_id":"themes/redefine/source/music/未闻花名.m4a","path":"music/未闻花名.m4a","modified":0,"renderable":1},{"_id":"themes/redefine/source/css/common/codeblock/hljs-themes/light/default.styl","path":"css/common/codeblock/hljs-themes/light/default.styl","modified":0,"renderable":1},{"_id":"themes/redefine/source/css/common/codeblock/hljs-themes/light/atom-one-light.styl","path":"css/common/codeblock/hljs-themes/light/atom-one-light.styl","modified":0,"renderable":1},{"_id":"themes/redefine/source/css/common/codeblock/hljs-themes/light/github.styl","path":"css/common/codeblock/hljs-themes/light/github.styl","modified":0,"renderable":1},{"_id":"themes/redefine/source/css/common/codeblock/hljs-themes/dark/a11y-dark.styl","path":"css/common/codeblock/hljs-themes/dark/a11y-dark.styl","modified":0,"renderable":1},{"_id":"themes/redefine/source/css/common/codeblock/hljs-themes/dark/agate.styl","path":"css/common/codeblock/hljs-themes/dark/agate.styl","modified":0,"renderable":1},{"_id":"themes/redefine/source/css/common/codeblock/hljs-themes/dark/atom-one-dark.styl","path":"css/common/codeblock/hljs-themes/dark/atom-one-dark.styl","modified":0,"renderable":1},{"_id":"themes/redefine/source/css/common/codeblock/hljs-themes/dark/github-dark.styl","path":"css/common/codeblock/hljs-themes/dark/github-dark.styl","modified":0,"renderable":1},{"_id":"themes/redefine/source/css/common/codeblock/hljs-themes/dark/monokai-sublime.styl","path":"css/common/codeblock/hljs-themes/dark/monokai-sublime.styl","modified":0,"renderable":1},{"_id":"themes/redefine/source/css/common/codeblock/hljs-themes/dark/night-owl.styl","path":"css/common/codeblock/hljs-themes/dark/night-owl.styl","modified":0,"renderable":1},{"_id":"themes/redefine/source/css/common/codeblock/hljs-themes/dark/nord.styl","path":"css/common/codeblock/hljs-themes/dark/nord.styl","modified":0,"renderable":1},{"_id":"themes/redefine/source/css/common/codeblock/hljs-themes/dark/tokyo-night-dark.styl","path":"css/common/codeblock/hljs-themes/dark/tokyo-night-dark.styl","modified":0,"renderable":1},{"_id":"themes/redefine/source/css/common/codeblock/hljs-themes/dark/vs2015.styl","path":"css/common/codeblock/hljs-themes/dark/vs2015.styl","modified":0,"renderable":1}],"Cache":[{"_id":"source/_posts/network-flow-24-problem.md","hash":"a892e7e04566e920237775d495d9db0c91955a84","modified":1725802986000},{"_id":"source/_posts/solution-at-arc073d.md","hash":"f5fdd28891ecc8032f666415d4f1ff7eda539778","modified":1725802986000},{"_id":"source/_posts/solution-luogu-p10447.md","hash":"be7ca02dd0f6d9c9c75aba214c2feba2b3f0c32a","modified":1725802986000},{"_id":"source/_posts/solution-luogu-p3210.md","hash":"e857d6256c5e88bb9e79fe7e7f4a043f7f08574e","modified":1725802986000},{"_id":"source/_posts/solution-luogu-p3356.md","hash":"566c940e3ecf3fad82ae1965cf0edd88dc08895b","modified":1725802986000},{"_id":"source/_posts/welcome-to-this-blog.md","hash":"7e4d4c03a1272e9287cf70d38ae9b2f0b15d301a","modified":1724818038197},{"_id":"source/img/solution-luogu-p3210-1.png","hash":"10d9fbe01448de83aa346c5225169dc350acded8","modified":1724683388514},{"_id":"source/tags/index.md","hash":"364c8b3be730cb0d5d87df3ca5c110ec9fce13b9","modified":1724758445534},{"_id":"source/img/solution-luogu-p3210-2.png","hash":"3cc0e881d96dbc10481269d936e0d333042ac5c5","modified":1724745173404},{"_id":"source/img/network-flow.jpg","hash":"72e4042ddea60cb431316a44bee267e99202be7c","modified":1724815588080},{"_id":"themes/redefine/.npmignore","hash":"79596a6faba67852ff4d0426602141426f48639f","modified":1718980386000},{"_id":"themes/redefine/.gitignore","hash":"9573fa414d4d41ccf48a3bdd2b183ac7dec484d5","modified":1718980386000},{"_id":"themes/redefine/CODE_OF_CONDUCT.md","hash":"61a6276ef54989b7a1325f3ecb3183a4dfdf50cb","modified":1718980386000},{"_id":"themes/redefine/DONATION.md","hash":"c04ce21a6a0ff9ccd31e792abd17fe6257c681ab","modified":1718980386000},{"_id":"themes/redefine/CONTRIBUTING.md","hash":"c6ef834f602b7ae02e2863a2a857e0ce8d392f15","modified":1718980386000},{"_id":"themes/redefine/LICENSE","hash":"1de7bacb4fbbd7b6d391a69abfe174c2509ec303","modified":1718980386000},{"_id":"themes/redefine/README.md","hash":"532badccacd8b17376b54d1042eee9599e8bb39f","modified":1718980386000},{"_id":"themes/redefine/README_zh-CN.md","hash":"c670a196349beb3c7512977ab650cac5ca3dcfb3","modified":1718980386000},{"_id":"themes/redefine/package.json","hash":"d79edcfb4eb38331ced023014131a780d73eaca1","modified":1718980386000},{"_id":"themes/redefine/vercel.json","hash":"357c1fd2678f8ae4a9a852a1a6888c8eca774551","modified":1718980386000},{"_id":"themes/redefine/.github/FUNDING.yml","hash":"7d7dc34bf08883dad940625ac098790bd1a50fb0","modified":1718980386000},{"_id":"themes/redefine/README_zh-TW.md","hash":"2fe52c3da506f864f536097c735179b00d11c341","modified":1718980386000},{"_id":"themes/redefine/_config.yml","hash":"2b53b886f2221579bf4cd8c729408f84f18c093e","modified":1725781811995},{"_id":"themes/redefine/languages/zh-CN.yml","hash":"1dfbae23bf1a4cd97b765ee177073ad87cbcb609","modified":1724760669608},{"_id":"themes/redefine/tailwind.config.js","hash":"27227462bb6dc16b57fcc75baa17e354f841b6e4","modified":1718980386000},{"_id":"themes/redefine/layout/404.ejs","hash":"8456f112fc12bbb1c83cd190d0ce83ee474bd297","modified":1718980386000},{"_id":"themes/redefine/layout/archive-content.ejs","hash":"2adfbb9954af9fcf2047c8abc85d4664d45167af","modified":1718980386000},{"_id":"themes/redefine/languages/ja.yml","hash":"8a125bb668274de2985f12f3eb9b9857e22e389f","modified":1718980386000},{"_id":"themes/redefine/layout/category-content.ejs","hash":"5c4fdc9c2b7f225edb7ebb2abf6925b81c5e698f","modified":1718980386000},{"_id":"themes/redefine/layout/archive.ejs","hash":"8456f112fc12bbb1c83cd190d0ce83ee474bd297","modified":1718980386000},{"_id":"themes/redefine/languages/en.yml","hash":"267bd9bcd1ae9a88bc5c21b17f5e10ebf27e1f4a","modified":1724818559443},{"_id":"themes/redefine/layout/category.ejs","hash":"8456f112fc12bbb1c83cd190d0ce83ee474bd297","modified":1718980386000},{"_id":"themes/redefine/languages/zh-TW.yml","hash":"84819d96f8c27f51ece8f1eabc74b9f79b16db2e","modified":1718980386000},{"_id":"themes/redefine/layout/category-list.ejs","hash":"4bd20b18bdf10dfdce5ddcddfac2605800d18973","modified":1718980386000},{"_id":"themes/redefine/layout/layout.ejs","hash":"f3c0168613a9c50461cf61dae0c8b46b437f7f57","modified":1725970566085},{"_id":"themes/redefine/layout/article-content.ejs","hash":"09ca378fcc8a8355f0503ed5fbe0dfe6b54a06b8","modified":1718980386000},{"_id":"themes/redefine/layout/tag.ejs","hash":"8456f112fc12bbb1c83cd190d0ce83ee474bd297","modified":1718980386000},{"_id":"themes/redefine/layout/index.ejs","hash":"f5fee4e079a9c2c23059ebde4cd89ec723e310c6","modified":1718980386000},{"_id":"themes/redefine/layout/tags.ejs","hash":"8456f112fc12bbb1c83cd190d0ce83ee474bd297","modified":1718980386000},{"_id":"themes/redefine/scripts/dataHandle.js","hash":"3a069d3f529dceed3fd98e99d5940989f1087305","modified":1718980386000},{"_id":"themes/redefine/layout/page.ejs","hash":"75fe42c1735b0669592eb81e46b62a748b685873","modified":1718980386000},{"_id":"themes/redefine/layout/tag-content.ejs","hash":"6134aa2a112b9d8daa3eeaf9a1ee41bbeaf7eb24","modified":1718980386000},{"_id":"themes/redefine/.github/ISSUE_TEMPLATE/bug-chinese.yml","hash":"5616b1ba5ddcd91755fce55fdb6d13022e5d39c0","modified":1718980386000},{"_id":"themes/redefine/.github/ISSUE_TEMPLATE/bug-english.yml","hash":"23bcdb79064f0e967258be662777c3a424140782","modified":1718980386000},{"_id":"themes/redefine/.github/ISSUE_TEMPLATE/enhancement-english.yml","hash":"e43dc9d37f8ad5cdfd12aacf6f85b71346ae6e9b","modified":1718980386000},{"_id":"themes/redefine/.github/ISSUE_TEMPLATE/enhancement-chinese.yml","hash":"b55c4e79ea4946318324c79b8be61a8ae16cc5c9","modified":1718980386000},{"_id":"themes/redefine/.github/workflows/aliyun-cdn-publish.yml","hash":"18975c5422509b0fb7c3b6ddd788eac65802781a","modified":1718980386000},{"_id":"themes/redefine/.github/workflows/preview-deployment.yml","hash":"d4ffce573836dfd5eaf3f247a4c1943462ade699","modified":1718980386000},{"_id":"themes/redefine/.github/workflows/production-deployment.yml","hash":"d411d426c6df79ac7e487401f0f11206c245d1c1","modified":1718980386000},{"_id":"themes/redefine/layout/_partials/404-template.ejs","hash":"e3574f623ea22ec3e90413909321a9a3b447f7e2","modified":1718980386000},{"_id":"themes/redefine/.github/workflows/stale-issues.yml","hash":"e51a46d8af88087fe7512885ec3a87df753c3776","modified":1718980386000},{"_id":"themes/redefine/layout/_meta/article-copyright.ejs","hash":"8e97d76ded33d1e334c376451e2f3d5fd177a958","modified":1718980386000},{"_id":"themes/redefine/layout/_meta/article-info.ejs","hash":"1d551beb7cc47d6c841ce63a7f0f0ffb30c1770b","modified":1718980386000},{"_id":"themes/redefine/layout/_meta/home-article.ejs","hash":"b54a0df26341fa5f26a6e1eedb91cd11014d50c5","modified":1718980386000},{"_id":"themes/redefine/layout/_partials/footer.ejs","hash":"0d43a31d74ffd558270e35c8a3c03d1778941d83","modified":1724745770306},{"_id":"themes/redefine/layout/_partials/home-background.ejs","hash":"dd120259ab091b8087d0194ea2291676556efad8","modified":1718980386000},{"_id":"themes/redefine/layout/_partials/head.ejs","hash":"370bcb956a4fd72465b21b416f4d30c9f873dba9","modified":1724829440247},{"_id":"themes/redefine/.github/workflows/npm-publish.yml","hash":"46bdc96146a893148bfbc37e47881aa25769d32c","modified":1718980386000},{"_id":"themes/redefine/layout/_partials/home-banner.ejs","hash":"5cc6d0a703c207e86c9def16c0885ec69b3c8658","modified":1718980386000},{"_id":"themes/redefine/layout/_partials/home-content.ejs","hash":"9443d55dd5ae33350fec8181b43057b93f831604","modified":1718980386000},{"_id":"themes/redefine/layout/_partials/home-sidebar.ejs","hash":"976d24d01194a9340957617db24b30f63c1ba66b","modified":1724742005823},{"_id":"themes/redefine/layout/_partials/navbar.ejs","hash":"bc2aa13a6bbb12eb7a4c0d7e5f1df965a2bde311","modified":1718980386000},{"_id":"themes/redefine/layout/_plugins/aplayer.ejs","hash":"c8f275cdbbe14b4673c69f7c1463b1f830ec8e40","modified":1718980386000},{"_id":"themes/redefine/layout/_partials/page-template.ejs","hash":"5d03f543ae291598ee227af758da73304a51633e","modified":1718980386000},{"_id":"themes/redefine/layout/_plugins/swup.ejs","hash":"9fbfd2872dfbe92ec715357d5238647987d8cbdf","modified":1718980386000},{"_id":"themes/redefine/layout/_partials/preloader.ejs","hash":"c75cbf929758610244e8cd2cffa919462bfb1238","modified":1718980386000},{"_id":"themes/redefine/layout/_partials/scripts.ejs","hash":"1f0219c25aa35f4129686f290e987a3f28b3869d","modified":1718980386000},{"_id":"themes/redefine/layout/_widgets/archive-list.ejs","hash":"d0dd3ef263f9cd0d5908a46a0f1c6b9ac64237e0","modified":1718980386000},{"_id":"themes/redefine/layout/_widgets/image-viewer.ejs","hash":"beb3dec5e08856a29d585fe0eb94a8a6ddade4dd","modified":1718980386000},{"_id":"themes/redefine/layout/_widgets/essays.ejs","hash":"e4332342b7dd95449c2a84edfe8323f54db6f4b5","modified":1718980386000},{"_id":"themes/redefine/layout/_widgets/paginator.ejs","hash":"a237e7b858e0cf32ca67553d540f7c5f7239a8d0","modified":1718980386000},{"_id":"themes/redefine/layout/_widgets/friends-link.ejs","hash":"bacaf6f0e958fa7d9be17a59d3a8bae4b9119501","modified":1718980386000},{"_id":"themes/redefine/layout/_widgets/post-tools.ejs","hash":"c2d193e84e0781423ce1c018ee2be1116359d694","modified":1718980386000},{"_id":"themes/redefine/layout/_widgets/progress-bar.ejs","hash":"4cab094eafc72b19662a7c9eb888e632d7bb15e7","modified":1718980386000},{"_id":"themes/redefine/layout/_widgets/tagcloud.ejs","hash":"640e40c859c610ae1d97b1fac7fb39b986b9f676","modified":1718980386000},{"_id":"themes/redefine/layout/_widgets/local-search.ejs","hash":"72c9acca0280f0e63e6a5d31618dd2707bdbec3f","modified":1718980386000},{"_id":"themes/redefine/layout/_widgets/toc.ejs","hash":"46ef94dca9be59d163f6b4cba16e1695e8020bc3","modified":1718980386000},{"_id":"themes/redefine/scripts/events/404.js","hash":"169245d7b2af1ff401cf76e718c28b4e38f637c7","modified":1718980386000},{"_id":"themes/redefine/scripts/events/welcome.js","hash":"79c297334542c7d8eec10bd1c10390422d26f20c","modified":1718980386000},{"_id":"themes/redefine/scripts/filters/encrypt.js","hash":"0daf029e7441426afcab94f5f9e1ed316e3b71f6","modified":1718980386000},{"_id":"themes/redefine/scripts/filters/imgHandle.js","hash":"b396fe7b6cbc331f2952aa7561f96c1f250d8c52","modified":1718980386000},{"_id":"themes/redefine/scripts/filters/lazyloadHandle.js","hash":"f8ae44311e6463e887c07a41910ebade8766bac2","modified":1718980386000},{"_id":"themes/redefine/scripts/filters/linkHandle.js","hash":"7d8cb128dbfed1a4ef9b07142a63ba0c6c383628","modified":1718980386000},{"_id":"themes/redefine/layout/_widgets/masonry.ejs","hash":"6b8ec5cff3dcf9f494b32237e6911c6e1e9dd9a1","modified":1718980386000},{"_id":"themes/redefine/scripts/filters/stylHandle.js","hash":"8a8bf069ce096bd7b42952c8e50c3c89758cbc13","modified":1718980386000},{"_id":"themes/redefine/scripts/filters/tableHandle.js","hash":"c500c45cd9221788df1f31939c5399eabb62ebb5","modified":1718980386000},{"_id":"themes/redefine/layout/_widgets/side-tools.ejs","hash":"3b6b75a902ba673f8f0a144db63bd144d0d5b648","modified":1718980386000},{"_id":"themes/redefine/scripts/helpers/articleRecommend.js","hash":"b9ede93bfd16af13871625d2d127bf79d99724d1","modified":1718980386000},{"_id":"themes/redefine/scripts/helpers/autoCanonical.js","hash":"f3ea74759129c71041371a1d77c687eb6aa88d3a","modified":1718980386000},{"_id":"themes/redefine/scripts/helpers/configExport.js","hash":"c1e5b36a8d8e97218c8cc1aab77ec38d5457c846","modified":1718980386000},{"_id":"themes/redefine/scripts/helpers/seoGenerate.js","hash":"e0059a60cc5978be6792dcf795a2ece3a509f41a","modified":1718980386000},{"_id":"themes/redefine/scripts/helpers/themeHelpers.js","hash":"fba0d764bff87988d253cdfb54fd373abe33b1c9","modified":1718980386000},{"_id":"themes/redefine/scripts/helpers/walineConfig.js","hash":"9f2c3d6c4c7cf6212d28be0729816cd66921bd67","modified":1718980386000},{"_id":"themes/redefine/scripts/modules/btn.js","hash":"aa7a34ff5fb0a624163c38fffe0746cef44d2ea3","modified":1718980386000},{"_id":"themes/redefine/scripts/modules/btns.js","hash":"a91492e772287114527a3fbc85f0c7c1c1b15eb3","modified":1718980386000},{"_id":"themes/redefine/scripts/modules/folding.js","hash":"cfa6646c1350c557430149bd52578c6cac59063b","modified":1718980386000},{"_id":"themes/redefine/scripts/modules/note-large.js","hash":"b3e19b9a5c57e3e029bf9ead84aac750f799a9b3","modified":1718980386000},{"_id":"themes/redefine/scripts/modules/note.js","hash":"8fc9f2e7d78fe2d1644828d8a79e2c48597f6103","modified":1718980386000},{"_id":"themes/redefine/scripts/modules/tabs.js","hash":"74e3b0cdd009206f7b78b04dcb96eccd86e7a996","modified":1718980386000},{"_id":"themes/redefine/source/assets/hbe.style.css","hash":"29be8fc47be885e9954e310cbc68dfadd3b4cee6","modified":1718980386000},{"_id":"themes/redefine/source/assets/odometer-theme-minimal.css","hash":"793c31feb38e241a5ff6ecc5e65e61751507d728","modified":1718980386000},{"_id":"themes/redefine/source/css/style.styl","hash":"d9450b06a5391ba6f62690bfef2071a1c8e7e893","modified":1718980386000},{"_id":"themes/redefine/source/fontawesome/brands.min.css","hash":"5119c35bbd273d2ea2501997827f6d644da93164","modified":1718980386000},{"_id":"themes/redefine/source/fontawesome/light.min.css","hash":"18a176eb2486db4e938e568083fa578b641ccc83","modified":1718980386000},{"_id":"themes/redefine/source/fontawesome/regular.min.css","hash":"d27c4fed54dacff688010e51f611d950dd6e0aca","modified":1718980386000},{"_id":"themes/redefine/source/fontawesome/sharp-solid.min.css","hash":"7d1a13c6b8178b29f5bcb1a639a1998fc9de16c4","modified":1718980386000},{"_id":"themes/redefine/source/fontawesome/solid.min.css","hash":"e727feabedb171fb0b398151870d7739ef4e2432","modified":1718980386000},{"_id":"themes/redefine/source/fontawesome/thin.min.css","hash":"3d46be31379b07ffb24d69c6c915725eaa2e89e9","modified":1718980386000},{"_id":"themes/redefine/source/fontawesome/svg-with-js.min.css","hash":"f4c08e37c4d44b3ed7a3f377d1cb5d7fca4d04bc","modified":1718980386000},{"_id":"themes/redefine/source/images/Xlon-WU.png","hash":"c5908311f5591e5f683f4931b109402906718db0","modified":1724160522469},{"_id":"themes/redefine/source/fontawesome/v4-font-face.min.css","hash":"0be987628c8b485b39f064da41c90f15c0596c1f","modified":1718980386000},{"_id":"themes/redefine/source/images/loading.svg","hash":"938c2a41c8ba18e37ed659e481696e40a4c8f3a4","modified":1718980386000},{"_id":"themes/redefine/source/fontawesome/v4-shims.min.css","hash":"96f037860b8e9b59af8e47571ea98791616dbfd8","modified":1718980386000},{"_id":"themes/redefine/source/fontawesome/v5-font-face.min.css","hash":"260ea7a5e0b89963a5dcf2600a4decdf0f408f3f","modified":1718980386000},{"_id":"themes/redefine/source/images/redefine-avatar.svg","hash":"d0d20061bda08894a82d7691b660be7c6aaa0608","modified":1718980386000},{"_id":"themes/redefine/source/images/redefine-favicon.svg","hash":"420f930a1df64a3c4391ff80326a8a2d7d5a6418","modified":1718980386000},{"_id":"themes/redefine/source/images/redefine-logo.svg","hash":"472776b6f013aad44706fee6c94201c96ee83932","modified":1718980386000},{"_id":"themes/redefine/source/images/wallhaven-wqery6-dark.webp","hash":"d0066e0b025ae748448a3d6a96165d45a55d2f22","modified":1718980386000},{"_id":"themes/redefine/source/images/redefine-logo.webp","hash":"0a07e3fb6d9125dee44798c8c110187b16fb42a9","modified":1718980386000},{"_id":"themes/redefine/source/images/wallhaven-wqery6-light.webp","hash":"d25389973d0359b78f1e9c74a850ef425690ba40","modified":1718980386000},{"_id":"themes/redefine/source/js/main.js","hash":"9d1d5167d8b966786268841abdf3c1639fd6d13a","modified":1718980386000},{"_id":"themes/redefine/source/js/firework.js","hash":"f4db481a0422afb08b10d8189fa92a1433da46b0","modified":1725802986000},{"_id":"themes/redefine/source/live2d-widget/.gitignore","hash":"c1ab1464f9ac7ebdb1902860b987a68ba0765c65","modified":1708939733000},{"_id":"themes/redefine/source/images/城南花已开.jpg","hash":"56de3e837653874aef1393216f9c0249ca57bbee","modified":1725627228430},{"_id":"themes/redefine/source/js/utils.js","hash":"00fe71414bf6a95bd4438cb301cf9096df90c46c","modified":1718980386000},{"_id":"themes/redefine/source/live2d-widget/LICENSE","hash":"31a3d460bb3c7d98845187c716a30db81c44b615","modified":1708939733000},{"_id":"themes/redefine/source/live2d-widget/README.md","hash":"ca3e014a5ab975ea1283f264b22142a24a6cf603","modified":1708939733000},{"_id":"themes/redefine/source/live2d-widget/README.en.md","hash":"7eba7f3f2bd2eb63c45272500172dfeb8c614f72","modified":1708939733000},{"_id":"themes/redefine/source/live2d-widget/autoload.js","hash":"e298781500f39626d5c62b46f37450f7938186c0","modified":1724749772716},{"_id":"themes/redefine/source/live2d-widget/rollup.config.js","hash":"3489dc2bf3ce120c86c1551fdd674a3a8c2881a6","modified":1708939733000},{"_id":"themes/redefine/source/live2d-widget/package.json","hash":"02c2acc648ec88aa81c9262a33847aba50e87d6b","modified":1708939733000},{"_id":"themes/redefine/source/live2d-widget/waifu-tips.js","hash":"42f8b07fd15a74483981e59972ee7e8b8e917598","modified":1724753305288},{"_id":"themes/redefine/source/live2d-widget/waifu-tips.json","hash":"ac969016a67c962336aabba5641681bb350f5785","modified":1708939733000},{"_id":"themes/redefine/source/live2d-widget/waifu.css","hash":"20500dafb16ecb0c18e760aaadac07b023baa15a","modified":1708939733000},{"_id":"themes/redefine/source/webfonts/fa-v4compatibility.ttf","hash":"b54531dd09c5089eb93b12ce8f90ff521855ff8a","modified":1718980386000},{"_id":"themes/redefine/source/webfonts/fa-v4compatibility.woff2","hash":"d02b1adc81fd5bec023e25a7770779b99d6dd742","modified":1718980386000},{"_id":"themes/redefine/layout/_partials/comments/comment.ejs","hash":"e0c2e22351d2740e7f7584028a9ea7c87f26372f","modified":1718980386000},{"_id":"themes/redefine/layout/_partials/comments/giscus.ejs","hash":"5a20975c17daeed5a602dedd0682a29d7c56e42f","modified":1718980386000},{"_id":"themes/redefine/layout/_partials/sidebar-components/author.ejs","hash":"422aed0f3f67529c1ea87ee43f8f680ffc531b45","modified":1718980386000},{"_id":"themes/redefine/layout/_partials/comments/gitalk.ejs","hash":"1e1cf5e5f883f2bde0a76d6edb1d42bbd125c313","modified":1718980386000},{"_id":"themes/redefine/layout/_partials/comments/twikoo.ejs","hash":"2945e818e4406fbb5628a465023c7e4d445c0975","modified":1718980386000},{"_id":"themes/redefine/layout/_partials/sidebar-components/avatar.ejs","hash":"47cd8318471493c82f5e5983550145d4fd0a2ddc","modified":1718980386000},{"_id":"themes/redefine/scripts/filters/lib/hbe.default.js","hash":"fee2c92011ef007121b992193bbab0f3b196d873","modified":1718980386000},{"_id":"themes/redefine/layout/_partials/comments/waline.ejs","hash":"35239e49743c6b7f40014bd753bff9c415b5fcbb","modified":1718980386000},{"_id":"themes/redefine/layout/_partials/sidebar-components/statistics.ejs","hash":"4329363d232de541e1cb8f24eb59c1a8bacc9b9c","modified":1718980386000},{"_id":"themes/redefine/source/assets/build/styles.css","hash":"7fce3d8245ba8d012d32870baddc870860e512fc","modified":1718980386000},{"_id":"themes/redefine/source/css/common/animated.styl","hash":"ab52b066c427cee62d67e4da136878114c7b1afe","modified":1718980386000},{"_id":"themes/redefine/source/css/common/basic.styl","hash":"0493e7ae8c2b07cf1172fa1b68ea1ec74795878b","modified":1718980386000},{"_id":"themes/redefine/source/css/common/redefine-theme.styl","hash":"ff099b1959829e3070e5077c4a3b13e1c1573e79","modified":1718980386000},{"_id":"themes/redefine/source/css/layout/archive-content.styl","hash":"4e329547447c716c986e0b4a4f54afc59fc6b486","modified":1718980386000},{"_id":"themes/redefine/source/css/common/variables.styl","hash":"233cce0c26fb59327a1a308a869aeb6faf4782f8","modified":1718980386000},{"_id":"themes/redefine/source/css/common/markdown.styl","hash":"19dbca4623d9fc7005d4a3447eb5a3b669cb8425","modified":1718980386000},{"_id":"themes/redefine/source/css/layout/article-content.styl","hash":"2328b11599e30e84aa3e801e177f11ad45abc0f4","modified":1718980386000},{"_id":"themes/redefine/source/css/layout/home-content.styl","hash":"3f6900c804c9e9d5a8009cbe974a0e3eb88549a2","modified":1718980386000},{"_id":"themes/redefine/source/css/layout/category-content.styl","hash":"4f9a5559b5269ec74b5f49ac113268f747bf0243","modified":1718980386000},{"_id":"themes/redefine/source/css/layout/tag-content.styl","hash":"6c9ec582c1d8699bdff5a4cd1524121cc6ca8522","modified":1718980386000},{"_id":"themes/redefine/source/css/layout/category-list.styl","hash":"d33a8d0e8f2d58d759bf7b9da69c2aa6a0d9f433","modified":1718980386000},{"_id":"themes/redefine/source/css/layout/home-sidebar.styl","hash":"fe46f60124505310449ec76f7dd09795a73491e3","modified":1718980386000},{"_id":"themes/redefine/source/css/layout/page.styl","hash":"e5c0b44623d18d0c2674069b3796546dd9857b8d","modified":1718980386000},{"_id":"themes/redefine/source/fonts/Chillax/Chillax-Variable.woff","hash":"fc0e791429c274c4c9312d810e7ae9503cab34ab","modified":1718980386000},{"_id":"themes/redefine/source/fonts/Chillax/Chillax-Variable.woff2","hash":"fc5d99b40db9deca7d151f9bd16b96ff160828b7","modified":1718980386000},{"_id":"themes/redefine/source/fonts/Chillax/chillax.css","hash":"210179f53c6bce91a12ca6db9129184cc1549c36","modified":1718980386000},{"_id":"themes/redefine/source/fonts/Geist/geist.css","hash":"17f37a09d6192f06b2190f8319114238b0a2ec8c","modified":1718980386000},{"_id":"themes/redefine/source/fonts/Geist/GeistVF.woff2","hash":"772998a8569a6caa04927d876fbe9e0fb859658b","modified":1718980386000},{"_id":"themes/redefine/source/fonts/GeistMono/geist-mono.css","hash":"b89d5af7e04df579c8ad62c0ea445ff7d16eec11","modified":1718980386000},{"_id":"themes/redefine/source/js/layouts/lazyload.js","hash":"c06323d68bbdebbb685db5010e7655b8ed0caf42","modified":1718980386000},{"_id":"themes/redefine/source/js/layouts/toc.js","hash":"7a768982f6cb1f40552cce063d5743fe862db762","modified":1718980386000},{"_id":"themes/redefine/source/fonts/GeistMono/GeistMonoVF.woff2","hash":"11e9a061ce255fc4cc45ac3eeb8cab09a49f5ccc","modified":1718980386000},{"_id":"themes/redefine/source/js/layouts/categoryList.js","hash":"eb1af2cd0726f56ff7861222ea543315fe295a17","modified":1718980386000},{"_id":"themes/redefine/source/js/layouts/navbarShrink.js","hash":"3e80bf9ef719b2ddb2d1c4b67eb169d2ef52dbb8","modified":1718980386000},{"_id":"themes/redefine/source/js/libs/APlayer.min.js","hash":"22caa28ff6b41a16ff40f15d38f1739e22359478","modified":1718980386000},{"_id":"themes/redefine/source/js/libs/Swup.min.js","hash":"cc054d34e74a1feecfae75064f6a4d6107607396","modified":1718980386000},{"_id":"themes/redefine/source/js/libs/SwupPreloadPlugin.min.js","hash":"d911512891ecbe1935203bcd3d93427ad75e45c8","modified":1718980386000},{"_id":"themes/redefine/source/js/libs/SwupPreloadPlugin.min.js.map","hash":"40513fec1323b601667876a97a9ef8a0c88bff63","modified":1718980386000},{"_id":"themes/redefine/source/js/libs/SwupProgressPlugin.min.js","hash":"fd30fe1c43072017f67bbaac18b962a5ac218711","modified":1718980386000},{"_id":"themes/redefine/source/js/libs/SwupScriptsPlugin.min.js","hash":"b17f3434035f1339d6f9cd5c8a055d2a1b6602e9","modified":1718980386000},{"_id":"themes/redefine/source/js/libs/SwupScrollPlugin.min.js","hash":"6c3afca9bb98f79d14516c093f27e3e50a3fd82e","modified":1718980386000},{"_id":"themes/redefine/source/js/libs/SwupScrollPlugin.min.js.map","hash":"63cf04ba556b256379e103ef7d3ba12d629449a4","modified":1718980386000},{"_id":"themes/redefine/source/js/libs/SwupSlideTheme.min.js","hash":"e9d143780e879d958164b1356b7f918ec25e838a","modified":1718980386000},{"_id":"themes/redefine/source/js/libs/Typed.min.js","hash":"e8ce2b674a637b0c0396a3106c1aedf10186249c","modified":1718980386000},{"_id":"themes/redefine/source/js/libs/anime.min.js","hash":"47cb482a8a488620a793d50ba8f6752324b46af3","modified":1718980386000},{"_id":"themes/redefine/source/js/libs/minimasonry.min.js","hash":"9681cc509cb8aa733d36aad032e6e8acdb33c08c","modified":1718980386000},{"_id":"themes/redefine/source/js/libs/odometer.min.js","hash":"fe5beb60997c84ab2f91b54535c4221443cdd21f","modified":1718980386000},{"_id":"themes/redefine/source/js/libs/pjax.min.js","hash":"3d796e5be9cdd4067c94e190ea2482d7fdb4856c","modified":1718980386000},{"_id":"themes/redefine/source/js/plugins/aplayer.js","hash":"1b7d9dff8db52b14825775fd55054c6adf269bf7","modified":1718980386000},{"_id":"themes/redefine/source/js/plugins/mermaid.js","hash":"303254d382869ed618025fcb328426bd10314583","modified":1718980386000},{"_id":"themes/redefine/source/js/plugins/masonry.js","hash":"92734a30a21f8b16f20aa75208f6c082890275fb","modified":1718980386000},{"_id":"themes/redefine/source/js/plugins/tabs.js","hash":"964ec5c25a8d78763ba2ba9bfbd5b1b49ed05381","modified":1718980386000},{"_id":"themes/redefine/source/js/plugins/typed.js","hash":"01799d5c07633f33b1d2893f524054074d56ec65","modified":1718980386000},{"_id":"themes/redefine/source/js/tools/codeBlock.js","hash":"344e6c83e6ffda22f6e5bc724d603066b49a7d8b","modified":1718980386000},{"_id":"themes/redefine/source/js/tools/imageViewer.js","hash":"f2ed02b6489c601821cd257c6ffa28c25f07bdd7","modified":1718980386000},{"_id":"themes/redefine/source/js/tools/lightDarkSwitch.js","hash":"97b7e68f871dc218fceca77b85ac051c7c6306af","modified":1718980386000},{"_id":"themes/redefine/source/js/tools/localSearch.js","hash":"f6e59f65c676457198c2cf5d78bd06052499ee38","modified":1718980386000},{"_id":"themes/redefine/source/js/tools/runtime.js","hash":"eb0374b6f033f7ac25f49b1b079aa163e14b0fcd","modified":1718980386000},{"_id":"themes/redefine/source/js/tools/scrollTopBottom.js","hash":"9e54fa4310bb98ea5ba61780a9ef56d05d475203","modified":1718980386000},{"_id":"themes/redefine/source/js/tools/tocToggle.js","hash":"c2224ff0370fcf109e94194613b9480a3913c82d","modified":1718980386000},{"_id":"themes/redefine/source/live2d-widget/assets/screenshot-1.png","hash":"4bd4d97a1fcaa5deb3cea1c0a102a895a15af32f","modified":1708939733000},{"_id":"themes/redefine/source/js/plugins/hbe.js","hash":"abd3b27238e26dc3bdd65e0e69fa514fa432a75b","modified":1718980386000},{"_id":"themes/redefine/source/live2d-widget/demo/login.html","hash":"8dc655b672cfa104db95687168b6268602f2c243","modified":1708939733000},{"_id":"themes/redefine/source/live2d-widget/src/index.js","hash":"a2670fe54cba051e0ad47048603c7630e5b613b4","modified":1708939733000},{"_id":"themes/redefine/source/live2d-widget/demo/demo.html","hash":"128c05b681c9579b84d91a1d15d925904ef92814","modified":1708939733000},{"_id":"themes/redefine/source/live2d-widget/src/message.js","hash":"595e2090df09ef1e50916b6d4b12a8fe30377b27","modified":1708939733000},{"_id":"themes/redefine/source/live2d-widget/src/utils.js","hash":"cf0bf51117a9044dc26373854caa8b622f043d78","modified":1708939733000},{"_id":"themes/redefine/source/live2d-widget/src/waifu-tips.js","hash":"7887603444c52f54875541a111b9a6632bac970a","modified":1708939733000},{"_id":"themes/redefine/source/live2d-widget/src/model.js","hash":"a7742f3940bd157582c968f85feba299a1d3a783","modified":1708939733000},{"_id":"themes/redefine/source/live2d-widget/src/tools.js","hash":"d3fd7073b6352c9be4227a386ca84d910f83d4e9","modified":1708939733000},{"_id":"themes/redefine/source/css/common/codeblock/code-block.styl","hash":"0593c3555640bb9132caaccac9821225ea3b97c8","modified":1718980386000},{"_id":"themes/redefine/source/css/common/codeblock/code-theme.styl","hash":"a3cc2e7a83a8ed575681f6cb6e3b4ef205689c2a","modified":1718980386000},{"_id":"themes/redefine/source/css/common/codeblock/highlight.styl","hash":"2d498609f0b4608e6346d100d3effad0c4aa2c54","modified":1718980386000},{"_id":"themes/redefine/source/css/layout/_modules/aplayer.styl","hash":"b1f09f6b407586cf164533d0f910a0ffb95f2d1d","modified":1724826346935},{"_id":"themes/redefine/source/css/layout/_modules/buttons.styl","hash":"18bd3c1d00e2cc6416cef69433b207ae5c947ba1","modified":1718980386000},{"_id":"themes/redefine/source/css/layout/_partials/404.styl","hash":"16215f6fe664d1ddc5744a626405bc774dc30f70","modified":1718980386000},{"_id":"themes/redefine/source/css/layout/_modules/folding.styl","hash":"b5e5c2407eb83ae4b3ee4ed73490dcd41edef705","modified":1718980386000},{"_id":"themes/redefine/source/css/layout/_modules/notes.styl","hash":"37b2a4a0669414c74498ed0ecae873c90b15fe6e","modified":1718980386000},{"_id":"themes/redefine/source/css/layout/_modules/tabs.styl","hash":"fb5f2f223f7d4ed86d3693fdc0977362f456212e","modified":1718980386000},{"_id":"themes/redefine/source/css/layout/_partials/archive-list.styl","hash":"1c869018d795c06d34738d4924e207bab9571f59","modified":1718980386000},{"_id":"themes/redefine/source/css/layout/_partials/article-copyright-info.styl","hash":"12fad2f674e8a7ad009cabecf4e98b65d5ed8b1e","modified":1718980386000},{"_id":"themes/redefine/source/css/layout/_partials/article-meta-info.styl","hash":"1f680910751b36c4445a48c5a48eda3187412eaf","modified":1718980386000},{"_id":"themes/redefine/source/css/layout/_partials/footer.styl","hash":"b9028c74a9f75536d5a7cee77a25a5d77469515a","modified":1718980386000},{"_id":"themes/redefine/source/css/layout/_partials/home-banner.styl","hash":"39b3753f86bf30b6eb5276cc2a2aa43e7729a303","modified":1718980386000},{"_id":"themes/redefine/source/css/layout/_partials/image-viewer.styl","hash":"6c8eeb7a96cae110cd9a684a3a5076148b8154d8","modified":1718980386000},{"_id":"themes/redefine/source/css/layout/_partials/local-search.styl","hash":"a9c99c57b27afbe7f00f1f14f0e46c41748affb5","modified":1718980386000},{"_id":"themes/redefine/source/css/layout/_partials/navbar.styl","hash":"dea655ebe2bbf57324da195e42185a4df2c7946a","modified":1718980386000},{"_id":"themes/redefine/source/css/layout/_partials/page-template.styl","hash":"c57dccb2fdc13fc7bceb730c7b0eda9590557bd9","modified":1718980386000},{"_id":"themes/redefine/source/css/layout/_partials/paginator.styl","hash":"53421b731f3d7ed34a3a4c87405e06ae3d6519e0","modified":1718980386000},{"_id":"themes/redefine/source/css/layout/_partials/progress-bar.styl","hash":"d3715280d9b62d89ccd1b79ab5e5f030669f4d88","modified":1718980386000},{"_id":"themes/redefine/source/css/layout/_partials/side-tools.styl","hash":"995982b8c228f7386d352042f64587d06663716e","modified":1718980386000},{"_id":"themes/redefine/source/css/layout/_partials/comments/comment.styl","hash":"71529ec72f356c78f75a752e5400c1197aa5ea96","modified":1718980386000},{"_id":"themes/redefine/source/css/layout/_partials/tagcloud.styl","hash":"756f84cf4ac8c21a169c60c8f227954a09218bee","modified":1718980386000},{"_id":"themes/redefine/source/css/layout/_partials/post-tools.styl","hash":"d602c2fe191d2c639f7cd8c4d0ee618f8c80f5c1","modified":1718980386000},{"_id":"themes/redefine/source/css/layout/_partials/toc.styl","hash":"13949981a5afa2b0483da1836af5999d992961f9","modified":1718980386000},{"_id":"themes/redefine/source/css/layout/_partials/comments/gitalk.styl","hash":"85f26189ec6dee13a0a743687e7b5391f170c33f","modified":1718980386000},{"_id":"themes/redefine/source/css/layout/_partials/comments/waline.styl","hash":"0663e8e50eff65afb4dbcbc7c4758d8acdd1d368","modified":1718980386000},{"_id":"themes/redefine/package-lock.json","hash":"c34cc2d5f2a7703bcf38c029008f2b43c4870545","modified":1718980386000},{"_id":"themes/redefine/source/css/layout/_partials/comments/twikoo.styl","hash":"448cbc045bcffa2d666094b81dd99eb980676fff","modified":1718980386000},{"_id":"themes/redefine/source/webfonts/fa-brands-400.woff2","hash":"a358912d781e6249a8d291e4ce9ebd0a9ab9452e","modified":1718980386000},{"_id":"themes/redefine/source/fonts/Geist/GeistVF.ttf","hash":"9a531509e4e768e9102d11f5d7d293e3f04d9c64","modified":1718980386000},{"_id":"themes/redefine/source/fonts/Geist/GeistVF.woff","hash":"d06c767b3837999a8b98426e4eb16ca0a8080880","modified":1718980386000},{"_id":"themes/redefine/source/fonts/GeistMono/GeistMonoVF.ttf","hash":"d72ec9d729305fc24f38e1ba69174e93b700cd69","modified":1718980386000},{"_id":"themes/redefine/source/fonts/GeistMono/GeistMonoVF.woff","hash":"fd8c986a8767d59a36e2d194299466720c916ee2","modified":1718980386000},{"_id":"themes/redefine/source/js/libs/Swup.min.js.map","hash":"f74755d9318a86939791027767f631472b876207","modified":1718980386000},{"_id":"themes/redefine/source/fontawesome/fontawesome.min.css","hash":"44e6d666b45a6875e4fce11159876129e7a1cceb","modified":1718980386000},{"_id":"themes/redefine/source/live2d-widget/live2d.min.js","hash":"94383fb61de815c3f806ae3f11026bbcfe384082","modified":1708939733000},{"_id":"themes/redefine/source/webfonts/fa-brands-400.ttf","hash":"ba9322d66c19f635e15e458cc39fcb509818332f","modified":1718980386000},{"_id":"themes/redefine/source/fonts/Chillax/Chillax-Variable.eot","hash":"50a4e2ab17155fe7449e0ee488a6242180f3b256","modified":1718980386000},{"_id":"themes/redefine/source/fonts/Chillax/Chillax-Variable.ttf","hash":"01aafadc0ca4ace59127a5594a8f534e83b84879","modified":1718980386000},{"_id":"themes/redefine/source/js/libs/APlayer.min.js.map","hash":"31a19da0f0cb6b00ec212eafa847f31af86788df","modified":1718980386000},{"_id":"themes/redefine/source/js/libs/waline.mjs","hash":"d94e0f396776a003b603d6e90a732a548c2fda33","modified":1718980386000},{"_id":"themes/redefine/source/webfonts/fa-sharp-solid-900.woff2","hash":"74d0af1108ab8157993ca03cef80e89e35e2408d","modified":1718980386000},{"_id":"themes/redefine/source/live2d-widget/assets/screenshot-3.png","hash":"f89c6fdf44008e7d3c7a1aafe65dc39b212edb6c","modified":1708939733000},{"_id":"themes/redefine/source/fontawesome/duotone.min.css","hash":"0becc4b085bd9d377a8ff4b5160f8e19c8ec27a0","modified":1718980386000},{"_id":"themes/redefine/source/webfonts/fa-solid-900.woff2","hash":"e73d164db2aff2c91d18c07da03e8db9d0c5dfd4","modified":1718980386000},{"_id":"themes/redefine/source/live2d-widget/assets/screenshot-2.png","hash":"76b844653136184c573b3632e12296e008a7ff5c","modified":1708939733000},{"_id":"themes/redefine/source/webfonts/fa-light-300.woff2","hash":"def760895375328ccdcf62b2b9b9001a21947acd","modified":1718980386000},{"_id":"themes/redefine/source/webfonts/fa-duotone-900.woff2","hash":"2cc24434345b80a844a6bda1139539fe41e4df53","modified":1718980386000},{"_id":"themes/redefine/source/webfonts/fa-regular-400.woff2","hash":"486fed640153de1de84f460834c73daef060ed20","modified":1718980386000},{"_id":"themes/redefine/source/fontawesome/all.min.css","hash":"630bf0e29410ec27622f65d1270c6bc435cdff21","modified":1718980386000},{"_id":"themes/redefine/source/webfonts/fa-thin-100.woff2","hash":"e0a4482c20f6b67784df54965539a317a3bd681b","modified":1718980386000},{"_id":"themes/redefine/source/webfonts/fa-sharp-solid-900.ttf","hash":"0d710cd7bd1b7ff574e88bb812de82babe45e415","modified":1718980386000},{"_id":"themes/redefine/source/webfonts/fa-solid-900.ttf","hash":"40b536c3667547db70ee9ca6f3c94fbc33e0cab7","modified":1718980386000},{"_id":"themes/redefine/source/js/libs/mermaid.min.js","hash":"c11ca6043d8dae028448a808105f8c888faac8f5","modified":1718980386000},{"_id":"themes/redefine/source/webfonts/fa-regular-400.ttf","hash":"cdec068700dc440530e5bbeff7e8bb33a01b4132","modified":1718980386000},{"_id":"themes/redefine/source/js/libs/waline.mjs.map","hash":"37c5b3e6aa5e1b70358426345a1a1329d6b896d3","modified":1718980386000},{"_id":"source/img/solution-luogu-p3365-banner.png","hash":"dfad3915fa348a007ed735b75235e70f939911ce","modified":1724761644597},{"_id":"themes/redefine/source/webfonts/fa-light-300.ttf","hash":"cc5d9f4f994c82e23f58cdde1eec8792d81633c7","modified":1718980386000},{"_id":"source/img/welcome.jpg","hash":"a2635ca7d525a088417659408e9964f422fe9f3d","modified":1724767475549},{"_id":"themes/redefine/source/webfonts/fa-thin-100.ttf","hash":"c1fee6e6986b14533ce022afada5fbe10c0f6562","modified":1718980386000},{"_id":"themes/redefine/source/webfonts/fa-duotone-900.ttf","hash":"e0313a772ea710cb5ea4bd08f5dedb0a0025f8ca","modified":1718980386000},{"_id":"source/music/城南花已开.m4a","hash":"97abb7687dda66df3be4db02a586f577d95245dc","modified":1725626988026},{"_id":"themes/redefine/source/js/libs/mermaid.min.js.map","hash":"7d303cf926754817c4360f92e6c39b8c390cdbdb","modified":1718980386000},{"_id":"themes/redefine/source/music/城南花已开.m4a","hash":"97abb7687dda66df3be4db02a586f577d95245dc","modified":1725626988026},{"_id":"public/404.html","hash":"0da5eb8bf9a8138fd0588c0478aa2248629a7fc0","modified":1725970582968},{"_id":"public/tags/index.html","hash":"9005a9d0849af390d7860e939c431de69676c74f","modified":1725970582968},{"_id":"public/2024/09/02/solution-at-arc073d/index.html","hash":"2032553508b8b935a94fd93fc56b83d406c9931d","modified":1725970582968},{"_id":"public/2024/08/28/network-flow-24-problem/index.html","hash":"92f02a89d4810998f969d1cdbf12987193367741","modified":1725970582968},{"_id":"public/2024/08/28/solution-luogu-p10447/index.html","hash":"5228ac19501b5800645a2dc9ac98c6d4aa2a57bb","modified":1725970582968},{"_id":"public/2024/08/27/solution-luogu-p3210/index.html","hash":"70718cc8d7438fc9f08707d4b31d2a57b107d140","modified":1725970582968},{"_id":"public/2024/08/27/solution-luogu-p3356/index.html","hash":"8066582f0061f6ad22e83720984923adc58e8c51","modified":1725970582968},{"_id":"public/2024/08/26/welcome-to-this-blog/index.html","hash":"c1d842700d519015531131c27c538706fe429f2f","modified":1725970582968},{"_id":"public/archives/index.html","hash":"15a71ce3a9242019e2b34938d704b3e2ad0e54c7","modified":1725970582968},{"_id":"public/archives/2024/index.html","hash":"859ce96dcb3b56e5d8c35df773ecc01c1ab62605","modified":1725970582968},{"_id":"public/archives/2024/08/index.html","hash":"d81fd6555a3050aa7f5e21fcbe27b484f8b239aa","modified":1725970582968},{"_id":"public/archives/2024/09/index.html","hash":"10310585c244e8e8315ea44b50f654d35846374b","modified":1725970582968},{"_id":"public/index.html","hash":"c0141038ee7c2d3f45608dfefd42ba5d62e4e6c5","modified":1725970582968},{"_id":"public/tags/转载/index.html","hash":"72857d257118005c414dd78f38996e2216e34c0a","modified":1725970582968},{"_id":"public/tags/网络流/index.html","hash":"66fb93a9ec30ce701b4330a4046f46b3bea6ed65","modified":1725970582968},{"_id":"public/tags/题解/index.html","hash":"0d3a121b5971ac5eb917f813d9ede0a763ba5884","modified":1725970582968},{"_id":"public/tags/线段树/index.html","hash":"091631fc4ef8b0480492d6051899497c9fb223ed","modified":1725970582968},{"_id":"public/tags/动态规划/index.html","hash":"a45a64e6c262f2d4804055d47b70efc6c90c4a62","modified":1725970582968},{"_id":"public/tags/知识/index.html","hash":"21e24916166d16bd16716655a4ca34d0e7c0fbeb","modified":1725970582968},{"_id":"public/tags/博弈论/index.html","hash":"697e95fe1e4b8c89524f5da25cd2e8ab96198958","modified":1725970582968},{"_id":"public/tags/费用流/index.html","hash":"b21b27aa6ee935440107b5c2394614f40e057bd6","modified":1725970582968},{"_id":"public/tags/系统/index.html","hash":"812d40842a5bbde898c21f3892ee87d70bc22ca4","modified":1725970582968},{"_id":"public/img/solution-luogu-p3210-1.png","hash":"10d9fbe01448de83aa346c5225169dc350acded8","modified":1725629902914},{"_id":"public/img/solution-luogu-p3210-2.png","hash":"3cc0e881d96dbc10481269d936e0d333042ac5c5","modified":1725629902914},{"_id":"public/images/Xlon-WU.png","hash":"c5908311f5591e5f683f4931b109402906718db0","modified":1725629902914},{"_id":"public/images/loading.svg","hash":"938c2a41c8ba18e37ed659e481696e40a4c8f3a4","modified":1725629902914},{"_id":"public/images/redefine-avatar.svg","hash":"d0d20061bda08894a82d7691b660be7c6aaa0608","modified":1725629902914},{"_id":"public/images/redefine-favicon.svg","hash":"420f930a1df64a3c4391ff80326a8a2d7d5a6418","modified":1725629902914},{"_id":"public/images/redefine-logo.svg","hash":"472776b6f013aad44706fee6c94201c96ee83932","modified":1725629902914},{"_id":"public/images/redefine-logo.webp","hash":"0a07e3fb6d9125dee44798c8c110187b16fb42a9","modified":1725629902914},{"_id":"public/images/wallhaven-wqery6-dark.webp","hash":"d0066e0b025ae748448a3d6a96165d45a55d2f22","modified":1725629902914},{"_id":"public/images/wallhaven-wqery6-light.webp","hash":"d25389973d0359b78f1e9c74a850ef425690ba40","modified":1725629902914},{"_id":"public/images/城南花已开.jpg","hash":"56de3e837653874aef1393216f9c0249ca57bbee","modified":1725629902914},{"_id":"public/live2d-widget/LICENSE","hash":"31a3d460bb3c7d98845187c716a30db81c44b615","modified":1725629902914},{"_id":"public/webfonts/fa-v4compatibility.ttf","hash":"b54531dd09c5089eb93b12ce8f90ff521855ff8a","modified":1725629902914},{"_id":"public/webfonts/fa-v4compatibility.woff2","hash":"d02b1adc81fd5bec023e25a7770779b99d6dd742","modified":1725629902914},{"_id":"public/fonts/Chillax/Chillax-Variable.woff","hash":"fc0e791429c274c4c9312d810e7ae9503cab34ab","modified":1725629902914},{"_id":"public/fonts/Chillax/Chillax-Variable.woff2","hash":"fc5d99b40db9deca7d151f9bd16b96ff160828b7","modified":1725629902914},{"_id":"public/fonts/Geist/GeistVF.woff2","hash":"772998a8569a6caa04927d876fbe9e0fb859658b","modified":1725629902914},{"_id":"public/fonts/GeistMono/GeistMonoVF.woff2","hash":"11e9a061ce255fc4cc45ac3eeb8cab09a49f5ccc","modified":1725629902914},{"_id":"public/js/libs/SwupPreloadPlugin.min.js.map","hash":"40513fec1323b601667876a97a9ef8a0c88bff63","modified":1725629902914},{"_id":"public/js/libs/SwupScrollPlugin.min.js.map","hash":"63cf04ba556b256379e103ef7d3ba12d629449a4","modified":1725629902914},{"_id":"public/live2d-widget/assets/screenshot-1.png","hash":"4bd4d97a1fcaa5deb3cea1c0a102a895a15af32f","modified":1725629902914},{"_id":"public/css/hbe.style.css","hash":"29be8fc47be885e9954e310cbc68dfadd3b4cee6","modified":1725629902914},{"_id":"public/lib/hbe.js","hash":"abd3b27238e26dc3bdd65e0e69fa514fa432a75b","modified":1725629902914},{"_id":"public/webfonts/fa-brands-400.woff2","hash":"a358912d781e6249a8d291e4ce9ebd0a9ab9452e","modified":1725629902914},{"_id":"public/fonts/Geist/GeistVF.ttf","hash":"9a531509e4e768e9102d11f5d7d293e3f04d9c64","modified":1725629902914},{"_id":"public/fonts/Geist/GeistVF.woff","hash":"d06c767b3837999a8b98426e4eb16ca0a8080880","modified":1725629902914},{"_id":"public/fonts/GeistMono/GeistMonoVF.ttf","hash":"d72ec9d729305fc24f38e1ba69174e93b700cd69","modified":1725629902914},{"_id":"public/fonts/GeistMono/GeistMonoVF.woff","hash":"fd8c986a8767d59a36e2d194299466720c916ee2","modified":1725629902914},{"_id":"public/js/libs/Swup.min.js.map","hash":"f74755d9318a86939791027767f631472b876207","modified":1725629902914},{"_id":"public/assets/hbe.style.css","hash":"29be8fc47be885e9954e310cbc68dfadd3b4cee6","modified":1725629902914},{"_id":"public/assets/odometer-theme-minimal.css","hash":"793c31feb38e241a5ff6ecc5e65e61751507d728","modified":1725629902914},{"_id":"public/fontawesome/light.min.css","hash":"18a176eb2486db4e938e568083fa578b641ccc83","modified":1725629902914},{"_id":"public/fontawesome/regular.min.css","hash":"d27c4fed54dacff688010e51f611d950dd6e0aca","modified":1725629902914},{"_id":"public/fontawesome/sharp-solid.min.css","hash":"7d1a13c6b8178b29f5bcb1a639a1998fc9de16c4","modified":1725629902914},{"_id":"public/fontawesome/solid.min.css","hash":"e727feabedb171fb0b398151870d7739ef4e2432","modified":1725629902914},{"_id":"public/fontawesome/thin.min.css","hash":"3d46be31379b07ffb24d69c6c915725eaa2e89e9","modified":1725629902914},{"_id":"public/fontawesome/v4-font-face.min.css","hash":"0be987628c8b485b39f064da41c90f15c0596c1f","modified":1725629902914},{"_id":"public/fontawesome/v5-font-face.min.css","hash":"260ea7a5e0b89963a5dcf2600a4decdf0f408f3f","modified":1725629902914},{"_id":"public/js/firework.js","hash":"f4db481a0422afb08b10d8189fa92a1433da46b0","modified":1725629902914},{"_id":"public/js/main.js","hash":"9d1d5167d8b966786268841abdf3c1639fd6d13a","modified":1725629902914},{"_id":"public/js/utils.js","hash":"00fe71414bf6a95bd4438cb301cf9096df90c46c","modified":1725629902914},{"_id":"public/live2d-widget/README.en.html","hash":"c5df3623949d6a4fe831302f2dc7e6da17103bb1","modified":1725629902914},{"_id":"public/live2d-widget/README.html","hash":"68640560cbc4be2d9f941198547ca18c024c6a66","modified":1725629902914},{"_id":"public/live2d-widget/autoload.js","hash":"e298781500f39626d5c62b46f37450f7938186c0","modified":1725629902914},{"_id":"public/live2d-widget/package.json","hash":"80d2120042316b755e164d674cc036ed4a59491e","modified":1725629902914},{"_id":"public/live2d-widget/rollup.config.js","hash":"3489dc2bf3ce120c86c1551fdd674a3a8c2881a6","modified":1725629902914},{"_id":"public/live2d-widget/waifu-tips.js","hash":"42f8b07fd15a74483981e59972ee7e8b8e917598","modified":1725629902914},{"_id":"public/live2d-widget/waifu-tips.json","hash":"ea3ef8dc2f8be9b5734a9b03a4242dca9c81fce8","modified":1725629902914},{"_id":"public/live2d-widget/waifu.css","hash":"20500dafb16ecb0c18e760aaadac07b023baa15a","modified":1725629902914},{"_id":"public/css/common/animated.css","hash":"638a1974b6ef420acc84f5d3539d93324b62219f","modified":1725629902914},{"_id":"public/css/common/redefine-theme.css","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1725629902914},{"_id":"public/css/common/markdown.css","hash":"34ad503bbc07e19b5c74443cc1f51c3ad4e4d693","modified":1725629902914},{"_id":"public/css/common/variables.css","hash":"6489e1eeed5e381bbbb69f35b0f82b9ca2cc03ff","modified":1725629902914},{"_id":"public/css/layout/archive-content.css","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1725629902914},{"_id":"public/css/layout/category-content.css","hash":"27a1840f95f27815119ee1674c83323cd245e017","modified":1725629902914},{"_id":"public/css/layout/home-content.css","hash":"d1e8884103665a1d6430d51678ea48c7ad82c497","modified":1725629902914},{"_id":"public/css/layout/category-list.css","hash":"6dad00432778b2963e4b8712cb993e18779270a8","modified":1725629902914},{"_id":"public/css/layout/home-sidebar.css","hash":"63eaae2df59f86daba059d0a945fa4ee4dd17eb8","modified":1725629902914},{"_id":"public/css/layout/page.css","hash":"a6c3e1f2db669cf41f13462045f0c0c8b253f2be","modified":1725629902914},{"_id":"public/css/layout/tag-content.css","hash":"df0f73ae5484d6c5173446f6e8c3e6032a9c7e00","modified":1725629902914},{"_id":"public/fonts/Chillax/chillax.css","hash":"210179f53c6bce91a12ca6db9129184cc1549c36","modified":1725629902914},{"_id":"public/fonts/Geist/geist.css","hash":"17f37a09d6192f06b2190f8319114238b0a2ec8c","modified":1725629902914},{"_id":"public/fonts/GeistMono/geist-mono.css","hash":"b89d5af7e04df579c8ad62c0ea445ff7d16eec11","modified":1725629902914},{"_id":"public/js/layouts/categoryList.js","hash":"eb1af2cd0726f56ff7861222ea543315fe295a17","modified":1725629902914},{"_id":"public/js/layouts/lazyload.js","hash":"c06323d68bbdebbb685db5010e7655b8ed0caf42","modified":1725629902914},{"_id":"public/js/layouts/navbarShrink.js","hash":"3e80bf9ef719b2ddb2d1c4b67eb169d2ef52dbb8","modified":1725629902914},{"_id":"public/js/layouts/toc.js","hash":"7a768982f6cb1f40552cce063d5743fe862db762","modified":1725629902914},{"_id":"public/js/libs/SwupPreloadPlugin.min.js","hash":"d911512891ecbe1935203bcd3d93427ad75e45c8","modified":1725629902914},{"_id":"public/js/libs/SwupProgressPlugin.min.js","hash":"fd30fe1c43072017f67bbaac18b962a5ac218711","modified":1725629902914},{"_id":"public/js/libs/SwupScriptsPlugin.min.js","hash":"b17f3434035f1339d6f9cd5c8a055d2a1b6602e9","modified":1725629902914},{"_id":"public/js/libs/SwupScrollPlugin.min.js","hash":"6c3afca9bb98f79d14516c093f27e3e50a3fd82e","modified":1725629902914},{"_id":"public/js/libs/SwupSlideTheme.min.js","hash":"e9d143780e879d958164b1356b7f918ec25e838a","modified":1725629902914},{"_id":"public/js/libs/Typed.min.js","hash":"e8ce2b674a637b0c0396a3106c1aedf10186249c","modified":1725629902914},{"_id":"public/js/libs/minimasonry.min.js","hash":"9681cc509cb8aa733d36aad032e6e8acdb33c08c","modified":1725629902914},{"_id":"public/js/libs/odometer.min.js","hash":"fe5beb60997c84ab2f91b54535c4221443cdd21f","modified":1725629902914},{"_id":"public/js/plugins/aplayer.js","hash":"1b7d9dff8db52b14825775fd55054c6adf269bf7","modified":1725629902914},{"_id":"public/js/plugins/hbe.js","hash":"abd3b27238e26dc3bdd65e0e69fa514fa432a75b","modified":1725629902914},{"_id":"public/js/plugins/masonry.js","hash":"92734a30a21f8b16f20aa75208f6c082890275fb","modified":1725629902914},{"_id":"public/js/plugins/mermaid.js","hash":"303254d382869ed618025fcb328426bd10314583","modified":1725629902914},{"_id":"public/js/plugins/tabs.js","hash":"964ec5c25a8d78763ba2ba9bfbd5b1b49ed05381","modified":1725629902914},{"_id":"public/js/plugins/typed.js","hash":"01799d5c07633f33b1d2893f524054074d56ec65","modified":1725629902914},{"_id":"public/js/tools/codeBlock.js","hash":"344e6c83e6ffda22f6e5bc724d603066b49a7d8b","modified":1725629902914},{"_id":"public/js/tools/imageViewer.js","hash":"f2ed02b6489c601821cd257c6ffa28c25f07bdd7","modified":1725629902914},{"_id":"public/js/tools/lightDarkSwitch.js","hash":"97b7e68f871dc218fceca77b85ac051c7c6306af","modified":1725629902914},{"_id":"public/js/tools/localSearch.js","hash":"f6e59f65c676457198c2cf5d78bd06052499ee38","modified":1725629902914},{"_id":"public/js/tools/runtime.js","hash":"eb0374b6f033f7ac25f49b1b079aa163e14b0fcd","modified":1725629902914},{"_id":"public/js/tools/scrollTopBottom.js","hash":"9e54fa4310bb98ea5ba61780a9ef56d05d475203","modified":1725629902914},{"_id":"public/js/tools/tocToggle.js","hash":"c2224ff0370fcf109e94194613b9480a3913c82d","modified":1725629902914},{"_id":"public/live2d-widget/demo/demo.html","hash":"128c05b681c9579b84d91a1d15d925904ef92814","modified":1725629902914},{"_id":"public/live2d-widget/demo/login.html","hash":"8dc655b672cfa104db95687168b6268602f2c243","modified":1725629902914},{"_id":"public/live2d-widget/src/index.js","hash":"a2670fe54cba051e0ad47048603c7630e5b613b4","modified":1725629902914},{"_id":"public/live2d-widget/src/message.js","hash":"595e2090df09ef1e50916b6d4b12a8fe30377b27","modified":1725629902914},{"_id":"public/live2d-widget/src/model.js","hash":"a7742f3940bd157582c968f85feba299a1d3a783","modified":1725629902914},{"_id":"public/live2d-widget/src/tools.js","hash":"d3fd7073b6352c9be4227a386ca84d910f83d4e9","modified":1725629902914},{"_id":"public/live2d-widget/src/utils.js","hash":"cf0bf51117a9044dc26373854caa8b622f043d78","modified":1725629902914},{"_id":"public/live2d-widget/src/waifu-tips.js","hash":"7887603444c52f54875541a111b9a6632bac970a","modified":1725629902914},{"_id":"public/css/common/codeblock/code-block.css","hash":"a88885a3e204d747dde91d090c29088aa5317e0e","modified":1725629902914},{"_id":"public/css/common/codeblock/code-theme.css","hash":"09c33cdd2c2ddb18b1a728929a5488ebb99a7740","modified":1725629902914},{"_id":"public/css/style.css","hash":"327488a0bc7d9df60be08b761d09e8fe492ea22a","modified":1725629902914},{"_id":"public/fontawesome/brands.min.css","hash":"5119c35bbd273d2ea2501997827f6d644da93164","modified":1725629902914},{"_id":"public/fontawesome/duotone.min.css","hash":"0becc4b085bd9d377a8ff4b5160f8e19c8ec27a0","modified":1725629902914},{"_id":"public/fontawesome/fontawesome.min.css","hash":"44e6d666b45a6875e4fce11159876129e7a1cceb","modified":1725629902914},{"_id":"public/fontawesome/all.min.css","hash":"630bf0e29410ec27622f65d1270c6bc435cdff21","modified":1725629902914},{"_id":"public/fontawesome/svg-with-js.min.css","hash":"f4c08e37c4d44b3ed7a3f377d1cb5d7fca4d04bc","modified":1725629902914},{"_id":"public/fontawesome/v4-shims.min.css","hash":"96f037860b8e9b59af8e47571ea98791616dbfd8","modified":1725629902914},{"_id":"public/live2d-widget/live2d.min.js","hash":"94383fb61de815c3f806ae3f11026bbcfe384082","modified":1725629902914},{"_id":"public/assets/build/styles.css","hash":"7fce3d8245ba8d012d32870baddc870860e512fc","modified":1725629902914},{"_id":"public/css/common/basic.css","hash":"5a7741faf7499144d0a129cfe5884b5a4ebb27a4","modified":1725629902914},{"_id":"public/css/layout/article-content.css","hash":"beec31490e18f8b0ff0266451471c4127cd27ad6","modified":1725629902914},{"_id":"public/js/libs/Swup.min.js","hash":"cc054d34e74a1feecfae75064f6a4d6107607396","modified":1725629902914},{"_id":"public/js/libs/APlayer.min.js","hash":"22caa28ff6b41a16ff40f15d38f1739e22359478","modified":1725629902914},{"_id":"public/js/libs/anime.min.js","hash":"47cb482a8a488620a793d50ba8f6752324b46af3","modified":1725629902914},{"_id":"public/js/libs/pjax.min.js","hash":"3d796e5be9cdd4067c94e190ea2482d7fdb4856c","modified":1725629902914},{"_id":"public/css/common/codeblock/highlight.css","hash":"0039985a7aff771ecb7d8618b019710f5d29fda5","modified":1725629902914},{"_id":"public/webfonts/fa-brands-400.ttf","hash":"ba9322d66c19f635e15e458cc39fcb509818332f","modified":1725629902914},{"_id":"public/fonts/Chillax/Chillax-Variable.eot","hash":"50a4e2ab17155fe7449e0ee488a6242180f3b256","modified":1725629902914},{"_id":"public/fonts/Chillax/Chillax-Variable.ttf","hash":"01aafadc0ca4ace59127a5594a8f534e83b84879","modified":1725629902914},{"_id":"public/js/libs/APlayer.min.js.map","hash":"31a19da0f0cb6b00ec212eafa847f31af86788df","modified":1725629902914},{"_id":"public/js/libs/waline.mjs","hash":"d94e0f396776a003b603d6e90a732a548c2fda33","modified":1725629902914},{"_id":"public/js/libs/mermaid.min.js","hash":"c11ca6043d8dae028448a808105f8c888faac8f5","modified":1725629902914},{"_id":"public/img/network-flow.jpg","hash":"72e4042ddea60cb431316a44bee267e99202be7c","modified":1725629902914},{"_id":"public/webfonts/fa-sharp-solid-900.woff2","hash":"74d0af1108ab8157993ca03cef80e89e35e2408d","modified":1725629902914},{"_id":"public/live2d-widget/assets/screenshot-3.png","hash":"f89c6fdf44008e7d3c7a1aafe65dc39b212edb6c","modified":1725629902914},{"_id":"public/webfonts/fa-solid-900.woff2","hash":"e73d164db2aff2c91d18c07da03e8db9d0c5dfd4","modified":1725629902914},{"_id":"public/live2d-widget/assets/screenshot-2.png","hash":"76b844653136184c573b3632e12296e008a7ff5c","modified":1725629902914},{"_id":"public/webfonts/fa-duotone-900.woff2","hash":"2cc24434345b80a844a6bda1139539fe41e4df53","modified":1725629902914},{"_id":"public/webfonts/fa-light-300.woff2","hash":"def760895375328ccdcf62b2b9b9001a21947acd","modified":1725629902914},{"_id":"public/webfonts/fa-regular-400.woff2","hash":"486fed640153de1de84f460834c73daef060ed20","modified":1725629902914},{"_id":"public/webfonts/fa-thin-100.woff2","hash":"e0a4482c20f6b67784df54965539a317a3bd681b","modified":1725629902914},{"_id":"public/webfonts/fa-sharp-solid-900.ttf","hash":"0d710cd7bd1b7ff574e88bb812de82babe45e415","modified":1725629902914},{"_id":"public/webfonts/fa-solid-900.ttf","hash":"40b536c3667547db70ee9ca6f3c94fbc33e0cab7","modified":1725629902914},{"_id":"public/webfonts/fa-regular-400.ttf","hash":"cdec068700dc440530e5bbeff7e8bb33a01b4132","modified":1725629902914},{"_id":"public/js/libs/waline.mjs.map","hash":"37c5b3e6aa5e1b70358426345a1a1329d6b896d3","modified":1725629902914},{"_id":"public/webfonts/fa-light-300.ttf","hash":"cc5d9f4f994c82e23f58cdde1eec8792d81633c7","modified":1725629902914},{"_id":"public/webfonts/fa-thin-100.ttf","hash":"c1fee6e6986b14533ce022afada5fbe10c0f6562","modified":1725629902914},{"_id":"public/webfonts/fa-duotone-900.ttf","hash":"e0313a772ea710cb5ea4bd08f5dedb0a0025f8ca","modified":1725629902914},{"_id":"public/img/solution-luogu-p3365-banner.png","hash":"dfad3915fa348a007ed735b75235e70f939911ce","modified":1725629902914},{"_id":"public/img/welcome.jpg","hash":"a2635ca7d525a088417659408e9964f422fe9f3d","modified":1725629902914},{"_id":"public/js/libs/mermaid.min.js.map","hash":"7d303cf926754817c4360f92e6c39b8c390cdbdb","modified":1725629902914},{"_id":"public/music/城南花已开.m4a","hash":"97abb7687dda66df3be4db02a586f577d95245dc","modified":1725629902914},{"_id":"source/music/一路生花.mp3","hash":"0d201b0f2041b820717c6e21af57d5e2f1f9a2df","modified":1725766037894},{"_id":"source/music/人是_.m4a","hash":"02d57c4b752df82673e20d427fa88f286e290bd6","modified":1699793448956},{"_id":"source/music/你曾这样问过.mp3","hash":"114882d6b0d0975c10313c9d75aed885aa069d91","modified":1725765778186},{"_id":"public/music/一路生花.mp3","hash":"72e8bc9ba01ef291d8c2d21bbf9e90f1c28b4d01","modified":1725779901376},{"_id":"public/music/人是_.m4a","hash":"02d57c4b752df82673e20d427fa88f286e290bd6","modified":1725776981671},{"_id":"public/music/你曾这样问过.mp3","hash":"114882d6b0d0975c10313c9d75aed885aa069d91","modified":1725776981671},{"_id":"themes/redefine/source/images/Breath-and-Life.jpg","hash":"40e7b4af78ba16617322d948ad2cc805fcbe646b","modified":1725779282475},{"_id":"themes/redefine/source/images/Light-Above-The-Sky.jpg","hash":"d7c0f89595a3c2f0824153e95474fd873d602131","modified":1725778779647},{"_id":"themes/redefine/source/images/Moment.jpg","hash":"8437f2b8ec60a73099eacf5a7266954d072585b6","modified":1725779183757},{"_id":"themes/redefine/source/images/一路生花.jpg","hash":"441e0372cae75a0a4f8054c535dba8a08435bb59","modified":1725779051660},{"_id":"themes/redefine/source/images/人是_.jpg","hash":"3a338b090cf70479334ccaf21ec01d3f46fdbb36","modified":1725778962622},{"_id":"themes/redefine/source/images/化身孤岛的鲸.jpg","hash":"acbc3bd30d43b15125458924fc9f53d57938a03c","modified":1725779123982},{"_id":"themes/redefine/source/images/安静的午后.jpg","hash":"8b154e2ecb994c85284af9c2a5e166f0d9d26960","modified":1725778105489},{"_id":"themes/redefine/source/images/你曾这样问过.jpg","hash":"a0e6be8ec53c38ed4d5c08a1bf370a86f9f6b57a","modified":1725779119746},{"_id":"themes/redefine/source/images/未闻花名.jpg","hash":"c7fd8aa3d9377c36bff67fa7fc737248062f33ab","modified":1725778871428},{"_id":"themes/redefine/source/images/浮光.jpg","hash":"38b44a7c3f5bb437c06095908908f00ebde404ae","modified":1725778929014},{"_id":"themes/redefine/source/images/煙火.jpg","hash":"86801e3878d0f1a0f96b0c1844378d6de8799cb6","modified":1725778361742},{"_id":"themes/redefine/source/images/蜃楼.jpg","hash":"355460d7cfb88d81d728065213907954cffab9f0","modified":1725778875251},{"_id":"themes/redefine/source/images/追繁星的孩子.jpg","hash":"b5b5737bf9b884fa89f842a5a2bef78773ba9144","modified":1725778031074},{"_id":"themes/redefine/source/music/追逐繁星的孩子.m4a","hash":"591eb7679249a442720191d9f5a170aec47a5f2d","modified":1725777999402},{"_id":"themes/redefine/source/music/Breath-and-Life.m4a","hash":"86b1df07b1ae81b3a62c70467f3645184551628e","modified":1725777942587},{"_id":"themes/redefine/source/music/安静的午后.m4a","hash":"004300e710da140f2a3cedeea498d84ca6e060db","modified":1725778075208},{"_id":"themes/redefine/source/music/Light-Above-The-Sky.m4a","hash":"7da521c62184dddf3d48485e6c782d59f1edcdb5","modified":1725778736106},{"_id":"themes/redefine/source/music/煙火.m4a","hash":"3d32aad6ca8b3231153681461b6b0444e1103b5e","modified":1725778145342},{"_id":"themes/redefine/source/music/人是_.m4a","hash":"02d57c4b752df82673e20d427fa88f286e290bd6","modified":1699793448956},{"_id":"themes/redefine/source/music/Moment.m4a","hash":"51067b2b66d8663105d8853ecf0f9bce23b087dd","modified":1725777916622},{"_id":"themes/redefine/source/music/蜃楼.m4a","hash":"d82187dc87392042cb3e1d7726ba8118c033cd8b","modified":1725777342034},{"_id":"themes/redefine/source/music/化身孤岛的鲸.m4a","hash":"b2849865820ef5137bbb1c269713515a63b033e6","modified":1725777725314},{"_id":"themes/redefine/source/music/背水.m4a","hash":"9c597c5944bd966ae84a65927d04f88caa2d39de","modified":1725778245101},{"_id":"themes/redefine/source/music/浮光.m4a","hash":"ffd7f7660880859027feb03215677ddf486918be","modified":1725777500136},{"_id":"themes/redefine/source/music/你曾这样问过.mp3","hash":"114882d6b0d0975c10313c9d75aed885aa069d91","modified":1725765778186},{"_id":"themes/redefine/source/music/一路生花.mp3","hash":"72e8bc9ba01ef291d8c2d21bbf9e90f1c28b4d01","modified":1725777088924},{"_id":"public/images/Breath-and-Life.jpg","hash":"40e7b4af78ba16617322d948ad2cc805fcbe646b","modified":1725779901376},{"_id":"public/images/Moment.jpg","hash":"8437f2b8ec60a73099eacf5a7266954d072585b6","modified":1725779901376},{"_id":"public/images/一路生花.jpg","hash":"441e0372cae75a0a4f8054c535dba8a08435bb59","modified":1725779901376},{"_id":"public/images/你曾这样问过.jpg","hash":"a0e6be8ec53c38ed4d5c08a1bf370a86f9f6b57a","modified":1725779901376},{"_id":"public/images/人是_.jpg","hash":"3a338b090cf70479334ccaf21ec01d3f46fdbb36","modified":1725779901376},{"_id":"public/images/Light-Above-The-Sky.jpg","hash":"d7c0f89595a3c2f0824153e95474fd873d602131","modified":1725779901376},{"_id":"public/images/化身孤岛的鲸.jpg","hash":"acbc3bd30d43b15125458924fc9f53d57938a03c","modified":1725779901376},{"_id":"public/images/安静的午后.jpg","hash":"8b154e2ecb994c85284af9c2a5e166f0d9d26960","modified":1725779901376},{"_id":"public/images/未闻花名.jpg","hash":"c7fd8aa3d9377c36bff67fa7fc737248062f33ab","modified":1725779901376},{"_id":"public/images/浮光.jpg","hash":"38b44a7c3f5bb437c06095908908f00ebde404ae","modified":1725779901376},{"_id":"public/images/煙火.jpg","hash":"86801e3878d0f1a0f96b0c1844378d6de8799cb6","modified":1725779901376},{"_id":"public/images/蜃楼.jpg","hash":"355460d7cfb88d81d728065213907954cffab9f0","modified":1725779901376},{"_id":"public/images/追繁星的孩子.jpg","hash":"b5b5737bf9b884fa89f842a5a2bef78773ba9144","modified":1725779901376},{"_id":"public/music/追逐繁星的孩子.m4a","hash":"591eb7679249a442720191d9f5a170aec47a5f2d","modified":1725779901376},{"_id":"public/music/Breath-and-Life.m4a","hash":"86b1df07b1ae81b3a62c70467f3645184551628e","modified":1725779901376},{"_id":"public/music/安静的午后.m4a","hash":"004300e710da140f2a3cedeea498d84ca6e060db","modified":1725779901376},{"_id":"public/music/Light-Above-The-Sky.m4a","hash":"7da521c62184dddf3d48485e6c782d59f1edcdb5","modified":1725779901376},{"_id":"public/music/煙火.m4a","hash":"3d32aad6ca8b3231153681461b6b0444e1103b5e","modified":1725779901376},{"_id":"public/music/蜃楼.m4a","hash":"d82187dc87392042cb3e1d7726ba8118c033cd8b","modified":1725779901376},{"_id":"public/music/Moment.m4a","hash":"51067b2b66d8663105d8853ecf0f9bce23b087dd","modified":1725779901376},{"_id":"public/music/化身孤岛的鲸.m4a","hash":"b2849865820ef5137bbb1c269713515a63b033e6","modified":1725779901376},{"_id":"public/music/浮光.m4a","hash":"ffd7f7660880859027feb03215677ddf486918be","modified":1725779901376},{"_id":"public/music/背水.m4a","hash":"9c597c5944bd966ae84a65927d04f88caa2d39de","modified":1725779901376},{"_id":"themes/redefine/source/music/未闻花名.m4a","hash":"5a3855ea12733f79402fac41aee577a22a8a4460","modified":1725781751310},{"_id":"public/music/未闻花名.m4a","hash":"5a3855ea12733f79402fac41aee577a22a8a4460","modified":1725781964376},{"_id":"source/_posts/hello-world.md","hash":"7d98d6592de80fdcd2949bd7401cec12afd98cdf","modified":1725694278916},{"_id":"themes/redefine/.coderabbit.yaml","hash":"b944fabecbd1d4ad16a7cb4a4f51c564fee6b28d","modified":1725399782000},{"_id":"themes/redefine/source/css/common/codeblock/hljs-themes/light/default.styl","hash":"c2b8d16ba4dffdd3bae4db4f817bc18cdd7c1d60","modified":1725399782000},{"_id":"themes/redefine/source/css/common/codeblock/hljs-themes/light/atom-one-light.styl","hash":"99de67d507bd6ffed5993097a6ce2be6422480b1","modified":1725399782000},{"_id":"themes/redefine/source/css/common/codeblock/hljs-themes/light/github.styl","hash":"a2a15ed938b319c369569845bf35d00c6624d136","modified":1725399782000},{"_id":"themes/redefine/source/css/common/codeblock/hljs-themes/dark/agate.styl","hash":"5e18116485877ebd842cd5528e12626fabc0b2a4","modified":1725399782000},{"_id":"themes/redefine/source/css/common/codeblock/hljs-themes/dark/a11y-dark.styl","hash":"a9a17eceb406a6d2da4f2ec52b3832052a141f4f","modified":1725399782000},{"_id":"themes/redefine/source/css/common/codeblock/hljs-themes/dark/night-owl.styl","hash":"323b8a17977768596b0643a9becb0595f290cb88","modified":1725399782000},{"_id":"themes/redefine/source/css/common/codeblock/hljs-themes/dark/github-dark.styl","hash":"fab5f7f62407b66f8b5f2837b178ef5b09a4badc","modified":1725399782000},{"_id":"themes/redefine/source/css/common/codeblock/hljs-themes/dark/atom-one-dark.styl","hash":"8802725310cf86c4a179d874072188f31d10b224","modified":1725399782000},{"_id":"themes/redefine/source/css/common/codeblock/hljs-themes/dark/vs2015.styl","hash":"c54d91bf767efe0671c4dfbe874fac678cfde117","modified":1725399782000},{"_id":"themes/redefine/source/css/common/codeblock/hljs-themes/dark/monokai-sublime.styl","hash":"803773d8c6dd5ecf957596ca57584a6618f373ac","modified":1725399782000},{"_id":"themes/redefine/source/css/common/codeblock/hljs-themes/dark/tokyo-night-dark.styl","hash":"bd7ea8175853e05d5716282491ae024cb987e7f5","modified":1725399782000},{"_id":"themes/redefine/source/css/common/codeblock/hljs-themes/dark/nord.styl","hash":"9b88c9e8bca2b8995fdc71519c01a9c80121161c","modified":1725399782000},{"_id":"public/2024/09/07/hello-world/index.html","hash":"e4aa9e5f095fb89322e6a702bfc2b34db7b53f48","modified":1725864707273}],"Category":[],"Data":[],"Page":[{"title":"tags","date":"2024-08-27T11:34:05.000Z","_content":"","source":"tags/index.md","raw":"---\ntitle: tags\ndate: 2024-08-27 19:34:05\n---\n","updated":"2024-08-27T11:34:05.534Z","path":"tags/index.html","comments":1,"layout":"page","_id":"cm0qrhqxp0000f4it8eztcogq","content":"","excerpt":"","more":""}],"Post":[{"title":"【转载】 网络流与线性规划 24 题刷题指南","date":"2024-08-28T03:30:00.000Z","banner":"/img/network-flow.jpg","mathjax":true,"excerpt":"本篇博文转载自博客园 ticmis 的博文 网络流24题。网络流新手在刷网络流 24 题时难免会感到迷茫，本篇博客给你刷题方向及思路提点，如果你新学网络流非常建议你看一看。","_content":"\n## 前言\n\n本篇博文转载自博客园 ticmis 的博文 [网络流24题](https://www.cnblogs.com/ticmis/p/13211073.html)，转载时做了如下改动：\n\n1. 排版整理，规范化 $\\LaTeX$。\n2. 题单中添加了 洛谷题号 和 洛谷难度。\n3. 错别字修改。\n4. 内容描述稍作改动。\n\n说实话，本人很讨厌 某SDN 上的各个博主间互相抄来抄去的行为，这一篇是我第一次转载别人的博文，原因是我认为原博文讲的非常好，想搬到过来推广给大家。\n\n## 题单列表\n\n本人按照如下顺序整理的洛谷题单：[网络流与线性规划 24 题](https://www.luogu.com.cn/training/566535)。\n\n题单基本按照知识点难度排序，推荐读者以这个顺序做题。有相关建议可以在评论区提出。\n\n| 编号 | 洛谷题号 | 题目名称                                                     | 题目模型               | 转化模型 | 洛谷难度    |\n| ---- | -------- | ------------------------------------------------------------ | ---------------------- | -------- | ----------- |\n| $1$ | P2756    | [飞行员配对方案问题](https://www.luogu.com.cn/problem/P2756) | 二分图最大匹配         | 二分图   | 提高+/省选− |\n| $2$  | P4011    | [孤岛营救问题](https://www.luogu.com.cn/problem/P4011)       | 分层图最短路           | 最短路径 | 提高+/省选− |\n| $3$  | P4009    | [汽车加油行驶问题](https://www.luogu.com.cn/problem/P4009)   | 分层图最短路           | 最短路径 | 省选/NOI−   |\n| $4$  | P2761    | [软件补丁问题](https://www.luogu.com.cn/problem/P2761)       | 最小转移代价           | 最短路径 | 提高+/省选− |\n| $5$  | P2754    | [星际转移问题](https://www.luogu.com.cn/problem/P2754)       | 分层图转移             | 最大流   | 省选/NOI−   |\n| $6$  | P2762    | [太空飞行计划问题](https://www.luogu.com.cn/problem/P2762)   | 最大权闭合图           | 最小割   | 省选/NOI−   |\n| $7$  | P2764    | [最小路径覆盖问题](https://www.luogu.com.cn/problem/P2764)   | 有向无环图最小路径覆盖 | 最大流   | 省选/NOI−   |\n| $8$  | P2765    | [魔术球问题](https://www.luogu.com.cn/problem/P2765)         | 有向无环图最小路径覆盖 | 最大流   | 省选/NOI−   |\n| $9$  | P3254    | [圆桌问题](https://www.luogu.com.cn/problem/P3254)           | 二分图多重匹配         | 最大流   | 提高+/省选− |\n| $10$ | P2763    | [试题库问题](https://www.luogu.com.cn/problem/P2763)         | 二分图多重匹配         | 最大流   | 提高+/省选− |\n| $11$ | P4014    | [分配问题](https://www.luogu.com.cn/problem/P4014)           | 二分图最佳匹配         | 费用流   | 提高+/省选− |\n| $12$ | P2774    | [方格取数问题](https://www.luogu.com.cn/problem/P2774)       | 二分图点权最大独立集   | 最小割   | 省选/NOI−   |\n| $13$ | P3355    | [骑士共存问题](https://www.luogu.com.cn/problem/P3355)       | 二分图点权最大独立集   | 最小割   | 省选/NOI−   |\n| $14$ | P4016    | [负载平衡问题](https://www.luogu.com.cn/problem/P4016)       | 费用流~~水题~~模板题   | 费用流   | 省选/NOI-   |\n| $15$ | P4015    | [运输问题](https://www.luogu.com.cn/problem/P4015)           | 费用流~~水题~~模板题   | 费用流   | 提高+/省选− |\n| $16$ | P2766    | [最长不下降子序列问题](https://www.luogu.com.cn/problem/P2766) | 限制性带权路径         | 费用流   | 省选/NOI−   |\n| $17$ | P2770    | [航空路线问题](https://www.luogu.com.cn/problem/P2770)       | 限制性带权路径         | 费用流   | 省选/NOI−   |\n| $18$ | P4013    | [数字梯形问题](https://www.luogu.com.cn/problem/P4013)       | 限制性带权路径         | 费用流   | 省选/NOI−   |\n| $19$ | P3358    | [最长k可重区间集问题](https://www.luogu.com.cn/problem/P3358) | 限制性带权路径         | 费用流   | 省选/NOI−   |\n| $20$ | P3357    | [最长k可重线段集问题](https://www.luogu.com.cn/problem/P3357) | 限制性带权路径         | 费用流   | 省选/NOI−   |\n| $21$ | P4012    | [深海机器人问题](https://www.luogu.com.cn/problem/P4012)     | 限制性带权路径         | 费用流   | 省选/NOI−   |\n| $22$ | P3356    | [火星探险问题](https://www.luogu.com.cn/problem/P3356)       | 限制性带权路径         | 费用流   | 省选/NOI−   |\n| $23$ | P1251    | [餐巾计划问题](https://www.luogu.com.cn/problem/P1251)       | 限制性带权路径         | 费用流   | 省选/NOI−   |\n| $24$ | P2775    | [机器人路径规划问题](https://www.luogu.com.cn/problem/P2775) | 题目有误               | 题目有误 | 暂无评定    |\n\n## 题型归纳\n\n网络流 $24$ 题中所有出现过的题型整理如下。\n\n### $\\large\\mathfrak{1st.}$ 图上状态转移\n\n涉案题目：\n\n| 编号 |                           题目名称                           |    题目模型    | 转化模型 |\n| :--: | :----------------------------------------------------------: | :------------: | :------: |\n|  $2$   | [孤岛营救问题](https://www.luogu.org/problemnew/show/P4011)  | 分层图最短路径 | 最短路径 |\n|  $3$   | [汽车加油行驶问题](https://www.luogu.org/problemnew/show/P4009) | 分层图最短路径 | 最短路径 |\n|  $4$   | [软件补丁问题](https://www.luogu.org/problemnew/show/P2761)  |  最小转移代价  | 最短路径 |\n|  $5$   | [星际转移问题](https://www.luogu.org/problemnew/show/P2761)  |   分层图转移   |  最大流  |\n\n这类题的特征就是，由一个确定的状态可以通过有限的方案，转化为另外一种确定的状态，思路有点类似 $\\text{dp}$ 转移。\n\n$2$、$3$、$4$ 这三道题就是状压 $\\text{dp}$（没错，网络流里混进来的间谍），见图，一发 $\\text{SPFA}$ 或 $\\text{Dijkstra}$ 即可\n\n其中第 4 题还有一点比较特殊，这道题的转移方案特别多，对应过来就是，图上的边特别特别多，多到无法存下来。咋办呢？由于点是确定且数量可以接受的，就跑最短路径的同时，“建”边即可。\n\n而 $5$ 这道题稍微有一点难度。这道题和前三道题有所区分。它并不是单纯的状压，而用到网络流。\n\n它的一个思维难点就在于时间是无法事先确定的，只能模拟。模拟的过程中，不断为某一天增边建图，然后跑最大流\n\n### $\\large\\mathfrak{2nd.}$ 有向无环图最小路径覆盖\n\n涉案题目：\n\n| 编号 |                           题目名字                           |        题目模型        | 转化模型 |\n| :--: | :----------------------------------------------------------: | :--------------------: | :------: |\n| $7$  | [最小路径覆盖问题](https://www.luogu.org/problemnew/show/P2764) | 有向无环图最小路径覆盖 |  最大流  |\n| $8$  |  [魔术球问题](https://www.luogu.org/problemnew/show/P2765)   | 有向无环图最小路径覆盖 |  最大流  |\n\n详情请参考博客 “网络流 最小路径覆盖” 和 “题解 魔术球问题”\n\n### $\\large\\mathfrak{3rd.}$ 二分图相关算法\n\n涉案题目：\n\n| 编号 |                           题目名字                           |    题目模型    | 转化模型 |\n| :--: | :----------------------------------------------------------: | :------------: | :------: |\n| $1$  | [飞行员配对方案问题](https://www.luogu.com.cn/problem/P2756) | 二分图最大匹配 |  二分图  |\n| $9$  |   [圆桌问题](https://www.luogu.org/problemnew/show/P3254)    | 二分图多重匹配 |  最大流  |\n| $10$ |  [试题库问题](https://www.luogu.org/problemnew/show/P2763)   | 二分图多重匹配 |  最大流  |\n| $11$ |   [分配问题](https://www.luogu.org/problemnew/show/P4014)    | 二分图最佳匹配 |  费用流  |\n\n这类题就是用网络流的算法去解决二分图的问题。学习了网络流之后，再看二分图，感觉就比较简单了。简单的建图，简单的网络流即可一发带走 (•̀ ω •́ )y\n\n### $\\large\\mathfrak{4th.}$ 不相交路径\n\n涉案题目：\n\n| 编号 |                           题目名字                           |    题目模型    | 转化模型 |\n| :--: | :----------------------------------------------------------: | :------------: | :------: |\n| $16$ | [最长递增子序列问题](https://www.luogu.org/problemnew/show/P2766) | 限制性带权路径 |  最大流  |\n| $17$ | [航空路线问题](https://www.luogu.org/problemnew/show/P2770)  | 限制性带权路径 |  费用流  |\n| $18$ | [数字梯形问题](https://www.luogu.org/problemnew/show/P4013)  | 限制性带权路径 |  费用流  |\n| $19$ | [最长k可重区间集问题](https://www.luogu.org/problemnew/show/P3358) | 限制性带权路径 |  费用流  |\n| $20$ | [最长k可重线段集问题](https://www.luogu.org/problemnew/show/P3357) | 限制性带权路径 |  费用流  |\n| $21$ | [深海机器人问题](https://www.luogu.org/problemnew/show/P4012) | 限制性带权路径 |  费用流  |\n| $22$ | [火星探险问题](https://www.luogu.org/problemnew/show/P3356)  | 限制性带权路径 |  费用流  |\n\n第一眼看限制性带权路径的题，很容易让人感觉是搜索题。因为假如数据范围足够小，简单的搜索是能够保证正确性的。\n\n但是，学完了网络流，可解决的数据范围肯定就要比搜索肥了不少\n\n这类题的总体思路是拆点：\n\n1. 将 $x$ 拆为 $x_1$ 和 $x_2$ 两个点，$x_1$ 为入点，$x_2$ 为出点。\n2. $x_1 \\rightarrow x_2$，流量表示这个点可以经过的次数，费用表示经过这个点的收益。\n3. $x_2 \\rightarrow y_1$，流量和费用表示从一个 $x$ 点转移到 $y$ 点，或者转移过程中点收益。\n4. $s \\rightarrow x_1$，表示路径的起始点，流量为路径条数，费用通常为 $0$。\n5. $x_2 \\rightarrow t$，表示路径的终点，流量通常为 $\\inf$，费用通常为 $0$。\n\n然后，建图，一发入魂╰(￣ω￣ｏ)\n\n### $\\large\\mathfrak{5th.}$ 线性规划网络优化\n\n涉案题目：\n\n| 编号 |                          题目名字                           |     题目模型     | 转化模型 |\n| :--: | :---------------------------------------------------------: | :--------------: | :------: |\n| $23$ | [餐巾计划问题](https://www.luogu.org/problemnew/show/P1251) | 线性规划网络优化 |  费用流  |\n\n这类题就是用网络流来优化线性规划，由于线性规划本身就具有很强的灵活性，所以这类题也相应的具有很强的灵活性\n\n说是“类”，其实也只见过两道题而已啊~~（＞人＜；）\n\n餐巾计划这道题我认为是网络 $24$ 题（除去那道错题）中最难的一道题。建图很有创造性，通过建图，完美的表达了题目的限制条件的同时，又用上了费用流这个强大利器。","source":"_posts/network-flow-24-problem.md","raw":"---\ntitle: 【转载】 网络流与线性规划 24 题刷题指南\ndate: 2024-8-28 11:30:00\ntags: \n    - 转载\n    - 网络流\nbanner: /img/network-flow.jpg\nmathjax: true\nexcerpt: \"本篇博文转载自博客园 ticmis 的博文 网络流24题。网络流新手在刷网络流 24 题时难免会感到迷茫，本篇博客给你刷题方向及思路提点，如果你新学网络流非常建议你看一看。\"\n---\n\n## 前言\n\n本篇博文转载自博客园 ticmis 的博文 [网络流24题](https://www.cnblogs.com/ticmis/p/13211073.html)，转载时做了如下改动：\n\n1. 排版整理，规范化 $\\LaTeX$。\n2. 题单中添加了 洛谷题号 和 洛谷难度。\n3. 错别字修改。\n4. 内容描述稍作改动。\n\n说实话，本人很讨厌 某SDN 上的各个博主间互相抄来抄去的行为，这一篇是我第一次转载别人的博文，原因是我认为原博文讲的非常好，想搬到过来推广给大家。\n\n## 题单列表\n\n本人按照如下顺序整理的洛谷题单：[网络流与线性规划 24 题](https://www.luogu.com.cn/training/566535)。\n\n题单基本按照知识点难度排序，推荐读者以这个顺序做题。有相关建议可以在评论区提出。\n\n| 编号 | 洛谷题号 | 题目名称                                                     | 题目模型               | 转化模型 | 洛谷难度    |\n| ---- | -------- | ------------------------------------------------------------ | ---------------------- | -------- | ----------- |\n| $1$ | P2756    | [飞行员配对方案问题](https://www.luogu.com.cn/problem/P2756) | 二分图最大匹配         | 二分图   | 提高+/省选− |\n| $2$  | P4011    | [孤岛营救问题](https://www.luogu.com.cn/problem/P4011)       | 分层图最短路           | 最短路径 | 提高+/省选− |\n| $3$  | P4009    | [汽车加油行驶问题](https://www.luogu.com.cn/problem/P4009)   | 分层图最短路           | 最短路径 | 省选/NOI−   |\n| $4$  | P2761    | [软件补丁问题](https://www.luogu.com.cn/problem/P2761)       | 最小转移代价           | 最短路径 | 提高+/省选− |\n| $5$  | P2754    | [星际转移问题](https://www.luogu.com.cn/problem/P2754)       | 分层图转移             | 最大流   | 省选/NOI−   |\n| $6$  | P2762    | [太空飞行计划问题](https://www.luogu.com.cn/problem/P2762)   | 最大权闭合图           | 最小割   | 省选/NOI−   |\n| $7$  | P2764    | [最小路径覆盖问题](https://www.luogu.com.cn/problem/P2764)   | 有向无环图最小路径覆盖 | 最大流   | 省选/NOI−   |\n| $8$  | P2765    | [魔术球问题](https://www.luogu.com.cn/problem/P2765)         | 有向无环图最小路径覆盖 | 最大流   | 省选/NOI−   |\n| $9$  | P3254    | [圆桌问题](https://www.luogu.com.cn/problem/P3254)           | 二分图多重匹配         | 最大流   | 提高+/省选− |\n| $10$ | P2763    | [试题库问题](https://www.luogu.com.cn/problem/P2763)         | 二分图多重匹配         | 最大流   | 提高+/省选− |\n| $11$ | P4014    | [分配问题](https://www.luogu.com.cn/problem/P4014)           | 二分图最佳匹配         | 费用流   | 提高+/省选− |\n| $12$ | P2774    | [方格取数问题](https://www.luogu.com.cn/problem/P2774)       | 二分图点权最大独立集   | 最小割   | 省选/NOI−   |\n| $13$ | P3355    | [骑士共存问题](https://www.luogu.com.cn/problem/P3355)       | 二分图点权最大独立集   | 最小割   | 省选/NOI−   |\n| $14$ | P4016    | [负载平衡问题](https://www.luogu.com.cn/problem/P4016)       | 费用流~~水题~~模板题   | 费用流   | 省选/NOI-   |\n| $15$ | P4015    | [运输问题](https://www.luogu.com.cn/problem/P4015)           | 费用流~~水题~~模板题   | 费用流   | 提高+/省选− |\n| $16$ | P2766    | [最长不下降子序列问题](https://www.luogu.com.cn/problem/P2766) | 限制性带权路径         | 费用流   | 省选/NOI−   |\n| $17$ | P2770    | [航空路线问题](https://www.luogu.com.cn/problem/P2770)       | 限制性带权路径         | 费用流   | 省选/NOI−   |\n| $18$ | P4013    | [数字梯形问题](https://www.luogu.com.cn/problem/P4013)       | 限制性带权路径         | 费用流   | 省选/NOI−   |\n| $19$ | P3358    | [最长k可重区间集问题](https://www.luogu.com.cn/problem/P3358) | 限制性带权路径         | 费用流   | 省选/NOI−   |\n| $20$ | P3357    | [最长k可重线段集问题](https://www.luogu.com.cn/problem/P3357) | 限制性带权路径         | 费用流   | 省选/NOI−   |\n| $21$ | P4012    | [深海机器人问题](https://www.luogu.com.cn/problem/P4012)     | 限制性带权路径         | 费用流   | 省选/NOI−   |\n| $22$ | P3356    | [火星探险问题](https://www.luogu.com.cn/problem/P3356)       | 限制性带权路径         | 费用流   | 省选/NOI−   |\n| $23$ | P1251    | [餐巾计划问题](https://www.luogu.com.cn/problem/P1251)       | 限制性带权路径         | 费用流   | 省选/NOI−   |\n| $24$ | P2775    | [机器人路径规划问题](https://www.luogu.com.cn/problem/P2775) | 题目有误               | 题目有误 | 暂无评定    |\n\n## 题型归纳\n\n网络流 $24$ 题中所有出现过的题型整理如下。\n\n### $\\large\\mathfrak{1st.}$ 图上状态转移\n\n涉案题目：\n\n| 编号 |                           题目名称                           |    题目模型    | 转化模型 |\n| :--: | :----------------------------------------------------------: | :------------: | :------: |\n|  $2$   | [孤岛营救问题](https://www.luogu.org/problemnew/show/P4011)  | 分层图最短路径 | 最短路径 |\n|  $3$   | [汽车加油行驶问题](https://www.luogu.org/problemnew/show/P4009) | 分层图最短路径 | 最短路径 |\n|  $4$   | [软件补丁问题](https://www.luogu.org/problemnew/show/P2761)  |  最小转移代价  | 最短路径 |\n|  $5$   | [星际转移问题](https://www.luogu.org/problemnew/show/P2761)  |   分层图转移   |  最大流  |\n\n这类题的特征就是，由一个确定的状态可以通过有限的方案，转化为另外一种确定的状态，思路有点类似 $\\text{dp}$ 转移。\n\n$2$、$3$、$4$ 这三道题就是状压 $\\text{dp}$（没错，网络流里混进来的间谍），见图，一发 $\\text{SPFA}$ 或 $\\text{Dijkstra}$ 即可\n\n其中第 4 题还有一点比较特殊，这道题的转移方案特别多，对应过来就是，图上的边特别特别多，多到无法存下来。咋办呢？由于点是确定且数量可以接受的，就跑最短路径的同时，“建”边即可。\n\n而 $5$ 这道题稍微有一点难度。这道题和前三道题有所区分。它并不是单纯的状压，而用到网络流。\n\n它的一个思维难点就在于时间是无法事先确定的，只能模拟。模拟的过程中，不断为某一天增边建图，然后跑最大流\n\n### $\\large\\mathfrak{2nd.}$ 有向无环图最小路径覆盖\n\n涉案题目：\n\n| 编号 |                           题目名字                           |        题目模型        | 转化模型 |\n| :--: | :----------------------------------------------------------: | :--------------------: | :------: |\n| $7$  | [最小路径覆盖问题](https://www.luogu.org/problemnew/show/P2764) | 有向无环图最小路径覆盖 |  最大流  |\n| $8$  |  [魔术球问题](https://www.luogu.org/problemnew/show/P2765)   | 有向无环图最小路径覆盖 |  最大流  |\n\n详情请参考博客 “网络流 最小路径覆盖” 和 “题解 魔术球问题”\n\n### $\\large\\mathfrak{3rd.}$ 二分图相关算法\n\n涉案题目：\n\n| 编号 |                           题目名字                           |    题目模型    | 转化模型 |\n| :--: | :----------------------------------------------------------: | :------------: | :------: |\n| $1$  | [飞行员配对方案问题](https://www.luogu.com.cn/problem/P2756) | 二分图最大匹配 |  二分图  |\n| $9$  |   [圆桌问题](https://www.luogu.org/problemnew/show/P3254)    | 二分图多重匹配 |  最大流  |\n| $10$ |  [试题库问题](https://www.luogu.org/problemnew/show/P2763)   | 二分图多重匹配 |  最大流  |\n| $11$ |   [分配问题](https://www.luogu.org/problemnew/show/P4014)    | 二分图最佳匹配 |  费用流  |\n\n这类题就是用网络流的算法去解决二分图的问题。学习了网络流之后，再看二分图，感觉就比较简单了。简单的建图，简单的网络流即可一发带走 (•̀ ω •́ )y\n\n### $\\large\\mathfrak{4th.}$ 不相交路径\n\n涉案题目：\n\n| 编号 |                           题目名字                           |    题目模型    | 转化模型 |\n| :--: | :----------------------------------------------------------: | :------------: | :------: |\n| $16$ | [最长递增子序列问题](https://www.luogu.org/problemnew/show/P2766) | 限制性带权路径 |  最大流  |\n| $17$ | [航空路线问题](https://www.luogu.org/problemnew/show/P2770)  | 限制性带权路径 |  费用流  |\n| $18$ | [数字梯形问题](https://www.luogu.org/problemnew/show/P4013)  | 限制性带权路径 |  费用流  |\n| $19$ | [最长k可重区间集问题](https://www.luogu.org/problemnew/show/P3358) | 限制性带权路径 |  费用流  |\n| $20$ | [最长k可重线段集问题](https://www.luogu.org/problemnew/show/P3357) | 限制性带权路径 |  费用流  |\n| $21$ | [深海机器人问题](https://www.luogu.org/problemnew/show/P4012) | 限制性带权路径 |  费用流  |\n| $22$ | [火星探险问题](https://www.luogu.org/problemnew/show/P3356)  | 限制性带权路径 |  费用流  |\n\n第一眼看限制性带权路径的题，很容易让人感觉是搜索题。因为假如数据范围足够小，简单的搜索是能够保证正确性的。\n\n但是，学完了网络流，可解决的数据范围肯定就要比搜索肥了不少\n\n这类题的总体思路是拆点：\n\n1. 将 $x$ 拆为 $x_1$ 和 $x_2$ 两个点，$x_1$ 为入点，$x_2$ 为出点。\n2. $x_1 \\rightarrow x_2$，流量表示这个点可以经过的次数，费用表示经过这个点的收益。\n3. $x_2 \\rightarrow y_1$，流量和费用表示从一个 $x$ 点转移到 $y$ 点，或者转移过程中点收益。\n4. $s \\rightarrow x_1$，表示路径的起始点，流量为路径条数，费用通常为 $0$。\n5. $x_2 \\rightarrow t$，表示路径的终点，流量通常为 $\\inf$，费用通常为 $0$。\n\n然后，建图，一发入魂╰(￣ω￣ｏ)\n\n### $\\large\\mathfrak{5th.}$ 线性规划网络优化\n\n涉案题目：\n\n| 编号 |                          题目名字                           |     题目模型     | 转化模型 |\n| :--: | :---------------------------------------------------------: | :--------------: | :------: |\n| $23$ | [餐巾计划问题](https://www.luogu.org/problemnew/show/P1251) | 线性规划网络优化 |  费用流  |\n\n这类题就是用网络流来优化线性规划，由于线性规划本身就具有很强的灵活性，所以这类题也相应的具有很强的灵活性\n\n说是“类”，其实也只见过两道题而已啊~~（＞人＜；）\n\n餐巾计划这道题我认为是网络 $24$ 题（除去那道错题）中最难的一道题。建图很有创造性，通过建图，完美的表达了题目的限制条件的同时，又用上了费用流这个强大利器。","slug":"network-flow-24-problem","published":1,"updated":"2024-09-08T13:43:06.000Z","_id":"cm0qrhqxw0001f4itd9wn58s5","comments":1,"layout":"post","photos":[],"content":"<h2 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h2><p>本篇博文转载自博客园 ticmis 的博文 <a class=\"link\"   href=\"https://www.cnblogs.com/ticmis/p/13211073.html\" >网络流24题 <i class=\"fa-regular fa-arrow-up-right-from-square fa-sm\"></i></a>，转载时做了如下改动：</p>\n<ol>\n<li>排版整理，规范化 $\\LaTeX$。</li>\n<li>题单中添加了 洛谷题号 和 洛谷难度。</li>\n<li>错别字修改。</li>\n<li>内容描述稍作改动。</li>\n</ol>\n<p>说实话，本人很讨厌 某SDN 上的各个博主间互相抄来抄去的行为，这一篇是我第一次转载别人的博文，原因是我认为原博文讲的非常好，想搬到过来推广给大家。</p>\n<h2 id=\"题单列表\"><a href=\"#题单列表\" class=\"headerlink\" title=\"题单列表\"></a>题单列表</h2><p>本人按照如下顺序整理的洛谷题单：<a class=\"link\"   href=\"https://www.luogu.com.cn/training/566535\" >网络流与线性规划 24 题 <i class=\"fa-regular fa-arrow-up-right-from-square fa-sm\"></i></a>。</p>\n<p>题单基本按照知识点难度排序，推荐读者以这个顺序做题。有相关建议可以在评论区提出。</p>\n<table>\n<thead>\n<tr>\n<th>编号</th>\n<th>洛谷题号</th>\n<th>题目名称</th>\n<th>题目模型</th>\n<th>转化模型</th>\n<th>洛谷难度</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>$1$</td>\n<td>P2756</td>\n<td><a class=\"link\"   href=\"https://www.luogu.com.cn/problem/P2756\" >飞行员配对方案问题 <i class=\"fa-regular fa-arrow-up-right-from-square fa-sm\"></i></a></td>\n<td>二分图最大匹配</td>\n<td>二分图</td>\n<td>提高+&#x2F;省选−</td>\n</tr>\n<tr>\n<td>$2$</td>\n<td>P4011</td>\n<td><a class=\"link\"   href=\"https://www.luogu.com.cn/problem/P4011\" >孤岛营救问题 <i class=\"fa-regular fa-arrow-up-right-from-square fa-sm\"></i></a></td>\n<td>分层图最短路</td>\n<td>最短路径</td>\n<td>提高+&#x2F;省选−</td>\n</tr>\n<tr>\n<td>$3$</td>\n<td>P4009</td>\n<td><a class=\"link\"   href=\"https://www.luogu.com.cn/problem/P4009\" >汽车加油行驶问题 <i class=\"fa-regular fa-arrow-up-right-from-square fa-sm\"></i></a></td>\n<td>分层图最短路</td>\n<td>最短路径</td>\n<td>省选&#x2F;NOI−</td>\n</tr>\n<tr>\n<td>$4$</td>\n<td>P2761</td>\n<td><a class=\"link\"   href=\"https://www.luogu.com.cn/problem/P2761\" >软件补丁问题 <i class=\"fa-regular fa-arrow-up-right-from-square fa-sm\"></i></a></td>\n<td>最小转移代价</td>\n<td>最短路径</td>\n<td>提高+&#x2F;省选−</td>\n</tr>\n<tr>\n<td>$5$</td>\n<td>P2754</td>\n<td><a class=\"link\"   href=\"https://www.luogu.com.cn/problem/P2754\" >星际转移问题 <i class=\"fa-regular fa-arrow-up-right-from-square fa-sm\"></i></a></td>\n<td>分层图转移</td>\n<td>最大流</td>\n<td>省选&#x2F;NOI−</td>\n</tr>\n<tr>\n<td>$6$</td>\n<td>P2762</td>\n<td><a class=\"link\"   href=\"https://www.luogu.com.cn/problem/P2762\" >太空飞行计划问题 <i class=\"fa-regular fa-arrow-up-right-from-square fa-sm\"></i></a></td>\n<td>最大权闭合图</td>\n<td>最小割</td>\n<td>省选&#x2F;NOI−</td>\n</tr>\n<tr>\n<td>$7$</td>\n<td>P2764</td>\n<td><a class=\"link\"   href=\"https://www.luogu.com.cn/problem/P2764\" >最小路径覆盖问题 <i class=\"fa-regular fa-arrow-up-right-from-square fa-sm\"></i></a></td>\n<td>有向无环图最小路径覆盖</td>\n<td>最大流</td>\n<td>省选&#x2F;NOI−</td>\n</tr>\n<tr>\n<td>$8$</td>\n<td>P2765</td>\n<td><a class=\"link\"   href=\"https://www.luogu.com.cn/problem/P2765\" >魔术球问题 <i class=\"fa-regular fa-arrow-up-right-from-square fa-sm\"></i></a></td>\n<td>有向无环图最小路径覆盖</td>\n<td>最大流</td>\n<td>省选&#x2F;NOI−</td>\n</tr>\n<tr>\n<td>$9$</td>\n<td>P3254</td>\n<td><a class=\"link\"   href=\"https://www.luogu.com.cn/problem/P3254\" >圆桌问题 <i class=\"fa-regular fa-arrow-up-right-from-square fa-sm\"></i></a></td>\n<td>二分图多重匹配</td>\n<td>最大流</td>\n<td>提高+&#x2F;省选−</td>\n</tr>\n<tr>\n<td>$10$</td>\n<td>P2763</td>\n<td><a class=\"link\"   href=\"https://www.luogu.com.cn/problem/P2763\" >试题库问题 <i class=\"fa-regular fa-arrow-up-right-from-square fa-sm\"></i></a></td>\n<td>二分图多重匹配</td>\n<td>最大流</td>\n<td>提高+&#x2F;省选−</td>\n</tr>\n<tr>\n<td>$11$</td>\n<td>P4014</td>\n<td><a class=\"link\"   href=\"https://www.luogu.com.cn/problem/P4014\" >分配问题 <i class=\"fa-regular fa-arrow-up-right-from-square fa-sm\"></i></a></td>\n<td>二分图最佳匹配</td>\n<td>费用流</td>\n<td>提高+&#x2F;省选−</td>\n</tr>\n<tr>\n<td>$12$</td>\n<td>P2774</td>\n<td><a class=\"link\"   href=\"https://www.luogu.com.cn/problem/P2774\" >方格取数问题 <i class=\"fa-regular fa-arrow-up-right-from-square fa-sm\"></i></a></td>\n<td>二分图点权最大独立集</td>\n<td>最小割</td>\n<td>省选&#x2F;NOI−</td>\n</tr>\n<tr>\n<td>$13$</td>\n<td>P3355</td>\n<td><a class=\"link\"   href=\"https://www.luogu.com.cn/problem/P3355\" >骑士共存问题 <i class=\"fa-regular fa-arrow-up-right-from-square fa-sm\"></i></a></td>\n<td>二分图点权最大独立集</td>\n<td>最小割</td>\n<td>省选&#x2F;NOI−</td>\n</tr>\n<tr>\n<td>$14$</td>\n<td>P4016</td>\n<td><a class=\"link\"   href=\"https://www.luogu.com.cn/problem/P4016\" >负载平衡问题 <i class=\"fa-regular fa-arrow-up-right-from-square fa-sm\"></i></a></td>\n<td>费用流<del>水题</del>模板题</td>\n<td>费用流</td>\n<td>省选&#x2F;NOI-</td>\n</tr>\n<tr>\n<td>$15$</td>\n<td>P4015</td>\n<td><a class=\"link\"   href=\"https://www.luogu.com.cn/problem/P4015\" >运输问题 <i class=\"fa-regular fa-arrow-up-right-from-square fa-sm\"></i></a></td>\n<td>费用流<del>水题</del>模板题</td>\n<td>费用流</td>\n<td>提高+&#x2F;省选−</td>\n</tr>\n<tr>\n<td>$16$</td>\n<td>P2766</td>\n<td><a class=\"link\"   href=\"https://www.luogu.com.cn/problem/P2766\" >最长不下降子序列问题 <i class=\"fa-regular fa-arrow-up-right-from-square fa-sm\"></i></a></td>\n<td>限制性带权路径</td>\n<td>费用流</td>\n<td>省选&#x2F;NOI−</td>\n</tr>\n<tr>\n<td>$17$</td>\n<td>P2770</td>\n<td><a class=\"link\"   href=\"https://www.luogu.com.cn/problem/P2770\" >航空路线问题 <i class=\"fa-regular fa-arrow-up-right-from-square fa-sm\"></i></a></td>\n<td>限制性带权路径</td>\n<td>费用流</td>\n<td>省选&#x2F;NOI−</td>\n</tr>\n<tr>\n<td>$18$</td>\n<td>P4013</td>\n<td><a class=\"link\"   href=\"https://www.luogu.com.cn/problem/P4013\" >数字梯形问题 <i class=\"fa-regular fa-arrow-up-right-from-square fa-sm\"></i></a></td>\n<td>限制性带权路径</td>\n<td>费用流</td>\n<td>省选&#x2F;NOI−</td>\n</tr>\n<tr>\n<td>$19$</td>\n<td>P3358</td>\n<td><a class=\"link\"   href=\"https://www.luogu.com.cn/problem/P3358\" >最长k可重区间集问题 <i class=\"fa-regular fa-arrow-up-right-from-square fa-sm\"></i></a></td>\n<td>限制性带权路径</td>\n<td>费用流</td>\n<td>省选&#x2F;NOI−</td>\n</tr>\n<tr>\n<td>$20$</td>\n<td>P3357</td>\n<td><a class=\"link\"   href=\"https://www.luogu.com.cn/problem/P3357\" >最长k可重线段集问题 <i class=\"fa-regular fa-arrow-up-right-from-square fa-sm\"></i></a></td>\n<td>限制性带权路径</td>\n<td>费用流</td>\n<td>省选&#x2F;NOI−</td>\n</tr>\n<tr>\n<td>$21$</td>\n<td>P4012</td>\n<td><a class=\"link\"   href=\"https://www.luogu.com.cn/problem/P4012\" >深海机器人问题 <i class=\"fa-regular fa-arrow-up-right-from-square fa-sm\"></i></a></td>\n<td>限制性带权路径</td>\n<td>费用流</td>\n<td>省选&#x2F;NOI−</td>\n</tr>\n<tr>\n<td>$22$</td>\n<td>P3356</td>\n<td><a class=\"link\"   href=\"https://www.luogu.com.cn/problem/P3356\" >火星探险问题 <i class=\"fa-regular fa-arrow-up-right-from-square fa-sm\"></i></a></td>\n<td>限制性带权路径</td>\n<td>费用流</td>\n<td>省选&#x2F;NOI−</td>\n</tr>\n<tr>\n<td>$23$</td>\n<td>P1251</td>\n<td><a class=\"link\"   href=\"https://www.luogu.com.cn/problem/P1251\" >餐巾计划问题 <i class=\"fa-regular fa-arrow-up-right-from-square fa-sm\"></i></a></td>\n<td>限制性带权路径</td>\n<td>费用流</td>\n<td>省选&#x2F;NOI−</td>\n</tr>\n<tr>\n<td>$24$</td>\n<td>P2775</td>\n<td><a class=\"link\"   href=\"https://www.luogu.com.cn/problem/P2775\" >机器人路径规划问题 <i class=\"fa-regular fa-arrow-up-right-from-square fa-sm\"></i></a></td>\n<td>题目有误</td>\n<td>题目有误</td>\n<td>暂无评定</td>\n</tr>\n</tbody></table>\n<h2 id=\"题型归纳\"><a href=\"#题型归纳\" class=\"headerlink\" title=\"题型归纳\"></a>题型归纳</h2><p>网络流 $24$ 题中所有出现过的题型整理如下。</p>\n<h3 id=\"large-mathfrak-1st-图上状态转移\"><a href=\"#large-mathfrak-1st-图上状态转移\" class=\"headerlink\" title=\"$\\large\\mathfrak{1st.}$ 图上状态转移\"></a>$\\large\\mathfrak{1st.}$ 图上状态转移</h3><p>涉案题目：</p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">编号</th>\n<th align=\"center\">题目名称</th>\n<th align=\"center\">题目模型</th>\n<th align=\"center\">转化模型</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">$2$</td>\n<td align=\"center\"><a class=\"link\"   href=\"https://www.luogu.org/problemnew/show/P4011\" >孤岛营救问题 <i class=\"fa-regular fa-arrow-up-right-from-square fa-sm\"></i></a></td>\n<td align=\"center\">分层图最短路径</td>\n<td align=\"center\">最短路径</td>\n</tr>\n<tr>\n<td align=\"center\">$3$</td>\n<td align=\"center\"><a class=\"link\"   href=\"https://www.luogu.org/problemnew/show/P4009\" >汽车加油行驶问题 <i class=\"fa-regular fa-arrow-up-right-from-square fa-sm\"></i></a></td>\n<td align=\"center\">分层图最短路径</td>\n<td align=\"center\">最短路径</td>\n</tr>\n<tr>\n<td align=\"center\">$4$</td>\n<td align=\"center\"><a class=\"link\"   href=\"https://www.luogu.org/problemnew/show/P2761\" >软件补丁问题 <i class=\"fa-regular fa-arrow-up-right-from-square fa-sm\"></i></a></td>\n<td align=\"center\">最小转移代价</td>\n<td align=\"center\">最短路径</td>\n</tr>\n<tr>\n<td align=\"center\">$5$</td>\n<td align=\"center\"><a class=\"link\"   href=\"https://www.luogu.org/problemnew/show/P2761\" >星际转移问题 <i class=\"fa-regular fa-arrow-up-right-from-square fa-sm\"></i></a></td>\n<td align=\"center\">分层图转移</td>\n<td align=\"center\">最大流</td>\n</tr>\n</tbody></table>\n<p>这类题的特征就是，由一个确定的状态可以通过有限的方案，转化为另外一种确定的状态，思路有点类似 $\\text{dp}$ 转移。</p>\n<p>$2$、$3$、$4$ 这三道题就是状压 $\\text{dp}$（没错，网络流里混进来的间谍），见图，一发 $\\text{SPFA}$ 或 $\\text{Dijkstra}$ 即可</p>\n<p>其中第 4 题还有一点比较特殊，这道题的转移方案特别多，对应过来就是，图上的边特别特别多，多到无法存下来。咋办呢？由于点是确定且数量可以接受的，就跑最短路径的同时，“建”边即可。</p>\n<p>而 $5$ 这道题稍微有一点难度。这道题和前三道题有所区分。它并不是单纯的状压，而用到网络流。</p>\n<p>它的一个思维难点就在于时间是无法事先确定的，只能模拟。模拟的过程中，不断为某一天增边建图，然后跑最大流</p>\n<h3 id=\"large-mathfrak-2nd-有向无环图最小路径覆盖\"><a href=\"#large-mathfrak-2nd-有向无环图最小路径覆盖\" class=\"headerlink\" title=\"$\\large\\mathfrak{2nd.}$ 有向无环图最小路径覆盖\"></a>$\\large\\mathfrak{2nd.}$ 有向无环图最小路径覆盖</h3><p>涉案题目：</p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">编号</th>\n<th align=\"center\">题目名字</th>\n<th align=\"center\">题目模型</th>\n<th align=\"center\">转化模型</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">$7$</td>\n<td align=\"center\"><a class=\"link\"   href=\"https://www.luogu.org/problemnew/show/P2764\" >最小路径覆盖问题 <i class=\"fa-regular fa-arrow-up-right-from-square fa-sm\"></i></a></td>\n<td align=\"center\">有向无环图最小路径覆盖</td>\n<td align=\"center\">最大流</td>\n</tr>\n<tr>\n<td align=\"center\">$8$</td>\n<td align=\"center\"><a class=\"link\"   href=\"https://www.luogu.org/problemnew/show/P2765\" >魔术球问题 <i class=\"fa-regular fa-arrow-up-right-from-square fa-sm\"></i></a></td>\n<td align=\"center\">有向无环图最小路径覆盖</td>\n<td align=\"center\">最大流</td>\n</tr>\n</tbody></table>\n<p>详情请参考博客 “网络流 最小路径覆盖” 和 “题解 魔术球问题”</p>\n<h3 id=\"large-mathfrak-3rd-二分图相关算法\"><a href=\"#large-mathfrak-3rd-二分图相关算法\" class=\"headerlink\" title=\"$\\large\\mathfrak{3rd.}$ 二分图相关算法\"></a>$\\large\\mathfrak{3rd.}$ 二分图相关算法</h3><p>涉案题目：</p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">编号</th>\n<th align=\"center\">题目名字</th>\n<th align=\"center\">题目模型</th>\n<th align=\"center\">转化模型</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">$1$</td>\n<td align=\"center\"><a class=\"link\"   href=\"https://www.luogu.com.cn/problem/P2756\" >飞行员配对方案问题 <i class=\"fa-regular fa-arrow-up-right-from-square fa-sm\"></i></a></td>\n<td align=\"center\">二分图最大匹配</td>\n<td align=\"center\">二分图</td>\n</tr>\n<tr>\n<td align=\"center\">$9$</td>\n<td align=\"center\"><a class=\"link\"   href=\"https://www.luogu.org/problemnew/show/P3254\" >圆桌问题 <i class=\"fa-regular fa-arrow-up-right-from-square fa-sm\"></i></a></td>\n<td align=\"center\">二分图多重匹配</td>\n<td align=\"center\">最大流</td>\n</tr>\n<tr>\n<td align=\"center\">$10$</td>\n<td align=\"center\"><a class=\"link\"   href=\"https://www.luogu.org/problemnew/show/P2763\" >试题库问题 <i class=\"fa-regular fa-arrow-up-right-from-square fa-sm\"></i></a></td>\n<td align=\"center\">二分图多重匹配</td>\n<td align=\"center\">最大流</td>\n</tr>\n<tr>\n<td align=\"center\">$11$</td>\n<td align=\"center\"><a class=\"link\"   href=\"https://www.luogu.org/problemnew/show/P4014\" >分配问题 <i class=\"fa-regular fa-arrow-up-right-from-square fa-sm\"></i></a></td>\n<td align=\"center\">二分图最佳匹配</td>\n<td align=\"center\">费用流</td>\n</tr>\n</tbody></table>\n<p>这类题就是用网络流的算法去解决二分图的问题。学习了网络流之后，再看二分图，感觉就比较简单了。简单的建图，简单的网络流即可一发带走 (•̀ ω •́ )y</p>\n<h3 id=\"large-mathfrak-4th-不相交路径\"><a href=\"#large-mathfrak-4th-不相交路径\" class=\"headerlink\" title=\"$\\large\\mathfrak{4th.}$ 不相交路径\"></a>$\\large\\mathfrak{4th.}$ 不相交路径</h3><p>涉案题目：</p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">编号</th>\n<th align=\"center\">题目名字</th>\n<th align=\"center\">题目模型</th>\n<th align=\"center\">转化模型</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">$16$</td>\n<td align=\"center\"><a class=\"link\"   href=\"https://www.luogu.org/problemnew/show/P2766\" >最长递增子序列问题 <i class=\"fa-regular fa-arrow-up-right-from-square fa-sm\"></i></a></td>\n<td align=\"center\">限制性带权路径</td>\n<td align=\"center\">最大流</td>\n</tr>\n<tr>\n<td align=\"center\">$17$</td>\n<td align=\"center\"><a class=\"link\"   href=\"https://www.luogu.org/problemnew/show/P2770\" >航空路线问题 <i class=\"fa-regular fa-arrow-up-right-from-square fa-sm\"></i></a></td>\n<td align=\"center\">限制性带权路径</td>\n<td align=\"center\">费用流</td>\n</tr>\n<tr>\n<td align=\"center\">$18$</td>\n<td align=\"center\"><a class=\"link\"   href=\"https://www.luogu.org/problemnew/show/P4013\" >数字梯形问题 <i class=\"fa-regular fa-arrow-up-right-from-square fa-sm\"></i></a></td>\n<td align=\"center\">限制性带权路径</td>\n<td align=\"center\">费用流</td>\n</tr>\n<tr>\n<td align=\"center\">$19$</td>\n<td align=\"center\"><a class=\"link\"   href=\"https://www.luogu.org/problemnew/show/P3358\" >最长k可重区间集问题 <i class=\"fa-regular fa-arrow-up-right-from-square fa-sm\"></i></a></td>\n<td align=\"center\">限制性带权路径</td>\n<td align=\"center\">费用流</td>\n</tr>\n<tr>\n<td align=\"center\">$20$</td>\n<td align=\"center\"><a class=\"link\"   href=\"https://www.luogu.org/problemnew/show/P3357\" >最长k可重线段集问题 <i class=\"fa-regular fa-arrow-up-right-from-square fa-sm\"></i></a></td>\n<td align=\"center\">限制性带权路径</td>\n<td align=\"center\">费用流</td>\n</tr>\n<tr>\n<td align=\"center\">$21$</td>\n<td align=\"center\"><a class=\"link\"   href=\"https://www.luogu.org/problemnew/show/P4012\" >深海机器人问题 <i class=\"fa-regular fa-arrow-up-right-from-square fa-sm\"></i></a></td>\n<td align=\"center\">限制性带权路径</td>\n<td align=\"center\">费用流</td>\n</tr>\n<tr>\n<td align=\"center\">$22$</td>\n<td align=\"center\"><a class=\"link\"   href=\"https://www.luogu.org/problemnew/show/P3356\" >火星探险问题 <i class=\"fa-regular fa-arrow-up-right-from-square fa-sm\"></i></a></td>\n<td align=\"center\">限制性带权路径</td>\n<td align=\"center\">费用流</td>\n</tr>\n</tbody></table>\n<p>第一眼看限制性带权路径的题，很容易让人感觉是搜索题。因为假如数据范围足够小，简单的搜索是能够保证正确性的。</p>\n<p>但是，学完了网络流，可解决的数据范围肯定就要比搜索肥了不少</p>\n<p>这类题的总体思路是拆点：</p>\n<ol>\n<li>将 $x$ 拆为 $x_1$ 和 $x_2$ 两个点，$x_1$ 为入点，$x_2$ 为出点。</li>\n<li>$x_1 \\rightarrow x_2$，流量表示这个点可以经过的次数，费用表示经过这个点的收益。</li>\n<li>$x_2 \\rightarrow y_1$，流量和费用表示从一个 $x$ 点转移到 $y$ 点，或者转移过程中点收益。</li>\n<li>$s \\rightarrow x_1$，表示路径的起始点，流量为路径条数，费用通常为 $0$。</li>\n<li>$x_2 \\rightarrow t$，表示路径的终点，流量通常为 $\\inf$，费用通常为 $0$。</li>\n</ol>\n<p>然后，建图，一发入魂╰(￣ω￣ｏ)</p>\n<h3 id=\"large-mathfrak-5th-线性规划网络优化\"><a href=\"#large-mathfrak-5th-线性规划网络优化\" class=\"headerlink\" title=\"$\\large\\mathfrak{5th.}$ 线性规划网络优化\"></a>$\\large\\mathfrak{5th.}$ 线性规划网络优化</h3><p>涉案题目：</p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">编号</th>\n<th align=\"center\">题目名字</th>\n<th align=\"center\">题目模型</th>\n<th align=\"center\">转化模型</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">$23$</td>\n<td align=\"center\"><a class=\"link\"   href=\"https://www.luogu.org/problemnew/show/P1251\" >餐巾计划问题 <i class=\"fa-regular fa-arrow-up-right-from-square fa-sm\"></i></a></td>\n<td align=\"center\">线性规划网络优化</td>\n<td align=\"center\">费用流</td>\n</tr>\n</tbody></table>\n<p>这类题就是用网络流来优化线性规划，由于线性规划本身就具有很强的灵活性，所以这类题也相应的具有很强的灵活性</p>\n<p>说是“类”，其实也只见过两道题而已啊~~（＞人＜；）</p>\n<p>餐巾计划这道题我认为是网络 $24$ 题（除去那道错题）中最难的一道题。建图很有创造性，通过建图，完美的表达了题目的限制条件的同时，又用上了费用流这个强大利器。</p>\n","more":"<h2 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h2><p>本篇博文转载自博客园 ticmis 的博文 <a class=\"link\"   href=\"https://www.cnblogs.com/ticmis/p/13211073.html\" >网络流24题 <i class=\"fa-regular fa-arrow-up-right-from-square fa-sm\"></i></a>，转载时做了如下改动：</p>\n<ol>\n<li>排版整理，规范化 $\\LaTeX$。</li>\n<li>题单中添加了 洛谷题号 和 洛谷难度。</li>\n<li>错别字修改。</li>\n<li>内容描述稍作改动。</li>\n</ol>\n<p>说实话，本人很讨厌 某SDN 上的各个博主间互相抄来抄去的行为，这一篇是我第一次转载别人的博文，原因是我认为原博文讲的非常好，想搬到过来推广给大家。</p>\n<h2 id=\"题单列表\"><a href=\"#题单列表\" class=\"headerlink\" title=\"题单列表\"></a>题单列表</h2><p>本人按照如下顺序整理的洛谷题单：<a class=\"link\"   href=\"https://www.luogu.com.cn/training/566535\" >网络流与线性规划 24 题 <i class=\"fa-regular fa-arrow-up-right-from-square fa-sm\"></i></a>。</p>\n<p>题单基本按照知识点难度排序，推荐读者以这个顺序做题。有相关建议可以在评论区提出。</p>\n<table>\n<thead>\n<tr>\n<th>编号</th>\n<th>洛谷题号</th>\n<th>题目名称</th>\n<th>题目模型</th>\n<th>转化模型</th>\n<th>洛谷难度</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>$1$</td>\n<td>P2756</td>\n<td><a class=\"link\"   href=\"https://www.luogu.com.cn/problem/P2756\" >飞行员配对方案问题 <i class=\"fa-regular fa-arrow-up-right-from-square fa-sm\"></i></a></td>\n<td>二分图最大匹配</td>\n<td>二分图</td>\n<td>提高+&#x2F;省选−</td>\n</tr>\n<tr>\n<td>$2$</td>\n<td>P4011</td>\n<td><a class=\"link\"   href=\"https://www.luogu.com.cn/problem/P4011\" >孤岛营救问题 <i class=\"fa-regular fa-arrow-up-right-from-square fa-sm\"></i></a></td>\n<td>分层图最短路</td>\n<td>最短路径</td>\n<td>提高+&#x2F;省选−</td>\n</tr>\n<tr>\n<td>$3$</td>\n<td>P4009</td>\n<td><a class=\"link\"   href=\"https://www.luogu.com.cn/problem/P4009\" >汽车加油行驶问题 <i class=\"fa-regular fa-arrow-up-right-from-square fa-sm\"></i></a></td>\n<td>分层图最短路</td>\n<td>最短路径</td>\n<td>省选&#x2F;NOI−</td>\n</tr>\n<tr>\n<td>$4$</td>\n<td>P2761</td>\n<td><a class=\"link\"   href=\"https://www.luogu.com.cn/problem/P2761\" >软件补丁问题 <i class=\"fa-regular fa-arrow-up-right-from-square fa-sm\"></i></a></td>\n<td>最小转移代价</td>\n<td>最短路径</td>\n<td>提高+&#x2F;省选−</td>\n</tr>\n<tr>\n<td>$5$</td>\n<td>P2754</td>\n<td><a class=\"link\"   href=\"https://www.luogu.com.cn/problem/P2754\" >星际转移问题 <i class=\"fa-regular fa-arrow-up-right-from-square fa-sm\"></i></a></td>\n<td>分层图转移</td>\n<td>最大流</td>\n<td>省选&#x2F;NOI−</td>\n</tr>\n<tr>\n<td>$6$</td>\n<td>P2762</td>\n<td><a class=\"link\"   href=\"https://www.luogu.com.cn/problem/P2762\" >太空飞行计划问题 <i class=\"fa-regular fa-arrow-up-right-from-square fa-sm\"></i></a></td>\n<td>最大权闭合图</td>\n<td>最小割</td>\n<td>省选&#x2F;NOI−</td>\n</tr>\n<tr>\n<td>$7$</td>\n<td>P2764</td>\n<td><a class=\"link\"   href=\"https://www.luogu.com.cn/problem/P2764\" >最小路径覆盖问题 <i class=\"fa-regular fa-arrow-up-right-from-square fa-sm\"></i></a></td>\n<td>有向无环图最小路径覆盖</td>\n<td>最大流</td>\n<td>省选&#x2F;NOI−</td>\n</tr>\n<tr>\n<td>$8$</td>\n<td>P2765</td>\n<td><a class=\"link\"   href=\"https://www.luogu.com.cn/problem/P2765\" >魔术球问题 <i class=\"fa-regular fa-arrow-up-right-from-square fa-sm\"></i></a></td>\n<td>有向无环图最小路径覆盖</td>\n<td>最大流</td>\n<td>省选&#x2F;NOI−</td>\n</tr>\n<tr>\n<td>$9$</td>\n<td>P3254</td>\n<td><a class=\"link\"   href=\"https://www.luogu.com.cn/problem/P3254\" >圆桌问题 <i class=\"fa-regular fa-arrow-up-right-from-square fa-sm\"></i></a></td>\n<td>二分图多重匹配</td>\n<td>最大流</td>\n<td>提高+&#x2F;省选−</td>\n</tr>\n<tr>\n<td>$10$</td>\n<td>P2763</td>\n<td><a class=\"link\"   href=\"https://www.luogu.com.cn/problem/P2763\" >试题库问题 <i class=\"fa-regular fa-arrow-up-right-from-square fa-sm\"></i></a></td>\n<td>二分图多重匹配</td>\n<td>最大流</td>\n<td>提高+&#x2F;省选−</td>\n</tr>\n<tr>\n<td>$11$</td>\n<td>P4014</td>\n<td><a class=\"link\"   href=\"https://www.luogu.com.cn/problem/P4014\" >分配问题 <i class=\"fa-regular fa-arrow-up-right-from-square fa-sm\"></i></a></td>\n<td>二分图最佳匹配</td>\n<td>费用流</td>\n<td>提高+&#x2F;省选−</td>\n</tr>\n<tr>\n<td>$12$</td>\n<td>P2774</td>\n<td><a class=\"link\"   href=\"https://www.luogu.com.cn/problem/P2774\" >方格取数问题 <i class=\"fa-regular fa-arrow-up-right-from-square fa-sm\"></i></a></td>\n<td>二分图点权最大独立集</td>\n<td>最小割</td>\n<td>省选&#x2F;NOI−</td>\n</tr>\n<tr>\n<td>$13$</td>\n<td>P3355</td>\n<td><a class=\"link\"   href=\"https://www.luogu.com.cn/problem/P3355\" >骑士共存问题 <i class=\"fa-regular fa-arrow-up-right-from-square fa-sm\"></i></a></td>\n<td>二分图点权最大独立集</td>\n<td>最小割</td>\n<td>省选&#x2F;NOI−</td>\n</tr>\n<tr>\n<td>$14$</td>\n<td>P4016</td>\n<td><a class=\"link\"   href=\"https://www.luogu.com.cn/problem/P4016\" >负载平衡问题 <i class=\"fa-regular fa-arrow-up-right-from-square fa-sm\"></i></a></td>\n<td>费用流<del>水题</del>模板题</td>\n<td>费用流</td>\n<td>省选&#x2F;NOI-</td>\n</tr>\n<tr>\n<td>$15$</td>\n<td>P4015</td>\n<td><a class=\"link\"   href=\"https://www.luogu.com.cn/problem/P4015\" >运输问题 <i class=\"fa-regular fa-arrow-up-right-from-square fa-sm\"></i></a></td>\n<td>费用流<del>水题</del>模板题</td>\n<td>费用流</td>\n<td>提高+&#x2F;省选−</td>\n</tr>\n<tr>\n<td>$16$</td>\n<td>P2766</td>\n<td><a class=\"link\"   href=\"https://www.luogu.com.cn/problem/P2766\" >最长不下降子序列问题 <i class=\"fa-regular fa-arrow-up-right-from-square fa-sm\"></i></a></td>\n<td>限制性带权路径</td>\n<td>费用流</td>\n<td>省选&#x2F;NOI−</td>\n</tr>\n<tr>\n<td>$17$</td>\n<td>P2770</td>\n<td><a class=\"link\"   href=\"https://www.luogu.com.cn/problem/P2770\" >航空路线问题 <i class=\"fa-regular fa-arrow-up-right-from-square fa-sm\"></i></a></td>\n<td>限制性带权路径</td>\n<td>费用流</td>\n<td>省选&#x2F;NOI−</td>\n</tr>\n<tr>\n<td>$18$</td>\n<td>P4013</td>\n<td><a class=\"link\"   href=\"https://www.luogu.com.cn/problem/P4013\" >数字梯形问题 <i class=\"fa-regular fa-arrow-up-right-from-square fa-sm\"></i></a></td>\n<td>限制性带权路径</td>\n<td>费用流</td>\n<td>省选&#x2F;NOI−</td>\n</tr>\n<tr>\n<td>$19$</td>\n<td>P3358</td>\n<td><a class=\"link\"   href=\"https://www.luogu.com.cn/problem/P3358\" >最长k可重区间集问题 <i class=\"fa-regular fa-arrow-up-right-from-square fa-sm\"></i></a></td>\n<td>限制性带权路径</td>\n<td>费用流</td>\n<td>省选&#x2F;NOI−</td>\n</tr>\n<tr>\n<td>$20$</td>\n<td>P3357</td>\n<td><a class=\"link\"   href=\"https://www.luogu.com.cn/problem/P3357\" >最长k可重线段集问题 <i class=\"fa-regular fa-arrow-up-right-from-square fa-sm\"></i></a></td>\n<td>限制性带权路径</td>\n<td>费用流</td>\n<td>省选&#x2F;NOI−</td>\n</tr>\n<tr>\n<td>$21$</td>\n<td>P4012</td>\n<td><a class=\"link\"   href=\"https://www.luogu.com.cn/problem/P4012\" >深海机器人问题 <i class=\"fa-regular fa-arrow-up-right-from-square fa-sm\"></i></a></td>\n<td>限制性带权路径</td>\n<td>费用流</td>\n<td>省选&#x2F;NOI−</td>\n</tr>\n<tr>\n<td>$22$</td>\n<td>P3356</td>\n<td><a class=\"link\"   href=\"https://www.luogu.com.cn/problem/P3356\" >火星探险问题 <i class=\"fa-regular fa-arrow-up-right-from-square fa-sm\"></i></a></td>\n<td>限制性带权路径</td>\n<td>费用流</td>\n<td>省选&#x2F;NOI−</td>\n</tr>\n<tr>\n<td>$23$</td>\n<td>P1251</td>\n<td><a class=\"link\"   href=\"https://www.luogu.com.cn/problem/P1251\" >餐巾计划问题 <i class=\"fa-regular fa-arrow-up-right-from-square fa-sm\"></i></a></td>\n<td>限制性带权路径</td>\n<td>费用流</td>\n<td>省选&#x2F;NOI−</td>\n</tr>\n<tr>\n<td>$24$</td>\n<td>P2775</td>\n<td><a class=\"link\"   href=\"https://www.luogu.com.cn/problem/P2775\" >机器人路径规划问题 <i class=\"fa-regular fa-arrow-up-right-from-square fa-sm\"></i></a></td>\n<td>题目有误</td>\n<td>题目有误</td>\n<td>暂无评定</td>\n</tr>\n</tbody></table>\n<h2 id=\"题型归纳\"><a href=\"#题型归纳\" class=\"headerlink\" title=\"题型归纳\"></a>题型归纳</h2><p>网络流 $24$ 题中所有出现过的题型整理如下。</p>\n<h3 id=\"large-mathfrak-1st-图上状态转移\"><a href=\"#large-mathfrak-1st-图上状态转移\" class=\"headerlink\" title=\"$\\large\\mathfrak{1st.}$ 图上状态转移\"></a>$\\large\\mathfrak{1st.}$ 图上状态转移</h3><p>涉案题目：</p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">编号</th>\n<th align=\"center\">题目名称</th>\n<th align=\"center\">题目模型</th>\n<th align=\"center\">转化模型</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">$2$</td>\n<td align=\"center\"><a class=\"link\"   href=\"https://www.luogu.org/problemnew/show/P4011\" >孤岛营救问题 <i class=\"fa-regular fa-arrow-up-right-from-square fa-sm\"></i></a></td>\n<td align=\"center\">分层图最短路径</td>\n<td align=\"center\">最短路径</td>\n</tr>\n<tr>\n<td align=\"center\">$3$</td>\n<td align=\"center\"><a class=\"link\"   href=\"https://www.luogu.org/problemnew/show/P4009\" >汽车加油行驶问题 <i class=\"fa-regular fa-arrow-up-right-from-square fa-sm\"></i></a></td>\n<td align=\"center\">分层图最短路径</td>\n<td align=\"center\">最短路径</td>\n</tr>\n<tr>\n<td align=\"center\">$4$</td>\n<td align=\"center\"><a class=\"link\"   href=\"https://www.luogu.org/problemnew/show/P2761\" >软件补丁问题 <i class=\"fa-regular fa-arrow-up-right-from-square fa-sm\"></i></a></td>\n<td align=\"center\">最小转移代价</td>\n<td align=\"center\">最短路径</td>\n</tr>\n<tr>\n<td align=\"center\">$5$</td>\n<td align=\"center\"><a class=\"link\"   href=\"https://www.luogu.org/problemnew/show/P2761\" >星际转移问题 <i class=\"fa-regular fa-arrow-up-right-from-square fa-sm\"></i></a></td>\n<td align=\"center\">分层图转移</td>\n<td align=\"center\">最大流</td>\n</tr>\n</tbody></table>\n<p>这类题的特征就是，由一个确定的状态可以通过有限的方案，转化为另外一种确定的状态，思路有点类似 $\\text{dp}$ 转移。</p>\n<p>$2$、$3$、$4$ 这三道题就是状压 $\\text{dp}$（没错，网络流里混进来的间谍），见图，一发 $\\text{SPFA}$ 或 $\\text{Dijkstra}$ 即可</p>\n<p>其中第 4 题还有一点比较特殊，这道题的转移方案特别多，对应过来就是，图上的边特别特别多，多到无法存下来。咋办呢？由于点是确定且数量可以接受的，就跑最短路径的同时，“建”边即可。</p>\n<p>而 $5$ 这道题稍微有一点难度。这道题和前三道题有所区分。它并不是单纯的状压，而用到网络流。</p>\n<p>它的一个思维难点就在于时间是无法事先确定的，只能模拟。模拟的过程中，不断为某一天增边建图，然后跑最大流</p>\n<h3 id=\"large-mathfrak-2nd-有向无环图最小路径覆盖\"><a href=\"#large-mathfrak-2nd-有向无环图最小路径覆盖\" class=\"headerlink\" title=\"$\\large\\mathfrak{2nd.}$ 有向无环图最小路径覆盖\"></a>$\\large\\mathfrak{2nd.}$ 有向无环图最小路径覆盖</h3><p>涉案题目：</p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">编号</th>\n<th align=\"center\">题目名字</th>\n<th align=\"center\">题目模型</th>\n<th align=\"center\">转化模型</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">$7$</td>\n<td align=\"center\"><a class=\"link\"   href=\"https://www.luogu.org/problemnew/show/P2764\" >最小路径覆盖问题 <i class=\"fa-regular fa-arrow-up-right-from-square fa-sm\"></i></a></td>\n<td align=\"center\">有向无环图最小路径覆盖</td>\n<td align=\"center\">最大流</td>\n</tr>\n<tr>\n<td align=\"center\">$8$</td>\n<td align=\"center\"><a class=\"link\"   href=\"https://www.luogu.org/problemnew/show/P2765\" >魔术球问题 <i class=\"fa-regular fa-arrow-up-right-from-square fa-sm\"></i></a></td>\n<td align=\"center\">有向无环图最小路径覆盖</td>\n<td align=\"center\">最大流</td>\n</tr>\n</tbody></table>\n<p>详情请参考博客 “网络流 最小路径覆盖” 和 “题解 魔术球问题”</p>\n<h3 id=\"large-mathfrak-3rd-二分图相关算法\"><a href=\"#large-mathfrak-3rd-二分图相关算法\" class=\"headerlink\" title=\"$\\large\\mathfrak{3rd.}$ 二分图相关算法\"></a>$\\large\\mathfrak{3rd.}$ 二分图相关算法</h3><p>涉案题目：</p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">编号</th>\n<th align=\"center\">题目名字</th>\n<th align=\"center\">题目模型</th>\n<th align=\"center\">转化模型</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">$1$</td>\n<td align=\"center\"><a class=\"link\"   href=\"https://www.luogu.com.cn/problem/P2756\" >飞行员配对方案问题 <i class=\"fa-regular fa-arrow-up-right-from-square fa-sm\"></i></a></td>\n<td align=\"center\">二分图最大匹配</td>\n<td align=\"center\">二分图</td>\n</tr>\n<tr>\n<td align=\"center\">$9$</td>\n<td align=\"center\"><a class=\"link\"   href=\"https://www.luogu.org/problemnew/show/P3254\" >圆桌问题 <i class=\"fa-regular fa-arrow-up-right-from-square fa-sm\"></i></a></td>\n<td align=\"center\">二分图多重匹配</td>\n<td align=\"center\">最大流</td>\n</tr>\n<tr>\n<td align=\"center\">$10$</td>\n<td align=\"center\"><a class=\"link\"   href=\"https://www.luogu.org/problemnew/show/P2763\" >试题库问题 <i class=\"fa-regular fa-arrow-up-right-from-square fa-sm\"></i></a></td>\n<td align=\"center\">二分图多重匹配</td>\n<td align=\"center\">最大流</td>\n</tr>\n<tr>\n<td align=\"center\">$11$</td>\n<td align=\"center\"><a class=\"link\"   href=\"https://www.luogu.org/problemnew/show/P4014\" >分配问题 <i class=\"fa-regular fa-arrow-up-right-from-square fa-sm\"></i></a></td>\n<td align=\"center\">二分图最佳匹配</td>\n<td align=\"center\">费用流</td>\n</tr>\n</tbody></table>\n<p>这类题就是用网络流的算法去解决二分图的问题。学习了网络流之后，再看二分图，感觉就比较简单了。简单的建图，简单的网络流即可一发带走 (•̀ ω •́ )y</p>\n<h3 id=\"large-mathfrak-4th-不相交路径\"><a href=\"#large-mathfrak-4th-不相交路径\" class=\"headerlink\" title=\"$\\large\\mathfrak{4th.}$ 不相交路径\"></a>$\\large\\mathfrak{4th.}$ 不相交路径</h3><p>涉案题目：</p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">编号</th>\n<th align=\"center\">题目名字</th>\n<th align=\"center\">题目模型</th>\n<th align=\"center\">转化模型</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">$16$</td>\n<td align=\"center\"><a class=\"link\"   href=\"https://www.luogu.org/problemnew/show/P2766\" >最长递增子序列问题 <i class=\"fa-regular fa-arrow-up-right-from-square fa-sm\"></i></a></td>\n<td align=\"center\">限制性带权路径</td>\n<td align=\"center\">最大流</td>\n</tr>\n<tr>\n<td align=\"center\">$17$</td>\n<td align=\"center\"><a class=\"link\"   href=\"https://www.luogu.org/problemnew/show/P2770\" >航空路线问题 <i class=\"fa-regular fa-arrow-up-right-from-square fa-sm\"></i></a></td>\n<td align=\"center\">限制性带权路径</td>\n<td align=\"center\">费用流</td>\n</tr>\n<tr>\n<td align=\"center\">$18$</td>\n<td align=\"center\"><a class=\"link\"   href=\"https://www.luogu.org/problemnew/show/P4013\" >数字梯形问题 <i class=\"fa-regular fa-arrow-up-right-from-square fa-sm\"></i></a></td>\n<td align=\"center\">限制性带权路径</td>\n<td align=\"center\">费用流</td>\n</tr>\n<tr>\n<td align=\"center\">$19$</td>\n<td align=\"center\"><a class=\"link\"   href=\"https://www.luogu.org/problemnew/show/P3358\" >最长k可重区间集问题 <i class=\"fa-regular fa-arrow-up-right-from-square fa-sm\"></i></a></td>\n<td align=\"center\">限制性带权路径</td>\n<td align=\"center\">费用流</td>\n</tr>\n<tr>\n<td align=\"center\">$20$</td>\n<td align=\"center\"><a class=\"link\"   href=\"https://www.luogu.org/problemnew/show/P3357\" >最长k可重线段集问题 <i class=\"fa-regular fa-arrow-up-right-from-square fa-sm\"></i></a></td>\n<td align=\"center\">限制性带权路径</td>\n<td align=\"center\">费用流</td>\n</tr>\n<tr>\n<td align=\"center\">$21$</td>\n<td align=\"center\"><a class=\"link\"   href=\"https://www.luogu.org/problemnew/show/P4012\" >深海机器人问题 <i class=\"fa-regular fa-arrow-up-right-from-square fa-sm\"></i></a></td>\n<td align=\"center\">限制性带权路径</td>\n<td align=\"center\">费用流</td>\n</tr>\n<tr>\n<td align=\"center\">$22$</td>\n<td align=\"center\"><a class=\"link\"   href=\"https://www.luogu.org/problemnew/show/P3356\" >火星探险问题 <i class=\"fa-regular fa-arrow-up-right-from-square fa-sm\"></i></a></td>\n<td align=\"center\">限制性带权路径</td>\n<td align=\"center\">费用流</td>\n</tr>\n</tbody></table>\n<p>第一眼看限制性带权路径的题，很容易让人感觉是搜索题。因为假如数据范围足够小，简单的搜索是能够保证正确性的。</p>\n<p>但是，学完了网络流，可解决的数据范围肯定就要比搜索肥了不少</p>\n<p>这类题的总体思路是拆点：</p>\n<ol>\n<li>将 $x$ 拆为 $x_1$ 和 $x_2$ 两个点，$x_1$ 为入点，$x_2$ 为出点。</li>\n<li>$x_1 \\rightarrow x_2$，流量表示这个点可以经过的次数，费用表示经过这个点的收益。</li>\n<li>$x_2 \\rightarrow y_1$，流量和费用表示从一个 $x$ 点转移到 $y$ 点，或者转移过程中点收益。</li>\n<li>$s \\rightarrow x_1$，表示路径的起始点，流量为路径条数，费用通常为 $0$。</li>\n<li>$x_2 \\rightarrow t$，表示路径的终点，流量通常为 $\\inf$，费用通常为 $0$。</li>\n</ol>\n<p>然后，建图，一发入魂╰(￣ω￣ｏ)</p>\n<h3 id=\"large-mathfrak-5th-线性规划网络优化\"><a href=\"#large-mathfrak-5th-线性规划网络优化\" class=\"headerlink\" title=\"$\\large\\mathfrak{5th.}$ 线性规划网络优化\"></a>$\\large\\mathfrak{5th.}$ 线性规划网络优化</h3><p>涉案题目：</p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">编号</th>\n<th align=\"center\">题目名字</th>\n<th align=\"center\">题目模型</th>\n<th align=\"center\">转化模型</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">$23$</td>\n<td align=\"center\"><a class=\"link\"   href=\"https://www.luogu.org/problemnew/show/P1251\" >餐巾计划问题 <i class=\"fa-regular fa-arrow-up-right-from-square fa-sm\"></i></a></td>\n<td align=\"center\">线性规划网络优化</td>\n<td align=\"center\">费用流</td>\n</tr>\n</tbody></table>\n<p>这类题就是用网络流来优化线性规划，由于线性规划本身就具有很强的灵活性，所以这类题也相应的具有很强的灵活性</p>\n<p>说是“类”，其实也只见过两道题而已啊~~（＞人＜；）</p>\n<p>餐巾计划这道题我认为是网络 $24$ 题（除去那道错题）中最难的一道题。建图很有创造性，通过建图，完美的表达了题目的限制条件的同时，又用上了费用流这个强大利器。</p>\n"},{"title":"【题解】 AT_arc073_d Many Moves","date":"2024-09-02T13:00:00.000Z","mathjax":true,"banner":"https://api.xsot.cn/bing?jump=true","_content":"\n## $\\large\\mathfrak{1st.\\ Preamble|}$ 前言\n\n[洛谷题目传送门](https://www.luogu.com.cn/problem/AT_arc073_d) or [AtCoder 原题传送门](https://atcoder.jp/contests/arc073/tasks/arc073_d)\n\n在某次膜你赛里见到了这道题，赛场上写了个假 DP，喜提零分，然后学长的题解写错了几个字，加上脑抽，瞪眼看了俩小时没看出来，明白后感觉我就是个智 X。\n\n如果其他题解看不懂的可以尝试看看这篇（也就可能只有我这个智 X 需要）。\n\n## $\\large\\mathfrak{2nd.\\ Solution|}$ 题解\n\n首先我们知道每次操作最多移动一个棋子（废话）。\n\n然后我们记 $f_{i,a,b}$ 表示操作 $i$ 次，两颗棋子分别在 $a,b$ 所消耗的最小时间。由于 $a,b$ 两者中至少有一个是 $x_i$（根据题目要求），故我们可以少记一维，用 $f_{i,a}$ 表示一个在 $x_i$，另一个在 $a$​ 的最小耗时。\n\n于是我们有转移：\n\n$$\nf_{i,j}=f_{i-1,j}+|x_i-x_{i-1}|\\\\\nf_{i,x_i}=\\min_{j=1}^{V}\\{f_{i-1,j}+|x_i-j|\\}\n$$\n\n第一个柿子表示原先在 $j$ 的棋子不动，原先在 $x_{i-1}$ 的棋子移动到 $x_i$，需要 $|x_i-x_{i-1}|$ 的代价。\n\n第二个柿子表示原先在 $x_i$ 的棋子不动，原先在 $j$ 的棋子移动到 $x_i$，需要 $|x_i-j|$ 的代价。\n\n然后我们可以发现，$f_i$ 这一层中的值只依赖于 $f_{i-1}$，然后我们就可以滚动数组优化，变成了一维（三维压成一维，是不是很有成就感）。\n\n由于第一种转移的代价是个定值，所以可以直接区间加。\n\n第二种转移我们可以先拆绝对值，\n\n\n\n## $\\large\\mathfrak{3rd.\\ Code|}$ 代码\n\n\n\n## $\\large\\mathfrak{4th.\\ Postscript|}$ 后记\n\n","source":"_posts/solution-at-arc073d.md","raw":"---\ntitle: 【题解】 AT_arc073_d Many Moves\ndate: 2024-09-02 21:00:00\ntags: \n    - 题解\n    - 线段树\n    - 动态规划\nmathjax: true\nbanner: https://api.xsot.cn/bing?jump=true\n---\n\n## $\\large\\mathfrak{1st.\\ Preamble|}$ 前言\n\n[洛谷题目传送门](https://www.luogu.com.cn/problem/AT_arc073_d) or [AtCoder 原题传送门](https://atcoder.jp/contests/arc073/tasks/arc073_d)\n\n在某次膜你赛里见到了这道题，赛场上写了个假 DP，喜提零分，然后学长的题解写错了几个字，加上脑抽，瞪眼看了俩小时没看出来，明白后感觉我就是个智 X。\n\n如果其他题解看不懂的可以尝试看看这篇（也就可能只有我这个智 X 需要）。\n\n## $\\large\\mathfrak{2nd.\\ Solution|}$ 题解\n\n首先我们知道每次操作最多移动一个棋子（废话）。\n\n然后我们记 $f_{i,a,b}$ 表示操作 $i$ 次，两颗棋子分别在 $a,b$ 所消耗的最小时间。由于 $a,b$ 两者中至少有一个是 $x_i$（根据题目要求），故我们可以少记一维，用 $f_{i,a}$ 表示一个在 $x_i$，另一个在 $a$​ 的最小耗时。\n\n于是我们有转移：\n\n$$\nf_{i,j}=f_{i-1,j}+|x_i-x_{i-1}|\\\\\nf_{i,x_i}=\\min_{j=1}^{V}\\{f_{i-1,j}+|x_i-j|\\}\n$$\n\n第一个柿子表示原先在 $j$ 的棋子不动，原先在 $x_{i-1}$ 的棋子移动到 $x_i$，需要 $|x_i-x_{i-1}|$ 的代价。\n\n第二个柿子表示原先在 $x_i$ 的棋子不动，原先在 $j$ 的棋子移动到 $x_i$，需要 $|x_i-j|$ 的代价。\n\n然后我们可以发现，$f_i$ 这一层中的值只依赖于 $f_{i-1}$，然后我们就可以滚动数组优化，变成了一维（三维压成一维，是不是很有成就感）。\n\n由于第一种转移的代价是个定值，所以可以直接区间加。\n\n第二种转移我们可以先拆绝对值，\n\n\n\n## $\\large\\mathfrak{3rd.\\ Code|}$ 代码\n\n\n\n## $\\large\\mathfrak{4th.\\ Postscript|}$ 后记\n\n","slug":"solution-at-arc073d","published":1,"updated":"2024-09-08T13:43:06.000Z","_id":"cm0qrhqy50002f4it5k7ocl05","comments":1,"layout":"post","photos":[],"content":"<h2 id=\"large-mathfrak-1st-Preamble-前言\"><a href=\"#large-mathfrak-1st-Preamble-前言\" class=\"headerlink\" title=\"$\\large\\mathfrak{1st.\\ Preamble|}$ 前言\"></a>$\\large\\mathfrak{1st.\\ Preamble|}$ 前言</h2><p><a class=\"link\"   href=\"https://www.luogu.com.cn/problem/AT_arc073_d\" >洛谷题目传送门 <i class=\"fa-regular fa-arrow-up-right-from-square fa-sm\"></i></a> or <a class=\"link\"   href=\"https://atcoder.jp/contests/arc073/tasks/arc073_d\" >AtCoder 原题传送门 <i class=\"fa-regular fa-arrow-up-right-from-square fa-sm\"></i></a></p>\n<p>在某次膜你赛里见到了这道题，赛场上写了个假 DP，喜提零分，然后学长的题解写错了几个字，加上脑抽，瞪眼看了俩小时没看出来，明白后感觉我就是个智 X。</p>\n<p>如果其他题解看不懂的可以尝试看看这篇（也就可能只有我这个智 X 需要）。</p>\n<h2 id=\"large-mathfrak-2nd-Solution-题解\"><a href=\"#large-mathfrak-2nd-Solution-题解\" class=\"headerlink\" title=\"$\\large\\mathfrak{2nd.\\ Solution|}$ 题解\"></a>$\\large\\mathfrak{2nd.\\ Solution|}$ 题解</h2><p>首先我们知道每次操作最多移动一个棋子（废话）。</p>\n<p>然后我们记 $f_{i,a,b}$ 表示操作 $i$ 次，两颗棋子分别在 $a,b$ 所消耗的最小时间。由于 $a,b$ 两者中至少有一个是 $x_i$（根据题目要求），故我们可以少记一维，用 $f_{i,a}$ 表示一个在 $x_i$，另一个在 $a$​ 的最小耗时。</p>\n<p>于是我们有转移：</p>\n<p>$$<br>f_{i,j}&#x3D;f_{i-1,j}+|x_i-x_{i-1}|\\<br>f_{i,x_i}&#x3D;\\min_{j&#x3D;1}^{V}{f_{i-1,j}+|x_i-j|}<br>$$</p>\n<p>第一个柿子表示原先在 $j$ 的棋子不动，原先在 $x_{i-1}$ 的棋子移动到 $x_i$，需要 $|x_i-x_{i-1}|$ 的代价。</p>\n<p>第二个柿子表示原先在 $x_i$ 的棋子不动，原先在 $j$ 的棋子移动到 $x_i$，需要 $|x_i-j|$ 的代价。</p>\n<p>然后我们可以发现，$f_i$ 这一层中的值只依赖于 $f_{i-1}$，然后我们就可以滚动数组优化，变成了一维（三维压成一维，是不是很有成就感）。</p>\n<p>由于第一种转移的代价是个定值，所以可以直接区间加。</p>\n<p>第二种转移我们可以先拆绝对值，</p>\n<h2 id=\"large-mathfrak-3rd-Code-代码\"><a href=\"#large-mathfrak-3rd-Code-代码\" class=\"headerlink\" title=\"$\\large\\mathfrak{3rd.\\ Code|}$ 代码\"></a>$\\large\\mathfrak{3rd.\\ Code|}$ 代码</h2><h2 id=\"large-mathfrak-4th-Postscript-后记\"><a href=\"#large-mathfrak-4th-Postscript-后记\" class=\"headerlink\" title=\"$\\large\\mathfrak{4th.\\ Postscript|}$ 后记\"></a>$\\large\\mathfrak{4th.\\ Postscript|}$ 后记</h2>","excerpt":"","more":"<h2 id=\"large-mathfrak-1st-Preamble-前言\"><a href=\"#large-mathfrak-1st-Preamble-前言\" class=\"headerlink\" title=\"$\\large\\mathfrak{1st.\\ Preamble|}$ 前言\"></a>$\\large\\mathfrak{1st.\\ Preamble|}$ 前言</h2><p><a class=\"link\"   href=\"https://www.luogu.com.cn/problem/AT_arc073_d\" >洛谷题目传送门 <i class=\"fa-regular fa-arrow-up-right-from-square fa-sm\"></i></a> or <a class=\"link\"   href=\"https://atcoder.jp/contests/arc073/tasks/arc073_d\" >AtCoder 原题传送门 <i class=\"fa-regular fa-arrow-up-right-from-square fa-sm\"></i></a></p>\n<p>在某次膜你赛里见到了这道题，赛场上写了个假 DP，喜提零分，然后学长的题解写错了几个字，加上脑抽，瞪眼看了俩小时没看出来，明白后感觉我就是个智 X。</p>\n<p>如果其他题解看不懂的可以尝试看看这篇（也就可能只有我这个智 X 需要）。</p>\n<h2 id=\"large-mathfrak-2nd-Solution-题解\"><a href=\"#large-mathfrak-2nd-Solution-题解\" class=\"headerlink\" title=\"$\\large\\mathfrak{2nd.\\ Solution|}$ 题解\"></a>$\\large\\mathfrak{2nd.\\ Solution|}$ 题解</h2><p>首先我们知道每次操作最多移动一个棋子（废话）。</p>\n<p>然后我们记 $f_{i,a,b}$ 表示操作 $i$ 次，两颗棋子分别在 $a,b$ 所消耗的最小时间。由于 $a,b$ 两者中至少有一个是 $x_i$（根据题目要求），故我们可以少记一维，用 $f_{i,a}$ 表示一个在 $x_i$，另一个在 $a$​ 的最小耗时。</p>\n<p>于是我们有转移：</p>\n<p>$$<br>f_{i,j}&#x3D;f_{i-1,j}+|x_i-x_{i-1}|\\<br>f_{i,x_i}&#x3D;\\min_{j&#x3D;1}^{V}{f_{i-1,j}+|x_i-j|}<br>$$</p>\n<p>第一个柿子表示原先在 $j$ 的棋子不动，原先在 $x_{i-1}$ 的棋子移动到 $x_i$，需要 $|x_i-x_{i-1}|$ 的代价。</p>\n<p>第二个柿子表示原先在 $x_i$ 的棋子不动，原先在 $j$ 的棋子移动到 $x_i$，需要 $|x_i-j|$ 的代价。</p>\n<p>然后我们可以发现，$f_i$ 这一层中的值只依赖于 $f_{i-1}$，然后我们就可以滚动数组优化，变成了一维（三维压成一维，是不是很有成就感）。</p>\n<p>由于第一种转移的代价是个定值，所以可以直接区间加。</p>\n<p>第二种转移我们可以先拆绝对值，</p>\n<h2 id=\"large-mathfrak-3rd-Code-代码\"><a href=\"#large-mathfrak-3rd-Code-代码\" class=\"headerlink\" title=\"$\\large\\mathfrak{3rd.\\ Code|}$ 代码\"></a>$\\large\\mathfrak{3rd.\\ Code|}$ 代码</h2><h2 id=\"large-mathfrak-4th-Postscript-后记\"><a href=\"#large-mathfrak-4th-Postscript-后记\" class=\"headerlink\" title=\"$\\large\\mathfrak{4th.\\ Postscript|}$ 后记\"></a>$\\large\\mathfrak{4th.\\ Postscript|}$ 后记</h2>"},{"title":"【知识】 状态压缩动态规划 & 【题解】 P10447 最短 Hamilton 路径","date":"2024-08-28T03:30:00.000Z","banner":"https://api.xsot.cn/bing?jump=true","mathjax":true,"excerpt":"本文浅显易懂地讲解了如何使用二进制压缩进行状态压缩动态规划，并使用了状态压缩动态规划的方法解决洛谷例题 P10447 最短 Hamilton 路径。","_content":"\n## $\\mathfrak{1st.}$ 前言\n\n[-->题目传送门<--](https://www.luogu.com.cn/problem/P10447)\n\n在洛谷题解提交晚了一步，没通过。\n\n## $\\mathfrak{2nd.}$ 思路\n\n**题意简述**：题面已经够简了。\n\n**算法**：状态压缩动态规划模板。\n\n### 啥是状态压缩？我不会！\n\n慢慢听我讲嘛。\n\n**状态压缩**：将复杂状态压缩为整数来达到优化转移的目的。\n\n对于这道题，每个点只有走过和没走过两种情况，所以我们用**二进制数**就能解决。\n\n对于一个二进制数，如果从左往右第 $i$ 位是 $1$，就说明 $i$ 点走过了，是 $0$ 就说明还没走过。\n\n比如对于二进制数 $00110101$，我们先列个表：\n\n| **二进制数** | $0$  | $0$  | $1$  | $1$  | $0$  | $1$  | $0$  | $1$  |\n| :----------: | :--: | :--: | :--: | :--: | :--: | :--: | :--: | :--: |\n| **对应位数** | $8$  | $7$  | $6$  | $5$  | $4$  | $3$  | $2$  | $1$  |\n\n例如：\n\n+ 从右往左第 $5$ 位上是 $1$，就说明 $5$ 号点走过了。\n\n+ 从右往左第 $2$ 位上是 $0$，就说明 $2$ 号点还没走过。\n\n+ 以此类推……\n\n### 那如何进行二进制数的操作呢？\n\n首先你得知道[位运算](https://cn.bing.com/search?q=%E4%BD%8D%E8%BF%90%E7%AE%97)。\n\n1. 判断集合 $S$ 中是否含有 $i$ 点：\n   ```cpp\n   if((S>>i)&1)\n   ```\n\n2. 求集合 $S$ 去除 $i$ 点后的集合：\n   ```cpp\n   S^(1<<j)\n   ```\n3. 枚举集合 $S$ 中的所有点：\n   ```cpp\n\tfor(int i=0;i<=n;i++)\n      if((S>>k)&1)\n        ……\n\t```\n\n原理不难理解，请读者自行推导。\n\n### 状态转移\n\n这个和最短路的思路有点像。对于 $S$ 状态下起点到 $i$ 的“最短路径”，我们可以这样求：\n\n枚举状态 $S-i$（就是 $S$ 状态中不走 $i$ 时的情况）中的点 $k$ 为中转点，然后把起点到 $k$ 的“最短路径”加上 $k$ 到 $i$ 的距离，取个最小值就是答案了。\n\n**状态转移方程**：$f_{S,i}=\\min\\{f_{S-i,k}+dis(k,i)\\},k\\in S-i$。\n\n那么我们最终的答案就是 $f_{2^n-1,n-1}$。\n\n## $\\mathfrak{3rd.}$ 代码实现\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nint n,f[1<<20][21];\nint dis[21][21];\nint main(){\n    memset(f,0x3f,sizeof(f));\t//初始化最大值。\n    cin>>n;\n    for(int i=0;i<n;i++)\t//输入图。\n      for(int j=0;j<n;j++)\n        cin>>dis[i][j];\t        //输入各点间的距离。\n    f[1][0]=0;\t\t\t//初始值：集合中只有点 0，起点和终点都是 0。\n    for(int S=1;S<(1<<n);S++)\t//从小集合扩展到大集合，集合压缩为二进制数 S。\n        for(int i=0;i<n;i++)\t//枚举点 j。\n            if((S>>i)&1)\t//判断点 i 是否在 S 中。\n                for(int k=0;k<n;k++)\n                    if(((S^(1<<i))>>k)&1)\t//判断 k 是否属于集合 S-i。\n                        f[S][i]=min(f[S][i],f[S^(1<<i)][k]+dis[k][i]);\n    cout<<f[(1<<n)-1][n-1];\t//输出：路径包含了所有点，终点是 n-1。\n    return 0;\n}\n```\n\n# $\\mathfrak{4th.}$ 其他\n\n状态压缩不仅可以压缩成二进制，如果题目中一个元素（点）可以有 $3$ 种甚至更多种的状态，我们就可以压缩成三进制或更高进制。","source":"_posts/solution-luogu-p10447.md","raw":"---\ntitle: 【知识】 状态压缩动态规划 & 【题解】 P10447 最短 Hamilton 路径\ndate: 2024-8-28 11:30:00\ntags: \n    - 知识\n    - 题解\nbanner: https://api.xsot.cn/bing?jump=true\nmathjax: true\nexcerpt: \"本文浅显易懂地讲解了如何使用二进制压缩进行状态压缩动态规划，并使用了状态压缩动态规划的方法解决洛谷例题 P10447 最短 Hamilton 路径。\"\n---\n\n## $\\mathfrak{1st.}$ 前言\n\n[-->题目传送门<--](https://www.luogu.com.cn/problem/P10447)\n\n在洛谷题解提交晚了一步，没通过。\n\n## $\\mathfrak{2nd.}$ 思路\n\n**题意简述**：题面已经够简了。\n\n**算法**：状态压缩动态规划模板。\n\n### 啥是状态压缩？我不会！\n\n慢慢听我讲嘛。\n\n**状态压缩**：将复杂状态压缩为整数来达到优化转移的目的。\n\n对于这道题，每个点只有走过和没走过两种情况，所以我们用**二进制数**就能解决。\n\n对于一个二进制数，如果从左往右第 $i$ 位是 $1$，就说明 $i$ 点走过了，是 $0$ 就说明还没走过。\n\n比如对于二进制数 $00110101$，我们先列个表：\n\n| **二进制数** | $0$  | $0$  | $1$  | $1$  | $0$  | $1$  | $0$  | $1$  |\n| :----------: | :--: | :--: | :--: | :--: | :--: | :--: | :--: | :--: |\n| **对应位数** | $8$  | $7$  | $6$  | $5$  | $4$  | $3$  | $2$  | $1$  |\n\n例如：\n\n+ 从右往左第 $5$ 位上是 $1$，就说明 $5$ 号点走过了。\n\n+ 从右往左第 $2$ 位上是 $0$，就说明 $2$ 号点还没走过。\n\n+ 以此类推……\n\n### 那如何进行二进制数的操作呢？\n\n首先你得知道[位运算](https://cn.bing.com/search?q=%E4%BD%8D%E8%BF%90%E7%AE%97)。\n\n1. 判断集合 $S$ 中是否含有 $i$ 点：\n   ```cpp\n   if((S>>i)&1)\n   ```\n\n2. 求集合 $S$ 去除 $i$ 点后的集合：\n   ```cpp\n   S^(1<<j)\n   ```\n3. 枚举集合 $S$ 中的所有点：\n   ```cpp\n\tfor(int i=0;i<=n;i++)\n      if((S>>k)&1)\n        ……\n\t```\n\n原理不难理解，请读者自行推导。\n\n### 状态转移\n\n这个和最短路的思路有点像。对于 $S$ 状态下起点到 $i$ 的“最短路径”，我们可以这样求：\n\n枚举状态 $S-i$（就是 $S$ 状态中不走 $i$ 时的情况）中的点 $k$ 为中转点，然后把起点到 $k$ 的“最短路径”加上 $k$ 到 $i$ 的距离，取个最小值就是答案了。\n\n**状态转移方程**：$f_{S,i}=\\min\\{f_{S-i,k}+dis(k,i)\\},k\\in S-i$。\n\n那么我们最终的答案就是 $f_{2^n-1,n-1}$。\n\n## $\\mathfrak{3rd.}$ 代码实现\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nint n,f[1<<20][21];\nint dis[21][21];\nint main(){\n    memset(f,0x3f,sizeof(f));\t//初始化最大值。\n    cin>>n;\n    for(int i=0;i<n;i++)\t//输入图。\n      for(int j=0;j<n;j++)\n        cin>>dis[i][j];\t        //输入各点间的距离。\n    f[1][0]=0;\t\t\t//初始值：集合中只有点 0，起点和终点都是 0。\n    for(int S=1;S<(1<<n);S++)\t//从小集合扩展到大集合，集合压缩为二进制数 S。\n        for(int i=0;i<n;i++)\t//枚举点 j。\n            if((S>>i)&1)\t//判断点 i 是否在 S 中。\n                for(int k=0;k<n;k++)\n                    if(((S^(1<<i))>>k)&1)\t//判断 k 是否属于集合 S-i。\n                        f[S][i]=min(f[S][i],f[S^(1<<i)][k]+dis[k][i]);\n    cout<<f[(1<<n)-1][n-1];\t//输出：路径包含了所有点，终点是 n-1。\n    return 0;\n}\n```\n\n# $\\mathfrak{4th.}$ 其他\n\n状态压缩不仅可以压缩成二进制，如果题目中一个元素（点）可以有 $3$ 种甚至更多种的状态，我们就可以压缩成三进制或更高进制。","slug":"solution-luogu-p10447","published":1,"updated":"2024-09-08T13:43:06.000Z","_id":"cm0qrhqye0004f4it2iyjgjy9","comments":1,"layout":"post","photos":[],"content":"<h2 id=\"mathfrak-1st-前言\"><a href=\"#mathfrak-1st-前言\" class=\"headerlink\" title=\"$\\mathfrak{1st.}$ 前言\"></a>$\\mathfrak{1st.}$ 前言</h2><p><a class=\"link\"   href=\"https://www.luogu.com.cn/problem/P10447\" >–&gt;题目传送门&lt;– <i class=\"fa-regular fa-arrow-up-right-from-square fa-sm\"></i></a></p>\n<p>在洛谷题解提交晚了一步，没通过。</p>\n<h2 id=\"mathfrak-2nd-思路\"><a href=\"#mathfrak-2nd-思路\" class=\"headerlink\" title=\"$\\mathfrak{2nd.}$ 思路\"></a>$\\mathfrak{2nd.}$ 思路</h2><p><strong>题意简述</strong>：题面已经够简了。</p>\n<p><strong>算法</strong>：状态压缩动态规划模板。</p>\n<h3 id=\"啥是状态压缩？我不会！\"><a href=\"#啥是状态压缩？我不会！\" class=\"headerlink\" title=\"啥是状态压缩？我不会！\"></a>啥是状态压缩？我不会！</h3><p>慢慢听我讲嘛。</p>\n<p><strong>状态压缩</strong>：将复杂状态压缩为整数来达到优化转移的目的。</p>\n<p>对于这道题，每个点只有走过和没走过两种情况，所以我们用<strong>二进制数</strong>就能解决。</p>\n<p>对于一个二进制数，如果从左往右第 $i$ 位是 $1$，就说明 $i$ 点走过了，是 $0$ 就说明还没走过。</p>\n<p>比如对于二进制数 $00110101$，我们先列个表：</p>\n<table>\n<thead>\n<tr>\n<th align=\"center\"><strong>二进制数</strong></th>\n<th align=\"center\">$0$</th>\n<th align=\"center\">$0$</th>\n<th align=\"center\">$1$</th>\n<th align=\"center\">$1$</th>\n<th align=\"center\">$0$</th>\n<th align=\"center\">$1$</th>\n<th align=\"center\">$0$</th>\n<th align=\"center\">$1$</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\"><strong>对应位数</strong></td>\n<td align=\"center\">$8$</td>\n<td align=\"center\">$7$</td>\n<td align=\"center\">$6$</td>\n<td align=\"center\">$5$</td>\n<td align=\"center\">$4$</td>\n<td align=\"center\">$3$</td>\n<td align=\"center\">$2$</td>\n<td align=\"center\">$1$</td>\n</tr>\n</tbody></table>\n<p>例如：</p>\n<ul>\n<li><p>从右往左第 $5$ 位上是 $1$，就说明 $5$ 号点走过了。</p>\n</li>\n<li><p>从右往左第 $2$ 位上是 $0$，就说明 $2$ 号点还没走过。</p>\n</li>\n<li><p>以此类推……</p>\n</li>\n</ul>\n<h3 id=\"那如何进行二进制数的操作呢？\"><a href=\"#那如何进行二进制数的操作呢？\" class=\"headerlink\" title=\"那如何进行二进制数的操作呢？\"></a>那如何进行二进制数的操作呢？</h3><p>首先你得知道<a class=\"link\"   href=\"https://cn.bing.com/search?q=%E4%BD%8D%E8%BF%90%E7%AE%97\" >位运算 <i class=\"fa-regular fa-arrow-up-right-from-square fa-sm\"></i></a>。</p>\n<ol>\n<li><p>判断集合 $S$ 中是否含有 $i$ 点：</p>\n<div class=\"highlight-container\" data-rel=\"Cpp\"><figure class=\"iseeu highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span>((S&gt;&gt;i)&amp;<span class=\"number\">1</span>)</span><br></pre></td></tr></table></figure></div>\n</li>\n<li><p>求集合 $S$ 去除 $i$ 点后的集合：</p>\n<div class=\"highlight-container\" data-rel=\"Cpp\"><figure class=\"iseeu highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">S^(<span class=\"number\">1</span>&lt;&lt;j)</span><br></pre></td></tr></table></figure></div></li>\n<li><p>枚举集合 $S$ 中的所有点：</p>\n<div class=\"highlight-container\" data-rel=\"Cpp\"><figure class=\"iseeu highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span>(<span class=\"type\">int</span> i=<span class=\"number\">0</span>;i&lt;=n;i++)</span><br><span class=\"line\">     <span class=\"keyword\">if</span>((S&gt;&gt;k)&amp;<span class=\"number\">1</span>)</span><br><span class=\"line\">       ……</span><br></pre></td></tr></table></figure></div></li>\n</ol>\n<p>原理不难理解，请读者自行推导。</p>\n<h3 id=\"状态转移\"><a href=\"#状态转移\" class=\"headerlink\" title=\"状态转移\"></a>状态转移</h3><p>这个和最短路的思路有点像。对于 $S$ 状态下起点到 $i$ 的“最短路径”，我们可以这样求：</p>\n<p>枚举状态 $S-i$（就是 $S$ 状态中不走 $i$ 时的情况）中的点 $k$ 为中转点，然后把起点到 $k$ 的“最短路径”加上 $k$ 到 $i$ 的距离，取个最小值就是答案了。</p>\n<p><strong>状态转移方程</strong>：$f_{S,i}&#x3D;\\min{f_{S-i,k}+dis(k,i)},k\\in S-i$。</p>\n<p>那么我们最终的答案就是 $f_{2^n-1,n-1}$。</p>\n<h2 id=\"mathfrak-3rd-代码实现\"><a href=\"#mathfrak-3rd-代码实现\" class=\"headerlink\" title=\"$\\mathfrak{3rd.}$ 代码实现\"></a>$\\mathfrak{3rd.}$ 代码实现</h2><div class=\"highlight-container\" data-rel=\"Cpp\"><figure class=\"iseeu highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"><span class=\"type\">int</span> n,f[<span class=\"number\">1</span>&lt;&lt;<span class=\"number\">20</span>][<span class=\"number\">21</span>];</span><br><span class=\"line\"><span class=\"type\">int</span> dis[<span class=\"number\">21</span>][<span class=\"number\">21</span>];</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">memset</span>(f,<span class=\"number\">0x3f</span>,<span class=\"built_in\">sizeof</span>(f));\t<span class=\"comment\">//初始化最大值。</span></span><br><span class=\"line\">    cin&gt;&gt;n;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"type\">int</span> i=<span class=\"number\">0</span>;i&lt;n;i++)\t<span class=\"comment\">//输入图。</span></span><br><span class=\"line\">      <span class=\"keyword\">for</span>(<span class=\"type\">int</span> j=<span class=\"number\">0</span>;j&lt;n;j++)</span><br><span class=\"line\">        cin&gt;&gt;dis[i][j];\t        <span class=\"comment\">//输入各点间的距离。</span></span><br><span class=\"line\">    f[<span class=\"number\">1</span>][<span class=\"number\">0</span>]=<span class=\"number\">0</span>;\t\t\t<span class=\"comment\">//初始值：集合中只有点 0，起点和终点都是 0。</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"type\">int</span> S=<span class=\"number\">1</span>;S&lt;(<span class=\"number\">1</span>&lt;&lt;n);S++)\t<span class=\"comment\">//从小集合扩展到大集合，集合压缩为二进制数 S。</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"type\">int</span> i=<span class=\"number\">0</span>;i&lt;n;i++)\t<span class=\"comment\">//枚举点 j。</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span>((S&gt;&gt;i)&amp;<span class=\"number\">1</span>)\t<span class=\"comment\">//判断点 i 是否在 S 中。</span></span><br><span class=\"line\">                <span class=\"keyword\">for</span>(<span class=\"type\">int</span> k=<span class=\"number\">0</span>;k&lt;n;k++)</span><br><span class=\"line\">                    <span class=\"keyword\">if</span>(((S^(<span class=\"number\">1</span>&lt;&lt;i))&gt;&gt;k)&amp;<span class=\"number\">1</span>)\t<span class=\"comment\">//判断 k 是否属于集合 S-i。</span></span><br><span class=\"line\">                        f[S][i]=<span class=\"built_in\">min</span>(f[S][i],f[S^(<span class=\"number\">1</span>&lt;&lt;i)][k]+dis[k][i]);</span><br><span class=\"line\">    cout&lt;&lt;f[(<span class=\"number\">1</span>&lt;&lt;n)<span class=\"number\">-1</span>][n<span class=\"number\">-1</span>];\t<span class=\"comment\">//输出：路径包含了所有点，终点是 n-1。</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></div>\n\n<h1 id=\"mathfrak-4th-其他\"><a href=\"#mathfrak-4th-其他\" class=\"headerlink\" title=\"$\\mathfrak{4th.}$ 其他\"></a>$\\mathfrak{4th.}$ 其他</h1><p>状态压缩不仅可以压缩成二进制，如果题目中一个元素（点）可以有 $3$ 种甚至更多种的状态，我们就可以压缩成三进制或更高进制。</p>\n","more":"<h2 id=\"mathfrak-1st-前言\"><a href=\"#mathfrak-1st-前言\" class=\"headerlink\" title=\"$\\mathfrak{1st.}$ 前言\"></a>$\\mathfrak{1st.}$ 前言</h2><p><a class=\"link\"   href=\"https://www.luogu.com.cn/problem/P10447\" >–&gt;题目传送门&lt;– <i class=\"fa-regular fa-arrow-up-right-from-square fa-sm\"></i></a></p>\n<p>在洛谷题解提交晚了一步，没通过。</p>\n<h2 id=\"mathfrak-2nd-思路\"><a href=\"#mathfrak-2nd-思路\" class=\"headerlink\" title=\"$\\mathfrak{2nd.}$ 思路\"></a>$\\mathfrak{2nd.}$ 思路</h2><p><strong>题意简述</strong>：题面已经够简了。</p>\n<p><strong>算法</strong>：状态压缩动态规划模板。</p>\n<h3 id=\"啥是状态压缩？我不会！\"><a href=\"#啥是状态压缩？我不会！\" class=\"headerlink\" title=\"啥是状态压缩？我不会！\"></a>啥是状态压缩？我不会！</h3><p>慢慢听我讲嘛。</p>\n<p><strong>状态压缩</strong>：将复杂状态压缩为整数来达到优化转移的目的。</p>\n<p>对于这道题，每个点只有走过和没走过两种情况，所以我们用<strong>二进制数</strong>就能解决。</p>\n<p>对于一个二进制数，如果从左往右第 $i$ 位是 $1$，就说明 $i$ 点走过了，是 $0$ 就说明还没走过。</p>\n<p>比如对于二进制数 $00110101$，我们先列个表：</p>\n<table>\n<thead>\n<tr>\n<th align=\"center\"><strong>二进制数</strong></th>\n<th align=\"center\">$0$</th>\n<th align=\"center\">$0$</th>\n<th align=\"center\">$1$</th>\n<th align=\"center\">$1$</th>\n<th align=\"center\">$0$</th>\n<th align=\"center\">$1$</th>\n<th align=\"center\">$0$</th>\n<th align=\"center\">$1$</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\"><strong>对应位数</strong></td>\n<td align=\"center\">$8$</td>\n<td align=\"center\">$7$</td>\n<td align=\"center\">$6$</td>\n<td align=\"center\">$5$</td>\n<td align=\"center\">$4$</td>\n<td align=\"center\">$3$</td>\n<td align=\"center\">$2$</td>\n<td align=\"center\">$1$</td>\n</tr>\n</tbody></table>\n<p>例如：</p>\n<ul>\n<li><p>从右往左第 $5$ 位上是 $1$，就说明 $5$ 号点走过了。</p>\n</li>\n<li><p>从右往左第 $2$ 位上是 $0$，就说明 $2$ 号点还没走过。</p>\n</li>\n<li><p>以此类推……</p>\n</li>\n</ul>\n<h3 id=\"那如何进行二进制数的操作呢？\"><a href=\"#那如何进行二进制数的操作呢？\" class=\"headerlink\" title=\"那如何进行二进制数的操作呢？\"></a>那如何进行二进制数的操作呢？</h3><p>首先你得知道<a class=\"link\"   href=\"https://cn.bing.com/search?q=%E4%BD%8D%E8%BF%90%E7%AE%97\" >位运算 <i class=\"fa-regular fa-arrow-up-right-from-square fa-sm\"></i></a>。</p>\n<ol>\n<li><p>判断集合 $S$ 中是否含有 $i$ 点：</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span>((S&gt;&gt;i)&amp;<span class=\"number\">1</span>)</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>求集合 $S$ 去除 $i$ 点后的集合：</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">S^(<span class=\"number\">1</span>&lt;&lt;j)</span><br></pre></td></tr></table></figure></li>\n<li><p>枚举集合 $S$ 中的所有点：</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span>(<span class=\"type\">int</span> i=<span class=\"number\">0</span>;i&lt;=n;i++)</span><br><span class=\"line\">     <span class=\"keyword\">if</span>((S&gt;&gt;k)&amp;<span class=\"number\">1</span>)</span><br><span class=\"line\">       ……</span><br></pre></td></tr></table></figure></li>\n</ol>\n<p>原理不难理解，请读者自行推导。</p>\n<h3 id=\"状态转移\"><a href=\"#状态转移\" class=\"headerlink\" title=\"状态转移\"></a>状态转移</h3><p>这个和最短路的思路有点像。对于 $S$ 状态下起点到 $i$ 的“最短路径”，我们可以这样求：</p>\n<p>枚举状态 $S-i$（就是 $S$ 状态中不走 $i$ 时的情况）中的点 $k$ 为中转点，然后把起点到 $k$ 的“最短路径”加上 $k$ 到 $i$ 的距离，取个最小值就是答案了。</p>\n<p><strong>状态转移方程</strong>：$f_{S,i}&#x3D;\\min{f_{S-i,k}+dis(k,i)},k\\in S-i$。</p>\n<p>那么我们最终的答案就是 $f_{2^n-1,n-1}$。</p>\n<h2 id=\"mathfrak-3rd-代码实现\"><a href=\"#mathfrak-3rd-代码实现\" class=\"headerlink\" title=\"$\\mathfrak{3rd.}$ 代码实现\"></a>$\\mathfrak{3rd.}$ 代码实现</h2><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"><span class=\"type\">int</span> n,f[<span class=\"number\">1</span>&lt;&lt;<span class=\"number\">20</span>][<span class=\"number\">21</span>];</span><br><span class=\"line\"><span class=\"type\">int</span> dis[<span class=\"number\">21</span>][<span class=\"number\">21</span>];</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">memset</span>(f,<span class=\"number\">0x3f</span>,<span class=\"built_in\">sizeof</span>(f));\t<span class=\"comment\">//初始化最大值。</span></span><br><span class=\"line\">    cin&gt;&gt;n;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"type\">int</span> i=<span class=\"number\">0</span>;i&lt;n;i++)\t<span class=\"comment\">//输入图。</span></span><br><span class=\"line\">      <span class=\"keyword\">for</span>(<span class=\"type\">int</span> j=<span class=\"number\">0</span>;j&lt;n;j++)</span><br><span class=\"line\">        cin&gt;&gt;dis[i][j];\t        <span class=\"comment\">//输入各点间的距离。</span></span><br><span class=\"line\">    f[<span class=\"number\">1</span>][<span class=\"number\">0</span>]=<span class=\"number\">0</span>;\t\t\t<span class=\"comment\">//初始值：集合中只有点 0，起点和终点都是 0。</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"type\">int</span> S=<span class=\"number\">1</span>;S&lt;(<span class=\"number\">1</span>&lt;&lt;n);S++)\t<span class=\"comment\">//从小集合扩展到大集合，集合压缩为二进制数 S。</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"type\">int</span> i=<span class=\"number\">0</span>;i&lt;n;i++)\t<span class=\"comment\">//枚举点 j。</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span>((S&gt;&gt;i)&amp;<span class=\"number\">1</span>)\t<span class=\"comment\">//判断点 i 是否在 S 中。</span></span><br><span class=\"line\">                <span class=\"keyword\">for</span>(<span class=\"type\">int</span> k=<span class=\"number\">0</span>;k&lt;n;k++)</span><br><span class=\"line\">                    <span class=\"keyword\">if</span>(((S^(<span class=\"number\">1</span>&lt;&lt;i))&gt;&gt;k)&amp;<span class=\"number\">1</span>)\t<span class=\"comment\">//判断 k 是否属于集合 S-i。</span></span><br><span class=\"line\">                        f[S][i]=<span class=\"built_in\">min</span>(f[S][i],f[S^(<span class=\"number\">1</span>&lt;&lt;i)][k]+dis[k][i]);</span><br><span class=\"line\">    cout&lt;&lt;f[(<span class=\"number\">1</span>&lt;&lt;n)<span class=\"number\">-1</span>][n<span class=\"number\">-1</span>];\t<span class=\"comment\">//输出：路径包含了所有点，终点是 n-1。</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"mathfrak-4th-其他\"><a href=\"#mathfrak-4th-其他\" class=\"headerlink\" title=\"$\\mathfrak{4th.}$ 其他\"></a>$\\mathfrak{4th.}$ 其他</h1><p>状态压缩不仅可以压缩成二进制，如果题目中一个元素（点）可以有 $3$ 种甚至更多种的状态，我们就可以压缩成三进制或更高进制。</p>\n"},{"title":"【题解】 P3210 取石头游戏","date":"2024-08-27T04:00:00.000Z","mathjax":true,"banner":"/img/solution-luogu-p3210-1.png","_content":"\n## $\\large\\mathfrak{1st.\\ Preamble|}$ 前言\n\n题目传送门：[P3210 [HNOI2010] 取石头游戏](https://www.luogu.com.cn/problem/P3210)\n\n主要是参考楼下大佬的题解，对于其中没讲到或比较难懂的地方进行讲解，以及配上了图。\n\n## $\\large\\mathfrak{2nd.\\ Solution|}$ 题解\n\n楼下大佬的比喻十分形象生动地描绘了俩人去石头的过程：\n\n{% note blue %}\n取石子的过程可以转化为两端分别有一个栈，可以从栈顶取石子，中间有若干个双端队列，可以从其两端取石子。\n{% endnote %}\n\n我们可以根据俩人取石子的过程推算出**先手积分减去后手积分的差值** $dif$，然后根据总和就能求出最终俩人的积分。先手肯定希望 $dif$ 尽可能大，后手肯定希望 $dif$ 尽可能小。\n\nQ：为什么是算差值而不是直接算积分？\n\nA：因为差值好算呗！等会你就知道了。\n\n为了方便计算，我们肯定希望每次的全局最大权值的位置都是可以直接取的。接下来我们分两个部分讨论这俩人取石子的过程。\n\n注：接下来的递减、递增均指非严格递减和递增。\n\n#### 中间部分（双端队列）\n\n对于每个中间区块（双端队列）中，权值递增、递减和下凹的情况都很好解决，如下图箭头所示，从其中一端或两端开始取就行。\n\n![](/img/solution-luogu-p3210-1.png)\n\n然后我们来看看上凸该如何解决。![](/img/solution-luogu-p3210-2.png)\n\n我们先来考虑最简单的三个位置的上凸情况：若存在 $a_{i-1}\\le a_i$ 并且 $a_i\\ge a_{i+1}$，若当前最优选择为 $a_{i-1}$，则先手会选择 $a_{i-1}$，接着后手会选择 $a_i$，然后先手会选择 $a_{i+1}$，最终 $dif$ 会增加（或减少）$a_{i-1}-a_i+a_{i+1}$，于是我们就可以把 $a_{i-1}, a_i, a_{i+1}$ 三个位置打包成一个权值为 $a_{i-1}-a_i+a_{i+1}$​​ 的位置。反之同理。这也是为什么我们是算差值而不是直接算积分。\n\n当我们把每个上凸都打包完，剩下就只剩下上面的三种情况，当前最大都是可以直接取到的。\n\n#### 两端（栈）\n\n对于左边部分，我们希望是单调递增的（因为只能从中间往外取）；反之，对于右边部分，我们希望是单调递减的。\n\n左边部分中，若存在递减的部分，那我们可以像刚才一样，将其打包起来，即：若存在 $a_i>=a_{i+1}$，且 $a_{i+1}$ 为目前全局最优，因为先手只能从右侧开始选，所以先手比选 $a_{i+1}$，后手必选 $a_i$，于是我们可以把 $a_i$ 和 $a_{i+1}$ 打包成一个权值为 $a_{i+1}-a_i$  的位置。\n\n右边部分同理。\n\n#### 实现方法\n\n全部打包完后，接下来每次的全局最大值必定可以直接取到，所以我们可以直接将所有位置按权值从大到小排序，然后从大到小取即可。\n\n## $\\large\\mathfrak{3rd.\\ Code|}$ 代码\n\n代码中过于简单的细节就不标注了。敢做黑题的相信一定能看懂。\n\n```cpp\n#include <bits/stdc++.h>\n#define ll long long\n#define FOR(i,l,r) for(int i=l;i<=r;i++)\n#define FILE(x) freopen(x\".in\",\"r\",stdin),freopen(x\".out\",\"w\",stdout);\n#define pii pair<int,int>\n#define pll pair<long long,long long>\n// #define Clock\nusing namespace std;\nconst ll N=2e6+10;\nll n,a[N],sum,l[N],r[N],L,R,p[N],cnt,s,ans;\nbool book[N];\ninline bool cmp(ll a,ll b){return a>b;}\nint main(){\n    #ifdef Clock\n        clock_t Start_Time=clock();\n    #endif\n    // ios::sync_with_stdio(false);\n    // cin.tie(0),cout.tie(0);\n    // FILE(\"xxx\");\n    cin>>n; r[0]=1,l[n+1]=n;\n    for(ll i=1;i<=n;i++){\n        cin>>a[i];\n        sum+=a[i],book[i]=a[i];\n        l[i]=i-1,r[i]=i+1;\n    }\n    for(ll i=3;i<=n;i=r[i]){\n        ll x=l[l[i]],y=l[i],z=i;\n        while(book[x]&&book[y]&&book[z]&&a[y]>a[x]&&a[y]>a[z]){\n            a[i]=a[x]+a[z]-a[y],r[l[x]]=i,l[i]=l[x];\n            x=l[l[i]],y=l[i],z=i;\n        }\n    }\n    L=r[0],R=l[n+1];\n    while(a[L]>=a[r[L]]&&book[L]&&book[r[L]])s-=a[L]-a[r[L]],L=r[r[L]];\n    while(a[R]>=a[l[R]]&&book[R]&&book[l[R]])s-=a[R]-a[l[R]],R=l[l[R]];\n    for(ll i=L;i<=R;i=r[i])if(book[i])p[++cnt]=a[i];\n    sort(p+1,p+cnt+1,cmp);\n    p[++cnt]=s;\n    for(ll i=1;i<=cnt;i++)ans+=(i%2?p[i]:-p[i]);\n    cout<<(sum+ans)/2<<' '<<(sum-ans)/2;\n    #ifdef Clock\n        cout<<\"\\n- - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\\nRuntime: \"<<clock()-Start_Time<<\" ms\\n\";\n        system(\"pause\");\n    #endif\n    return 0;\n}\n```\n\n## $\\large\\mathfrak{4th.\\ Postscript|}$ 后记\n\n第一天写的时候没过，那时还是紫题，并且不能写题解。第二天过完后发现变成了黑题，而且还可以写题解！于是遍欣喜若狂地写下了这篇题解。","source":"_posts/solution-luogu-p3210.md","raw":"---\ntitle: 【题解】 P3210 取石头游戏\ndate: 2024-08-27 12:00:00\ntags: \n    - 题解\n    - 博弈论\nmathjax: true\nbanner: /img/solution-luogu-p3210-1.png\n---\n\n## $\\large\\mathfrak{1st.\\ Preamble|}$ 前言\n\n题目传送门：[P3210 [HNOI2010] 取石头游戏](https://www.luogu.com.cn/problem/P3210)\n\n主要是参考楼下大佬的题解，对于其中没讲到或比较难懂的地方进行讲解，以及配上了图。\n\n## $\\large\\mathfrak{2nd.\\ Solution|}$ 题解\n\n楼下大佬的比喻十分形象生动地描绘了俩人去石头的过程：\n\n{% note blue %}\n取石子的过程可以转化为两端分别有一个栈，可以从栈顶取石子，中间有若干个双端队列，可以从其两端取石子。\n{% endnote %}\n\n我们可以根据俩人取石子的过程推算出**先手积分减去后手积分的差值** $dif$，然后根据总和就能求出最终俩人的积分。先手肯定希望 $dif$ 尽可能大，后手肯定希望 $dif$ 尽可能小。\n\nQ：为什么是算差值而不是直接算积分？\n\nA：因为差值好算呗！等会你就知道了。\n\n为了方便计算，我们肯定希望每次的全局最大权值的位置都是可以直接取的。接下来我们分两个部分讨论这俩人取石子的过程。\n\n注：接下来的递减、递增均指非严格递减和递增。\n\n#### 中间部分（双端队列）\n\n对于每个中间区块（双端队列）中，权值递增、递减和下凹的情况都很好解决，如下图箭头所示，从其中一端或两端开始取就行。\n\n![](/img/solution-luogu-p3210-1.png)\n\n然后我们来看看上凸该如何解决。![](/img/solution-luogu-p3210-2.png)\n\n我们先来考虑最简单的三个位置的上凸情况：若存在 $a_{i-1}\\le a_i$ 并且 $a_i\\ge a_{i+1}$，若当前最优选择为 $a_{i-1}$，则先手会选择 $a_{i-1}$，接着后手会选择 $a_i$，然后先手会选择 $a_{i+1}$，最终 $dif$ 会增加（或减少）$a_{i-1}-a_i+a_{i+1}$，于是我们就可以把 $a_{i-1}, a_i, a_{i+1}$ 三个位置打包成一个权值为 $a_{i-1}-a_i+a_{i+1}$​​ 的位置。反之同理。这也是为什么我们是算差值而不是直接算积分。\n\n当我们把每个上凸都打包完，剩下就只剩下上面的三种情况，当前最大都是可以直接取到的。\n\n#### 两端（栈）\n\n对于左边部分，我们希望是单调递增的（因为只能从中间往外取）；反之，对于右边部分，我们希望是单调递减的。\n\n左边部分中，若存在递减的部分，那我们可以像刚才一样，将其打包起来，即：若存在 $a_i>=a_{i+1}$，且 $a_{i+1}$ 为目前全局最优，因为先手只能从右侧开始选，所以先手比选 $a_{i+1}$，后手必选 $a_i$，于是我们可以把 $a_i$ 和 $a_{i+1}$ 打包成一个权值为 $a_{i+1}-a_i$  的位置。\n\n右边部分同理。\n\n#### 实现方法\n\n全部打包完后，接下来每次的全局最大值必定可以直接取到，所以我们可以直接将所有位置按权值从大到小排序，然后从大到小取即可。\n\n## $\\large\\mathfrak{3rd.\\ Code|}$ 代码\n\n代码中过于简单的细节就不标注了。敢做黑题的相信一定能看懂。\n\n```cpp\n#include <bits/stdc++.h>\n#define ll long long\n#define FOR(i,l,r) for(int i=l;i<=r;i++)\n#define FILE(x) freopen(x\".in\",\"r\",stdin),freopen(x\".out\",\"w\",stdout);\n#define pii pair<int,int>\n#define pll pair<long long,long long>\n// #define Clock\nusing namespace std;\nconst ll N=2e6+10;\nll n,a[N],sum,l[N],r[N],L,R,p[N],cnt,s,ans;\nbool book[N];\ninline bool cmp(ll a,ll b){return a>b;}\nint main(){\n    #ifdef Clock\n        clock_t Start_Time=clock();\n    #endif\n    // ios::sync_with_stdio(false);\n    // cin.tie(0),cout.tie(0);\n    // FILE(\"xxx\");\n    cin>>n; r[0]=1,l[n+1]=n;\n    for(ll i=1;i<=n;i++){\n        cin>>a[i];\n        sum+=a[i],book[i]=a[i];\n        l[i]=i-1,r[i]=i+1;\n    }\n    for(ll i=3;i<=n;i=r[i]){\n        ll x=l[l[i]],y=l[i],z=i;\n        while(book[x]&&book[y]&&book[z]&&a[y]>a[x]&&a[y]>a[z]){\n            a[i]=a[x]+a[z]-a[y],r[l[x]]=i,l[i]=l[x];\n            x=l[l[i]],y=l[i],z=i;\n        }\n    }\n    L=r[0],R=l[n+1];\n    while(a[L]>=a[r[L]]&&book[L]&&book[r[L]])s-=a[L]-a[r[L]],L=r[r[L]];\n    while(a[R]>=a[l[R]]&&book[R]&&book[l[R]])s-=a[R]-a[l[R]],R=l[l[R]];\n    for(ll i=L;i<=R;i=r[i])if(book[i])p[++cnt]=a[i];\n    sort(p+1,p+cnt+1,cmp);\n    p[++cnt]=s;\n    for(ll i=1;i<=cnt;i++)ans+=(i%2?p[i]:-p[i]);\n    cout<<(sum+ans)/2<<' '<<(sum-ans)/2;\n    #ifdef Clock\n        cout<<\"\\n- - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\\nRuntime: \"<<clock()-Start_Time<<\" ms\\n\";\n        system(\"pause\");\n    #endif\n    return 0;\n}\n```\n\n## $\\large\\mathfrak{4th.\\ Postscript|}$ 后记\n\n第一天写的时候没过，那时还是紫题，并且不能写题解。第二天过完后发现变成了黑题，而且还可以写题解！于是遍欣喜若狂地写下了这篇题解。","slug":"solution-luogu-p3210","published":1,"updated":"2024-09-08T13:43:06.000Z","_id":"cm0qrhqyw000if4ite3p63cww","comments":1,"layout":"post","photos":[],"content":"<h2 id=\"large-mathfrak-1st-Preamble-前言\"><a href=\"#large-mathfrak-1st-Preamble-前言\" class=\"headerlink\" title=\"$\\large\\mathfrak{1st.\\ Preamble|}$ 前言\"></a>$\\large\\mathfrak{1st.\\ Preamble|}$ 前言</h2><p>题目传送门：<a class=\"link\"   href=\"https://www.luogu.com.cn/problem/P3210\" >P3210 [HNOI2010] 取石头游戏 <i class=\"fa-regular fa-arrow-up-right-from-square fa-sm\"></i></a></p>\n<p>主要是参考楼下大佬的题解，对于其中没讲到或比较难懂的地方进行讲解，以及配上了图。</p>\n<h2 id=\"large-mathfrak-2nd-Solution-题解\"><a href=\"#large-mathfrak-2nd-Solution-题解\" class=\"headerlink\" title=\"$\\large\\mathfrak{2nd.\\ Solution|}$ 题解\"></a>$\\large\\mathfrak{2nd.\\ Solution|}$ 题解</h2><p>楼下大佬的比喻十分形象生动地描绘了俩人去石头的过程：</p>\n\n  <div class=\"note p-4 mb-4 rounded-small blue\">\n    <p>取石子的过程可以转化为两端分别有一个栈，可以从栈顶取石子，中间有若干个双端队列，可以从其两端取石子。</p>\n\n  </div>\n\n<p>我们可以根据俩人取石子的过程推算出<strong>先手积分减去后手积分的差值</strong> $dif$，然后根据总和就能求出最终俩人的积分。先手肯定希望 $dif$ 尽可能大，后手肯定希望 $dif$ 尽可能小。</p>\n<p>Q：为什么是算差值而不是直接算积分？</p>\n<p>A：因为差值好算呗！等会你就知道了。</p>\n<p>为了方便计算，我们肯定希望每次的全局最大权值的位置都是可以直接取的。接下来我们分两个部分讨论这俩人取石子的过程。</p>\n<p>注：接下来的递减、递增均指非严格递减和递增。</p>\n<h4 id=\"中间部分（双端队列）\"><a href=\"#中间部分（双端队列）\" class=\"headerlink\" title=\"中间部分（双端队列）\"></a>中间部分（双端队列）</h4><p>对于每个中间区块（双端队列）中，权值递增、递减和下凹的情况都很好解决，如下图箭头所示，从其中一端或两端开始取就行。</p>\n<p><img  \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"/img/solution-luogu-p3210-1.png\"\n                     \n                ></p>\n<p>然后我们来看看上凸该如何解决。<img  \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"/img/solution-luogu-p3210-2.png\"\n                     \n                ></p>\n<p>我们先来考虑最简单的三个位置的上凸情况：若存在 $a_{i-1}\\le a_i$ 并且 $a_i\\ge a_{i+1}$，若当前最优选择为 $a_{i-1}$，则先手会选择 $a_{i-1}$，接着后手会选择 $a_i$，然后先手会选择 $a_{i+1}$，最终 $dif$ 会增加（或减少）$a_{i-1}-a_i+a_{i+1}$，于是我们就可以把 $a_{i-1}, a_i, a_{i+1}$ 三个位置打包成一个权值为 $a_{i-1}-a_i+a_{i+1}$​​ 的位置。反之同理。这也是为什么我们是算差值而不是直接算积分。</p>\n<p>当我们把每个上凸都打包完，剩下就只剩下上面的三种情况，当前最大都是可以直接取到的。</p>\n<h4 id=\"两端（栈）\"><a href=\"#两端（栈）\" class=\"headerlink\" title=\"两端（栈）\"></a>两端（栈）</h4><p>对于左边部分，我们希望是单调递增的（因为只能从中间往外取）；反之，对于右边部分，我们希望是单调递减的。</p>\n<p>左边部分中，若存在递减的部分，那我们可以像刚才一样，将其打包起来，即：若存在 $a_i&gt;&#x3D;a_{i+1}$，且 $a_{i+1}$ 为目前全局最优，因为先手只能从右侧开始选，所以先手比选 $a_{i+1}$，后手必选 $a_i$，于是我们可以把 $a_i$ 和 $a_{i+1}$ 打包成一个权值为 $a_{i+1}-a_i$  的位置。</p>\n<p>右边部分同理。</p>\n<h4 id=\"实现方法\"><a href=\"#实现方法\" class=\"headerlink\" title=\"实现方法\"></a>实现方法</h4><p>全部打包完后，接下来每次的全局最大值必定可以直接取到，所以我们可以直接将所有位置按权值从大到小排序，然后从大到小取即可。</p>\n<h2 id=\"large-mathfrak-3rd-Code-代码\"><a href=\"#large-mathfrak-3rd-Code-代码\" class=\"headerlink\" title=\"$\\large\\mathfrak{3rd.\\ Code|}$ 代码\"></a>$\\large\\mathfrak{3rd.\\ Code|}$ 代码</h2><p>代码中过于简单的细节就不标注了。敢做黑题的相信一定能看懂。</p>\n<div class=\"highlight-container\" data-rel=\"Cpp\"><figure class=\"iseeu highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">define</span> ll long long</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">define</span> FOR(i,l,r) for(int i=l;i&lt;=r;i++)</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">define</span> FILE(x) freopen(x<span class=\"string\">&quot;.in&quot;</span>,<span class=\"string\">&quot;r&quot;</span>,stdin),freopen(x<span class=\"string\">&quot;.out&quot;</span>,<span class=\"string\">&quot;w&quot;</span>,stdout);</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">define</span> pii pair<span class=\"string\">&lt;int,int&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">define</span> pll pair<span class=\"string\">&lt;long long,long long&gt;</span></span></span><br><span class=\"line\"><span class=\"comment\">// #define Clock</span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"><span class=\"type\">const</span> ll N=<span class=\"number\">2e6</span><span class=\"number\">+10</span>;</span><br><span class=\"line\">ll n,a[N],sum,l[N],r[N],L,R,p[N],cnt,s,ans;</span><br><span class=\"line\"><span class=\"type\">bool</span> book[N];</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"type\">bool</span> <span class=\"title\">cmp</span><span class=\"params\">(ll a,ll b)</span></span>&#123;<span class=\"keyword\">return</span> a&gt;b;&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    <span class=\"meta\">#<span class=\"keyword\">ifdef</span> Clock</span></span><br><span class=\"line\">        <span class=\"type\">clock_t</span> Start_Time=<span class=\"built_in\">clock</span>();</span><br><span class=\"line\">    <span class=\"meta\">#<span class=\"keyword\">endif</span></span></span><br><span class=\"line\">    <span class=\"comment\">// ios::sync_with_stdio(false);</span></span><br><span class=\"line\">    <span class=\"comment\">// cin.tie(0),cout.tie(0);</span></span><br><span class=\"line\">    <span class=\"comment\">// FILE(&quot;xxx&quot;);</span></span><br><span class=\"line\">    cin&gt;&gt;n; r[<span class=\"number\">0</span>]=<span class=\"number\">1</span>,l[n<span class=\"number\">+1</span>]=n;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(ll i=<span class=\"number\">1</span>;i&lt;=n;i++)&#123;</span><br><span class=\"line\">        cin&gt;&gt;a[i];</span><br><span class=\"line\">        sum+=a[i],book[i]=a[i];</span><br><span class=\"line\">        l[i]=i<span class=\"number\">-1</span>,r[i]=i<span class=\"number\">+1</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(ll i=<span class=\"number\">3</span>;i&lt;=n;i=r[i])&#123;</span><br><span class=\"line\">        ll x=l[l[i]],y=l[i],z=i;</span><br><span class=\"line\">        <span class=\"keyword\">while</span>(book[x]&amp;&amp;book[y]&amp;&amp;book[z]&amp;&amp;a[y]&gt;a[x]&amp;&amp;a[y]&gt;a[z])&#123;</span><br><span class=\"line\">            a[i]=a[x]+a[z]-a[y],r[l[x]]=i,l[i]=l[x];</span><br><span class=\"line\">            x=l[l[i]],y=l[i],z=i;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    L=r[<span class=\"number\">0</span>],R=l[n<span class=\"number\">+1</span>];</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(a[L]&gt;=a[r[L]]&amp;&amp;book[L]&amp;&amp;book[r[L]])s-=a[L]-a[r[L]],L=r[r[L]];</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(a[R]&gt;=a[l[R]]&amp;&amp;book[R]&amp;&amp;book[l[R]])s-=a[R]-a[l[R]],R=l[l[R]];</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(ll i=L;i&lt;=R;i=r[i])<span class=\"keyword\">if</span>(book[i])p[++cnt]=a[i];</span><br><span class=\"line\">    <span class=\"built_in\">sort</span>(p<span class=\"number\">+1</span>,p+cnt<span class=\"number\">+1</span>,cmp);</span><br><span class=\"line\">    p[++cnt]=s;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(ll i=<span class=\"number\">1</span>;i&lt;=cnt;i++)ans+=(i%<span class=\"number\">2</span>?p[i]:-p[i]);</span><br><span class=\"line\">    cout&lt;&lt;(sum+ans)/<span class=\"number\">2</span>&lt;&lt;<span class=\"string\">&#x27; &#x27;</span>&lt;&lt;(sum-ans)/<span class=\"number\">2</span>;</span><br><span class=\"line\">    <span class=\"meta\">#<span class=\"keyword\">ifdef</span> Clock</span></span><br><span class=\"line\">        cout&lt;&lt;<span class=\"string\">&quot;\\n- - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\\nRuntime: &quot;</span>&lt;&lt;<span class=\"built_in\">clock</span>()-Start_Time&lt;&lt;<span class=\"string\">&quot; ms\\n&quot;</span>;</span><br><span class=\"line\">        <span class=\"built_in\">system</span>(<span class=\"string\">&quot;pause&quot;</span>);</span><br><span class=\"line\">    <span class=\"meta\">#<span class=\"keyword\">endif</span></span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></div>\n\n<h2 id=\"large-mathfrak-4th-Postscript-后记\"><a href=\"#large-mathfrak-4th-Postscript-后记\" class=\"headerlink\" title=\"$\\large\\mathfrak{4th.\\ Postscript|}$ 后记\"></a>$\\large\\mathfrak{4th.\\ Postscript|}$ 后记</h2><p>第一天写的时候没过，那时还是紫题，并且不能写题解。第二天过完后发现变成了黑题，而且还可以写题解！于是遍欣喜若狂地写下了这篇题解。</p>\n","excerpt":"","more":"<h2 id=\"large-mathfrak-1st-Preamble-前言\"><a href=\"#large-mathfrak-1st-Preamble-前言\" class=\"headerlink\" title=\"$\\large\\mathfrak{1st.\\ Preamble|}$ 前言\"></a>$\\large\\mathfrak{1st.\\ Preamble|}$ 前言</h2><p>题目传送门：<a class=\"link\"   href=\"https://www.luogu.com.cn/problem/P3210\" >P3210 [HNOI2010] 取石头游戏 <i class=\"fa-regular fa-arrow-up-right-from-square fa-sm\"></i></a></p>\n<p>主要是参考楼下大佬的题解，对于其中没讲到或比较难懂的地方进行讲解，以及配上了图。</p>\n<h2 id=\"large-mathfrak-2nd-Solution-题解\"><a href=\"#large-mathfrak-2nd-Solution-题解\" class=\"headerlink\" title=\"$\\large\\mathfrak{2nd.\\ Solution|}$ 题解\"></a>$\\large\\mathfrak{2nd.\\ Solution|}$ 题解</h2><p>楼下大佬的比喻十分形象生动地描绘了俩人去石头的过程：</p>\n\n  <div class=\"note p-4 mb-4 rounded-small blue\">\n    <p>取石子的过程可以转化为两端分别有一个栈，可以从栈顶取石子，中间有若干个双端队列，可以从其两端取石子。</p>\n\n  </div>\n\n<p>我们可以根据俩人取石子的过程推算出<strong>先手积分减去后手积分的差值</strong> $dif$，然后根据总和就能求出最终俩人的积分。先手肯定希望 $dif$ 尽可能大，后手肯定希望 $dif$ 尽可能小。</p>\n<p>Q：为什么是算差值而不是直接算积分？</p>\n<p>A：因为差值好算呗！等会你就知道了。</p>\n<p>为了方便计算，我们肯定希望每次的全局最大权值的位置都是可以直接取的。接下来我们分两个部分讨论这俩人取石子的过程。</p>\n<p>注：接下来的递减、递增均指非严格递减和递增。</p>\n<h4 id=\"中间部分（双端队列）\"><a href=\"#中间部分（双端队列）\" class=\"headerlink\" title=\"中间部分（双端队列）\"></a>中间部分（双端队列）</h4><p>对于每个中间区块（双端队列）中，权值递增、递减和下凹的情况都很好解决，如下图箭头所示，从其中一端或两端开始取就行。</p>\n<p><img  \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"/img/solution-luogu-p3210-1.png\"\n                     \n                ></p>\n<p>然后我们来看看上凸该如何解决。<img  \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"/img/solution-luogu-p3210-2.png\"\n                     \n                ></p>\n<p>我们先来考虑最简单的三个位置的上凸情况：若存在 $a_{i-1}\\le a_i$ 并且 $a_i\\ge a_{i+1}$，若当前最优选择为 $a_{i-1}$，则先手会选择 $a_{i-1}$，接着后手会选择 $a_i$，然后先手会选择 $a_{i+1}$，最终 $dif$ 会增加（或减少）$a_{i-1}-a_i+a_{i+1}$，于是我们就可以把 $a_{i-1}, a_i, a_{i+1}$ 三个位置打包成一个权值为 $a_{i-1}-a_i+a_{i+1}$​​ 的位置。反之同理。这也是为什么我们是算差值而不是直接算积分。</p>\n<p>当我们把每个上凸都打包完，剩下就只剩下上面的三种情况，当前最大都是可以直接取到的。</p>\n<h4 id=\"两端（栈）\"><a href=\"#两端（栈）\" class=\"headerlink\" title=\"两端（栈）\"></a>两端（栈）</h4><p>对于左边部分，我们希望是单调递增的（因为只能从中间往外取）；反之，对于右边部分，我们希望是单调递减的。</p>\n<p>左边部分中，若存在递减的部分，那我们可以像刚才一样，将其打包起来，即：若存在 $a_i&gt;&#x3D;a_{i+1}$，且 $a_{i+1}$ 为目前全局最优，因为先手只能从右侧开始选，所以先手比选 $a_{i+1}$，后手必选 $a_i$，于是我们可以把 $a_i$ 和 $a_{i+1}$ 打包成一个权值为 $a_{i+1}-a_i$  的位置。</p>\n<p>右边部分同理。</p>\n<h4 id=\"实现方法\"><a href=\"#实现方法\" class=\"headerlink\" title=\"实现方法\"></a>实现方法</h4><p>全部打包完后，接下来每次的全局最大值必定可以直接取到，所以我们可以直接将所有位置按权值从大到小排序，然后从大到小取即可。</p>\n<h2 id=\"large-mathfrak-3rd-Code-代码\"><a href=\"#large-mathfrak-3rd-Code-代码\" class=\"headerlink\" title=\"$\\large\\mathfrak{3rd.\\ Code|}$ 代码\"></a>$\\large\\mathfrak{3rd.\\ Code|}$ 代码</h2><p>代码中过于简单的细节就不标注了。敢做黑题的相信一定能看懂。</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">define</span> ll long long</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">define</span> FOR(i,l,r) for(int i=l;i&lt;=r;i++)</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">define</span> FILE(x) freopen(x<span class=\"string\">&quot;.in&quot;</span>,<span class=\"string\">&quot;r&quot;</span>,stdin),freopen(x<span class=\"string\">&quot;.out&quot;</span>,<span class=\"string\">&quot;w&quot;</span>,stdout);</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">define</span> pii pair<span class=\"string\">&lt;int,int&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">define</span> pll pair<span class=\"string\">&lt;long long,long long&gt;</span></span></span><br><span class=\"line\"><span class=\"comment\">// #define Clock</span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"><span class=\"type\">const</span> ll N=<span class=\"number\">2e6</span><span class=\"number\">+10</span>;</span><br><span class=\"line\">ll n,a[N],sum,l[N],r[N],L,R,p[N],cnt,s,ans;</span><br><span class=\"line\"><span class=\"type\">bool</span> book[N];</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"type\">bool</span> <span class=\"title\">cmp</span><span class=\"params\">(ll a,ll b)</span></span>&#123;<span class=\"keyword\">return</span> a&gt;b;&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    <span class=\"meta\">#<span class=\"keyword\">ifdef</span> Clock</span></span><br><span class=\"line\">        <span class=\"type\">clock_t</span> Start_Time=<span class=\"built_in\">clock</span>();</span><br><span class=\"line\">    <span class=\"meta\">#<span class=\"keyword\">endif</span></span></span><br><span class=\"line\">    <span class=\"comment\">// ios::sync_with_stdio(false);</span></span><br><span class=\"line\">    <span class=\"comment\">// cin.tie(0),cout.tie(0);</span></span><br><span class=\"line\">    <span class=\"comment\">// FILE(&quot;xxx&quot;);</span></span><br><span class=\"line\">    cin&gt;&gt;n; r[<span class=\"number\">0</span>]=<span class=\"number\">1</span>,l[n<span class=\"number\">+1</span>]=n;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(ll i=<span class=\"number\">1</span>;i&lt;=n;i++)&#123;</span><br><span class=\"line\">        cin&gt;&gt;a[i];</span><br><span class=\"line\">        sum+=a[i],book[i]=a[i];</span><br><span class=\"line\">        l[i]=i<span class=\"number\">-1</span>,r[i]=i<span class=\"number\">+1</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(ll i=<span class=\"number\">3</span>;i&lt;=n;i=r[i])&#123;</span><br><span class=\"line\">        ll x=l[l[i]],y=l[i],z=i;</span><br><span class=\"line\">        <span class=\"keyword\">while</span>(book[x]&amp;&amp;book[y]&amp;&amp;book[z]&amp;&amp;a[y]&gt;a[x]&amp;&amp;a[y]&gt;a[z])&#123;</span><br><span class=\"line\">            a[i]=a[x]+a[z]-a[y],r[l[x]]=i,l[i]=l[x];</span><br><span class=\"line\">            x=l[l[i]],y=l[i],z=i;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    L=r[<span class=\"number\">0</span>],R=l[n<span class=\"number\">+1</span>];</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(a[L]&gt;=a[r[L]]&amp;&amp;book[L]&amp;&amp;book[r[L]])s-=a[L]-a[r[L]],L=r[r[L]];</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(a[R]&gt;=a[l[R]]&amp;&amp;book[R]&amp;&amp;book[l[R]])s-=a[R]-a[l[R]],R=l[l[R]];</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(ll i=L;i&lt;=R;i=r[i])<span class=\"keyword\">if</span>(book[i])p[++cnt]=a[i];</span><br><span class=\"line\">    <span class=\"built_in\">sort</span>(p<span class=\"number\">+1</span>,p+cnt<span class=\"number\">+1</span>,cmp);</span><br><span class=\"line\">    p[++cnt]=s;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(ll i=<span class=\"number\">1</span>;i&lt;=cnt;i++)ans+=(i%<span class=\"number\">2</span>?p[i]:-p[i]);</span><br><span class=\"line\">    cout&lt;&lt;(sum+ans)/<span class=\"number\">2</span>&lt;&lt;<span class=\"string\">&#x27; &#x27;</span>&lt;&lt;(sum-ans)/<span class=\"number\">2</span>;</span><br><span class=\"line\">    <span class=\"meta\">#<span class=\"keyword\">ifdef</span> Clock</span></span><br><span class=\"line\">        cout&lt;&lt;<span class=\"string\">&quot;\\n- - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\\nRuntime: &quot;</span>&lt;&lt;<span class=\"built_in\">clock</span>()-Start_Time&lt;&lt;<span class=\"string\">&quot; ms\\n&quot;</span>;</span><br><span class=\"line\">        <span class=\"built_in\">system</span>(<span class=\"string\">&quot;pause&quot;</span>);</span><br><span class=\"line\">    <span class=\"meta\">#<span class=\"keyword\">endif</span></span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"large-mathfrak-4th-Postscript-后记\"><a href=\"#large-mathfrak-4th-Postscript-后记\" class=\"headerlink\" title=\"$\\large\\mathfrak{4th.\\ Postscript|}$ 后记\"></a>$\\large\\mathfrak{4th.\\ Postscript|}$ 后记</h2><p>第一天写的时候没过，那时还是紫题，并且不能写题解。第二天过完后发现变成了黑题，而且还可以写题解！于是遍欣喜若狂地写下了这篇题解。</p>\n"},{"title":"【题解】 P3365 火星探险问题","date":"2024-08-27T04:00:00.000Z","mathjax":true,"banner":"/img/solution-luogu-p3365-banner.png","_content":"\n## $\\large\\mathfrak{1st.\\ Preamble|}$​ 前言\n\n这都什么年代了网络流 24 题居然还能写题解！\n\n个人认为这篇题解讲的还是比较详细的。\n\n## $\\large\\mathfrak{2nd.\\ Solution|}$ 题解\n\n看到题目的第一眼，我的反应是这样的：这不跟[深海机器人问题](https://www.luogu.com.cn/problem/P4012)差不多吗？`Ctrl-C` `Ctrl-V` 秒了。\n\n不过我还是讲讲怎么建模吧。\n\n这里我定义点 $(x,y)$ 表示第 $x$ 行第 $y$ 列的数，和题目中的是反过来的 ~~（题目里的那种表示方法有点反人类）~~。\n\n### 建模\n\n把一个点 $(x,y)$ 拆成 $(x,y)_1$ 和 $(x,y)_2$ 两个点，$x_1$ 为入点，$x_2$ 为出点。\n\n#### 平坦无障碍（$0$）\n\n1. 建边 $(x,y)_1 \\rightarrow (x,y)_2$，容量为 $\\inf$，费用为 $0$，代表这个点可以走无数次，没有收益。\n2. 建边 $(x,y)_2 \\rightarrow (x+1,y)_1$，容量为 $\\inf$，费用为 $0$，代表这个从这个点向南到下面那个点可以走无数次。\n3. 建边 $(x,y)_2 \\rightarrow (x,y+1)_1$，容量为 $\\inf$，费用为 $0$，代表这个从这个点向东到右边那个点可以走无数次。\n\n#### 障碍（$1$）\n\n没法走，不用管它。\n\n#### 石块（$2$）\n\n和平坦无障碍的相比，只需要再多加一条边 $(x,y)_1 \\rightarrow (x,y)_2$，容量为 $1$，费用为 $1$，代表只可以捡一次石块，收益为 $1$。\n\n最后跑最大费用最大流即可。\n\n### 输出\n\n我建完模就直接输出费用，然后开开心心地跑去测样例，丫的，居然要输出路径！我当场懵逼，冥（cha）思（kan）苦（ti）想（jie）后得到了下面的方法：\n\n对于每条路径，从起点开始搜索，每搜到一个点，选一条反向边有剩余容量（说明被走过）的临边走过去，并把反向边的剩余容量减去 $1$，直到走到终点。\n\n如果看不懂可以看代码：\n\n```cpp\nvoid put_ans(int a){\n    int x=1,y=1;    // 从起点开始搜索\n    while(1){\n        if(x>=q&&y>=p)return;  // 到达终点\n        int u=B(x,y);\n        for(int i=head[u];i;i=e[i].pre){\n            int v=e[i].to;\n            if(!e[i^1].w)continue;  // 反向边有剩余容量\n            if(v==A(x+1,y)){x++,e[i^1].w--,printf(\"%d 0\\n\",a);break;}  // 向南走\n            if(v==A(x,y+1)){y++,e[i^1].w--,printf(\"%d 1\\n\",a);break;}  // 向东走\n        }\n    }\n}\n```\n\n## $\\large\\mathfrak{3rd.\\ Code|}$ 代码\n\n我是把边权设为负数跑最小费用最大流的方式求解最大费用最大流。代码压行请见谅。\n\n```cpp\n#include <bits/stdc++.h>\n#define ll long long\nusing namespace std;\nconst ll inf=1e18,N=5e3+10,M=5e4+10;\ninline int read(){\n\tint x=0,f=1;char ch=getchar();\n\twhile (ch<'0'||ch>'9'){if (ch=='-') f=-1;ch=getchar();}\n\twhile (ch>='0'&&ch<='9'){x=x*10+ch-48;ch=getchar();}\n\treturn x*f;\n}\nll e_cnt=1,head[N];\nstruct EDGE{ll from,to,w,c,pre;}e[M<<1];\nll n,p,q,s,t,ans,cost;\nll dis[N],pre[N];\ninline void add(ll from,ll to,ll w,ll c){\n    e[++e_cnt]=(EDGE){from,to,w,c,head[from]};\n    head[from]=e_cnt;\n}\ninline void add_edge(ll u,ll v,ll w,ll c){\n    add(u,v,w,c),add(v,u,0,-c);\n}\ninline int A(int x,int y){return (x-1)*p+y;}    // (x,y)_1\ninline int B(int x,int y){return A(x,y)+p*q;}   // (x,y)_2\n//------------------最大费用最大流板子---------------------\nbool spfa(ll s,ll t){\n    bool inq[N];\n    memset(pre,-1,sizeof(pre));\n    for(int i=1;i<=t;i++)dis[i]=inf,inq[i]=0;\n    queue<ll>que;\n    dis[s]=0,inq[s]=1,que.push(s);\n    while(!que.empty()){\n        ll u=que.front();\n        que.pop();\n        inq[u]=0;\n        for(int i=head[u];i;i=e[i].pre){\n            if(e[i].w>0){\n                ll v=e[i].to,c=e[i].c;\n                if(dis[u]+c<dis[v]){\n                    dis[v]=dis[u]+c;\n                    pre[v]=i;\n                    if(!inq[v]){\n                        que.push(v);\n                        inq[v]=1;\n                    }\n                }\n            }\n        }\n    }\n    return dis[t]!=inf;\n}\nvoid mincost(ll s,ll t){\n    while(spfa(s,t)){\n        ll v=t,flow=inf;\n        while(pre[v]!=-1){\n            ll i=pre[v],u=e[i].from;\n            flow=min(flow,e[i].w);\n            v=u;\n        }\n        v=t;\n        while(pre[v]!=-1){\n            ll i=pre[v],u=e[i].from;\n            e[i].w-=flow;\n            e[i^1].w+=flow;\n            v=u;\n        }\n        cost+=dis[t]*flow;\n        ans+=flow;\n    }\n}\n//------------end of 最大费用最大流-------------\nvoid put_ans(int a){\n    int x=1,y=1;    // 从起点开始搜索\n    while(1){\n        if(x>=q&&y>=p)return;  // 到达终点\n        int u=B(x,y);\n        for(int i=head[u];i;i=e[i].pre){\n            int v=e[i].to;\n            if(!e[i^1].w)continue;  // 反向边有剩余容量\n            if(v==A(x+1,y)){x++,e[i^1].w--,printf(\"%d 0\\n\",a);break;}  // 向南走\n            if(v==A(x,y+1)){y++,e[i^1].w--,printf(\"%d 1\\n\",a);break;}  // 向东走\n        }\n    }\n}\nint main(){\n    n=read(),p=read(),q=read();\n    s=p*q*2+1,t=s+1;\n    for(int i=1;i<=q;i++){\n        for(int j=1;j<=p;j++){\n            int x;\n            x=read();\n            if(x!=1){    // 0和2有三条相同边，合在一起，1啥也不干\n                add_edge(A(i,j),B(i,j),inf,0);\n                if(i+1<=q)add_edge(B(i,j),A(i+1,j),inf,0);\n                if(j+1<=p)add_edge(B(i,j),A(i,j+1),inf,0);\n                if(x==2)add_edge(A(i,j),B(i,j),1,-1);  // 2多建一条边\n            }\n        }\n    }\n    add_edge(s,A(1,1),n,0);\n    add_edge(B(q,p),t,n,0);\n    mincost(s,t);\n    for(int i=1;i<=ans;i++)put_ans(i);\n    return 0;\n}\n```\n\n[AC 记录](https://www.luogu.com.cn/record/172049267)\n\n## $\\large\\mathfrak{4th.\\ Postscript|}$ 后记\n\n第一遍编号标错居然可以拿 $84$ 分（只有 #5 没过），这数据着实有点水……","source":"_posts/solution-luogu-p3356.md","raw":"---\ntitle: 【题解】 P3365 火星探险问题\ndate: 2024-08-27 12:00:00\ntags: \n    - 题解\n    - 网络流\n    - 费用流\nmathjax: true\nbanner: /img/solution-luogu-p3365-banner.png\n---\n\n## $\\large\\mathfrak{1st.\\ Preamble|}$​ 前言\n\n这都什么年代了网络流 24 题居然还能写题解！\n\n个人认为这篇题解讲的还是比较详细的。\n\n## $\\large\\mathfrak{2nd.\\ Solution|}$ 题解\n\n看到题目的第一眼，我的反应是这样的：这不跟[深海机器人问题](https://www.luogu.com.cn/problem/P4012)差不多吗？`Ctrl-C` `Ctrl-V` 秒了。\n\n不过我还是讲讲怎么建模吧。\n\n这里我定义点 $(x,y)$ 表示第 $x$ 行第 $y$ 列的数，和题目中的是反过来的 ~~（题目里的那种表示方法有点反人类）~~。\n\n### 建模\n\n把一个点 $(x,y)$ 拆成 $(x,y)_1$ 和 $(x,y)_2$ 两个点，$x_1$ 为入点，$x_2$ 为出点。\n\n#### 平坦无障碍（$0$）\n\n1. 建边 $(x,y)_1 \\rightarrow (x,y)_2$，容量为 $\\inf$，费用为 $0$，代表这个点可以走无数次，没有收益。\n2. 建边 $(x,y)_2 \\rightarrow (x+1,y)_1$，容量为 $\\inf$，费用为 $0$，代表这个从这个点向南到下面那个点可以走无数次。\n3. 建边 $(x,y)_2 \\rightarrow (x,y+1)_1$，容量为 $\\inf$，费用为 $0$，代表这个从这个点向东到右边那个点可以走无数次。\n\n#### 障碍（$1$）\n\n没法走，不用管它。\n\n#### 石块（$2$）\n\n和平坦无障碍的相比，只需要再多加一条边 $(x,y)_1 \\rightarrow (x,y)_2$，容量为 $1$，费用为 $1$，代表只可以捡一次石块，收益为 $1$。\n\n最后跑最大费用最大流即可。\n\n### 输出\n\n我建完模就直接输出费用，然后开开心心地跑去测样例，丫的，居然要输出路径！我当场懵逼，冥（cha）思（kan）苦（ti）想（jie）后得到了下面的方法：\n\n对于每条路径，从起点开始搜索，每搜到一个点，选一条反向边有剩余容量（说明被走过）的临边走过去，并把反向边的剩余容量减去 $1$，直到走到终点。\n\n如果看不懂可以看代码：\n\n```cpp\nvoid put_ans(int a){\n    int x=1,y=1;    // 从起点开始搜索\n    while(1){\n        if(x>=q&&y>=p)return;  // 到达终点\n        int u=B(x,y);\n        for(int i=head[u];i;i=e[i].pre){\n            int v=e[i].to;\n            if(!e[i^1].w)continue;  // 反向边有剩余容量\n            if(v==A(x+1,y)){x++,e[i^1].w--,printf(\"%d 0\\n\",a);break;}  // 向南走\n            if(v==A(x,y+1)){y++,e[i^1].w--,printf(\"%d 1\\n\",a);break;}  // 向东走\n        }\n    }\n}\n```\n\n## $\\large\\mathfrak{3rd.\\ Code|}$ 代码\n\n我是把边权设为负数跑最小费用最大流的方式求解最大费用最大流。代码压行请见谅。\n\n```cpp\n#include <bits/stdc++.h>\n#define ll long long\nusing namespace std;\nconst ll inf=1e18,N=5e3+10,M=5e4+10;\ninline int read(){\n\tint x=0,f=1;char ch=getchar();\n\twhile (ch<'0'||ch>'9'){if (ch=='-') f=-1;ch=getchar();}\n\twhile (ch>='0'&&ch<='9'){x=x*10+ch-48;ch=getchar();}\n\treturn x*f;\n}\nll e_cnt=1,head[N];\nstruct EDGE{ll from,to,w,c,pre;}e[M<<1];\nll n,p,q,s,t,ans,cost;\nll dis[N],pre[N];\ninline void add(ll from,ll to,ll w,ll c){\n    e[++e_cnt]=(EDGE){from,to,w,c,head[from]};\n    head[from]=e_cnt;\n}\ninline void add_edge(ll u,ll v,ll w,ll c){\n    add(u,v,w,c),add(v,u,0,-c);\n}\ninline int A(int x,int y){return (x-1)*p+y;}    // (x,y)_1\ninline int B(int x,int y){return A(x,y)+p*q;}   // (x,y)_2\n//------------------最大费用最大流板子---------------------\nbool spfa(ll s,ll t){\n    bool inq[N];\n    memset(pre,-1,sizeof(pre));\n    for(int i=1;i<=t;i++)dis[i]=inf,inq[i]=0;\n    queue<ll>que;\n    dis[s]=0,inq[s]=1,que.push(s);\n    while(!que.empty()){\n        ll u=que.front();\n        que.pop();\n        inq[u]=0;\n        for(int i=head[u];i;i=e[i].pre){\n            if(e[i].w>0){\n                ll v=e[i].to,c=e[i].c;\n                if(dis[u]+c<dis[v]){\n                    dis[v]=dis[u]+c;\n                    pre[v]=i;\n                    if(!inq[v]){\n                        que.push(v);\n                        inq[v]=1;\n                    }\n                }\n            }\n        }\n    }\n    return dis[t]!=inf;\n}\nvoid mincost(ll s,ll t){\n    while(spfa(s,t)){\n        ll v=t,flow=inf;\n        while(pre[v]!=-1){\n            ll i=pre[v],u=e[i].from;\n            flow=min(flow,e[i].w);\n            v=u;\n        }\n        v=t;\n        while(pre[v]!=-1){\n            ll i=pre[v],u=e[i].from;\n            e[i].w-=flow;\n            e[i^1].w+=flow;\n            v=u;\n        }\n        cost+=dis[t]*flow;\n        ans+=flow;\n    }\n}\n//------------end of 最大费用最大流-------------\nvoid put_ans(int a){\n    int x=1,y=1;    // 从起点开始搜索\n    while(1){\n        if(x>=q&&y>=p)return;  // 到达终点\n        int u=B(x,y);\n        for(int i=head[u];i;i=e[i].pre){\n            int v=e[i].to;\n            if(!e[i^1].w)continue;  // 反向边有剩余容量\n            if(v==A(x+1,y)){x++,e[i^1].w--,printf(\"%d 0\\n\",a);break;}  // 向南走\n            if(v==A(x,y+1)){y++,e[i^1].w--,printf(\"%d 1\\n\",a);break;}  // 向东走\n        }\n    }\n}\nint main(){\n    n=read(),p=read(),q=read();\n    s=p*q*2+1,t=s+1;\n    for(int i=1;i<=q;i++){\n        for(int j=1;j<=p;j++){\n            int x;\n            x=read();\n            if(x!=1){    // 0和2有三条相同边，合在一起，1啥也不干\n                add_edge(A(i,j),B(i,j),inf,0);\n                if(i+1<=q)add_edge(B(i,j),A(i+1,j),inf,0);\n                if(j+1<=p)add_edge(B(i,j),A(i,j+1),inf,0);\n                if(x==2)add_edge(A(i,j),B(i,j),1,-1);  // 2多建一条边\n            }\n        }\n    }\n    add_edge(s,A(1,1),n,0);\n    add_edge(B(q,p),t,n,0);\n    mincost(s,t);\n    for(int i=1;i<=ans;i++)put_ans(i);\n    return 0;\n}\n```\n\n[AC 记录](https://www.luogu.com.cn/record/172049267)\n\n## $\\large\\mathfrak{4th.\\ Postscript|}$ 后记\n\n第一遍编号标错居然可以拿 $84$ 分（只有 #5 没过），这数据着实有点水……","slug":"solution-luogu-p3356","published":1,"updated":"2024-09-08T13:43:06.000Z","_id":"cm0qrhqyy000jf4it5l40h1t3","comments":1,"layout":"post","photos":[],"content":"<h2 id=\"large-mathfrak-1st-Preamble-​-前言\"><a href=\"#large-mathfrak-1st-Preamble-​-前言\" class=\"headerlink\" title=\"$\\large\\mathfrak{1st.\\ Preamble|}$​ 前言\"></a>$\\large\\mathfrak{1st.\\ Preamble|}$​ 前言</h2><p>这都什么年代了网络流 24 题居然还能写题解！</p>\n<p>个人认为这篇题解讲的还是比较详细的。</p>\n<h2 id=\"large-mathfrak-2nd-Solution-题解\"><a href=\"#large-mathfrak-2nd-Solution-题解\" class=\"headerlink\" title=\"$\\large\\mathfrak{2nd.\\ Solution|}$ 题解\"></a>$\\large\\mathfrak{2nd.\\ Solution|}$ 题解</h2><p>看到题目的第一眼，我的反应是这样的：这不跟<a class=\"link\"   href=\"https://www.luogu.com.cn/problem/P4012\" >深海机器人问题 <i class=\"fa-regular fa-arrow-up-right-from-square fa-sm\"></i></a>差不多吗？<code>Ctrl-C</code> <code>Ctrl-V</code> 秒了。</p>\n<p>不过我还是讲讲怎么建模吧。</p>\n<p>这里我定义点 $(x,y)$ 表示第 $x$ 行第 $y$ 列的数，和题目中的是反过来的 <del>（题目里的那种表示方法有点反人类）</del>。</p>\n<h3 id=\"建模\"><a href=\"#建模\" class=\"headerlink\" title=\"建模\"></a>建模</h3><p>把一个点 $(x,y)$ 拆成 $(x,y)_1$ 和 $(x,y)_2$ 两个点，$x_1$ 为入点，$x_2$ 为出点。</p>\n<h4 id=\"平坦无障碍（-0-）\"><a href=\"#平坦无障碍（-0-）\" class=\"headerlink\" title=\"平坦无障碍（$0$）\"></a>平坦无障碍（$0$）</h4><ol>\n<li>建边 $(x,y)_1 \\rightarrow (x,y)_2$，容量为 $\\inf$，费用为 $0$，代表这个点可以走无数次，没有收益。</li>\n<li>建边 $(x,y)_2 \\rightarrow (x+1,y)_1$，容量为 $\\inf$，费用为 $0$，代表这个从这个点向南到下面那个点可以走无数次。</li>\n<li>建边 $(x,y)_2 \\rightarrow (x,y+1)_1$，容量为 $\\inf$，费用为 $0$，代表这个从这个点向东到右边那个点可以走无数次。</li>\n</ol>\n<h4 id=\"障碍（-1-）\"><a href=\"#障碍（-1-）\" class=\"headerlink\" title=\"障碍（$1$）\"></a>障碍（$1$）</h4><p>没法走，不用管它。</p>\n<h4 id=\"石块（-2-）\"><a href=\"#石块（-2-）\" class=\"headerlink\" title=\"石块（$2$）\"></a>石块（$2$）</h4><p>和平坦无障碍的相比，只需要再多加一条边 $(x,y)_1 \\rightarrow (x,y)_2$，容量为 $1$，费用为 $1$，代表只可以捡一次石块，收益为 $1$。</p>\n<p>最后跑最大费用最大流即可。</p>\n<h3 id=\"输出\"><a href=\"#输出\" class=\"headerlink\" title=\"输出\"></a>输出</h3><p>我建完模就直接输出费用，然后开开心心地跑去测样例，丫的，居然要输出路径！我当场懵逼，冥（cha）思（kan）苦（ti）想（jie）后得到了下面的方法：</p>\n<p>对于每条路径，从起点开始搜索，每搜到一个点，选一条反向边有剩余容量（说明被走过）的临边走过去，并把反向边的剩余容量减去 $1$，直到走到终点。</p>\n<p>如果看不懂可以看代码：</p>\n<div class=\"highlight-container\" data-rel=\"Cpp\"><figure class=\"iseeu highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">put_ans</span><span class=\"params\">(<span class=\"type\">int</span> a)</span></span>&#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> x=<span class=\"number\">1</span>,y=<span class=\"number\">1</span>;    <span class=\"comment\">// 从起点开始搜索</span></span><br><span class=\"line\">    <span class=\"keyword\">while</span>(<span class=\"number\">1</span>)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(x&gt;=q&amp;&amp;y&gt;=p)<span class=\"keyword\">return</span>;  <span class=\"comment\">// 到达终点</span></span><br><span class=\"line\">        <span class=\"type\">int</span> u=<span class=\"built_in\">B</span>(x,y);</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"type\">int</span> i=head[u];i;i=e[i].pre)&#123;</span><br><span class=\"line\">            <span class=\"type\">int</span> v=e[i].to;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(!e[i^<span class=\"number\">1</span>].w)<span class=\"keyword\">continue</span>;  <span class=\"comment\">// 反向边有剩余容量</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span>(v==<span class=\"built_in\">A</span>(x<span class=\"number\">+1</span>,y))&#123;x++,e[i^<span class=\"number\">1</span>].w--,<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%d 0\\n&quot;</span>,a);<span class=\"keyword\">break</span>;&#125;  <span class=\"comment\">// 向南走</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span>(v==<span class=\"built_in\">A</span>(x,y<span class=\"number\">+1</span>))&#123;y++,e[i^<span class=\"number\">1</span>].w--,<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%d 1\\n&quot;</span>,a);<span class=\"keyword\">break</span>;&#125;  <span class=\"comment\">// 向东走</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></div>\n\n<h2 id=\"large-mathfrak-3rd-Code-代码\"><a href=\"#large-mathfrak-3rd-Code-代码\" class=\"headerlink\" title=\"$\\large\\mathfrak{3rd.\\ Code|}$ 代码\"></a>$\\large\\mathfrak{3rd.\\ Code|}$ 代码</h2><p>我是把边权设为负数跑最小费用最大流的方式求解最大费用最大流。代码压行请见谅。</p>\n<div class=\"highlight-container\" data-rel=\"Cpp\"><figure class=\"iseeu highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">define</span> ll long long</span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"><span class=\"type\">const</span> ll inf=<span class=\"number\">1e18</span>,N=<span class=\"number\">5e3</span><span class=\"number\">+10</span>,M=<span class=\"number\">5e4</span><span class=\"number\">+10</span>;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"type\">int</span> <span class=\"title\">read</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"type\">int</span> x=<span class=\"number\">0</span>,f=<span class=\"number\">1</span>;<span class=\"type\">char</span> ch=<span class=\"built_in\">getchar</span>();</span><br><span class=\"line\">\t<span class=\"keyword\">while</span> (ch&lt;<span class=\"string\">&#x27;0&#x27;</span>||ch&gt;<span class=\"string\">&#x27;9&#x27;</span>)&#123;<span class=\"keyword\">if</span> (ch==<span class=\"string\">&#x27;-&#x27;</span>) f=<span class=\"number\">-1</span>;ch=<span class=\"built_in\">getchar</span>();&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">while</span> (ch&gt;=<span class=\"string\">&#x27;0&#x27;</span>&amp;&amp;ch&lt;=<span class=\"string\">&#x27;9&#x27;</span>)&#123;x=x*<span class=\"number\">10</span>+ch<span class=\"number\">-48</span>;ch=<span class=\"built_in\">getchar</span>();&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> x*f;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">ll e_cnt=<span class=\"number\">1</span>,head[N];</span><br><span class=\"line\"><span class=\"keyword\">struct</span> <span class=\"title class_\">EDGE</span>&#123;ll from,to,w,c,pre;&#125;e[M&lt;&lt;<span class=\"number\">1</span>];</span><br><span class=\"line\">ll n,p,q,s,t,ans,cost;</span><br><span class=\"line\">ll dis[N],pre[N];</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"type\">void</span> <span class=\"title\">add</span><span class=\"params\">(ll from,ll to,ll w,ll c)</span></span>&#123;</span><br><span class=\"line\">    e[++e_cnt]=(EDGE)&#123;from,to,w,c,head[from]&#125;;</span><br><span class=\"line\">    head[from]=e_cnt;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"type\">void</span> <span class=\"title\">add_edge</span><span class=\"params\">(ll u,ll v,ll w,ll c)</span></span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">add</span>(u,v,w,c),<span class=\"built_in\">add</span>(v,u,<span class=\"number\">0</span>,-c);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"type\">int</span> <span class=\"title\">A</span><span class=\"params\">(<span class=\"type\">int</span> x,<span class=\"type\">int</span> y)</span></span>&#123;<span class=\"keyword\">return</span> (x<span class=\"number\">-1</span>)*p+y;&#125;    <span class=\"comment\">// (x,y)_1</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"type\">int</span> <span class=\"title\">B</span><span class=\"params\">(<span class=\"type\">int</span> x,<span class=\"type\">int</span> y)</span></span>&#123;<span class=\"keyword\">return</span> <span class=\"built_in\">A</span>(x,y)+p*q;&#125;   <span class=\"comment\">// (x,y)_2</span></span><br><span class=\"line\"><span class=\"comment\">//------------------最大费用最大流板子---------------------</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">bool</span> <span class=\"title\">spfa</span><span class=\"params\">(ll s,ll t)</span></span>&#123;</span><br><span class=\"line\">    <span class=\"type\">bool</span> inq[N];</span><br><span class=\"line\">    <span class=\"built_in\">memset</span>(pre,<span class=\"number\">-1</span>,<span class=\"built_in\">sizeof</span>(pre));</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"type\">int</span> i=<span class=\"number\">1</span>;i&lt;=t;i++)dis[i]=inf,inq[i]=<span class=\"number\">0</span>;</span><br><span class=\"line\">    queue&lt;ll&gt;que;</span><br><span class=\"line\">    dis[s]=<span class=\"number\">0</span>,inq[s]=<span class=\"number\">1</span>,que.<span class=\"built_in\">push</span>(s);</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(!que.<span class=\"built_in\">empty</span>())&#123;</span><br><span class=\"line\">        ll u=que.<span class=\"built_in\">front</span>();</span><br><span class=\"line\">        que.<span class=\"built_in\">pop</span>();</span><br><span class=\"line\">        inq[u]=<span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"type\">int</span> i=head[u];i;i=e[i].pre)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(e[i].w&gt;<span class=\"number\">0</span>)&#123;</span><br><span class=\"line\">                ll v=e[i].to,c=e[i].c;</span><br><span class=\"line\">                <span class=\"keyword\">if</span>(dis[u]+c&lt;dis[v])&#123;</span><br><span class=\"line\">                    dis[v]=dis[u]+c;</span><br><span class=\"line\">                    pre[v]=i;</span><br><span class=\"line\">                    <span class=\"keyword\">if</span>(!inq[v])&#123;</span><br><span class=\"line\">                        que.<span class=\"built_in\">push</span>(v);</span><br><span class=\"line\">                        inq[v]=<span class=\"number\">1</span>;</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> dis[t]!=inf;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">mincost</span><span class=\"params\">(ll s,ll t)</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(<span class=\"built_in\">spfa</span>(s,t))&#123;</span><br><span class=\"line\">        ll v=t,flow=inf;</span><br><span class=\"line\">        <span class=\"keyword\">while</span>(pre[v]!=<span class=\"number\">-1</span>)&#123;</span><br><span class=\"line\">            ll i=pre[v],u=e[i].from;</span><br><span class=\"line\">            flow=<span class=\"built_in\">min</span>(flow,e[i].w);</span><br><span class=\"line\">            v=u;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        v=t;</span><br><span class=\"line\">        <span class=\"keyword\">while</span>(pre[v]!=<span class=\"number\">-1</span>)&#123;</span><br><span class=\"line\">            ll i=pre[v],u=e[i].from;</span><br><span class=\"line\">            e[i].w-=flow;</span><br><span class=\"line\">            e[i^<span class=\"number\">1</span>].w+=flow;</span><br><span class=\"line\">            v=u;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        cost+=dis[t]*flow;</span><br><span class=\"line\">        ans+=flow;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//------------end of 最大费用最大流-------------</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">put_ans</span><span class=\"params\">(<span class=\"type\">int</span> a)</span></span>&#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> x=<span class=\"number\">1</span>,y=<span class=\"number\">1</span>;    <span class=\"comment\">// 从起点开始搜索</span></span><br><span class=\"line\">    <span class=\"keyword\">while</span>(<span class=\"number\">1</span>)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(x&gt;=q&amp;&amp;y&gt;=p)<span class=\"keyword\">return</span>;  <span class=\"comment\">// 到达终点</span></span><br><span class=\"line\">        <span class=\"type\">int</span> u=<span class=\"built_in\">B</span>(x,y);</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"type\">int</span> i=head[u];i;i=e[i].pre)&#123;</span><br><span class=\"line\">            <span class=\"type\">int</span> v=e[i].to;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(!e[i^<span class=\"number\">1</span>].w)<span class=\"keyword\">continue</span>;  <span class=\"comment\">// 反向边有剩余容量</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span>(v==<span class=\"built_in\">A</span>(x<span class=\"number\">+1</span>,y))&#123;x++,e[i^<span class=\"number\">1</span>].w--,<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%d 0\\n&quot;</span>,a);<span class=\"keyword\">break</span>;&#125;  <span class=\"comment\">// 向南走</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span>(v==<span class=\"built_in\">A</span>(x,y<span class=\"number\">+1</span>))&#123;y++,e[i^<span class=\"number\">1</span>].w--,<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%d 1\\n&quot;</span>,a);<span class=\"keyword\">break</span>;&#125;  <span class=\"comment\">// 向东走</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    n=<span class=\"built_in\">read</span>(),p=<span class=\"built_in\">read</span>(),q=<span class=\"built_in\">read</span>();</span><br><span class=\"line\">    s=p*q*<span class=\"number\">2</span><span class=\"number\">+1</span>,t=s<span class=\"number\">+1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"type\">int</span> i=<span class=\"number\">1</span>;i&lt;=q;i++)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"type\">int</span> j=<span class=\"number\">1</span>;j&lt;=p;j++)&#123;</span><br><span class=\"line\">            <span class=\"type\">int</span> x;</span><br><span class=\"line\">            x=<span class=\"built_in\">read</span>();</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(x!=<span class=\"number\">1</span>)&#123;    <span class=\"comment\">// 0和2有三条相同边，合在一起，1啥也不干</span></span><br><span class=\"line\">                <span class=\"built_in\">add_edge</span>(<span class=\"built_in\">A</span>(i,j),<span class=\"built_in\">B</span>(i,j),inf,<span class=\"number\">0</span>);</span><br><span class=\"line\">                <span class=\"keyword\">if</span>(i<span class=\"number\">+1</span>&lt;=q)<span class=\"built_in\">add_edge</span>(<span class=\"built_in\">B</span>(i,j),<span class=\"built_in\">A</span>(i<span class=\"number\">+1</span>,j),inf,<span class=\"number\">0</span>);</span><br><span class=\"line\">                <span class=\"keyword\">if</span>(j<span class=\"number\">+1</span>&lt;=p)<span class=\"built_in\">add_edge</span>(<span class=\"built_in\">B</span>(i,j),<span class=\"built_in\">A</span>(i,j<span class=\"number\">+1</span>),inf,<span class=\"number\">0</span>);</span><br><span class=\"line\">                <span class=\"keyword\">if</span>(x==<span class=\"number\">2</span>)<span class=\"built_in\">add_edge</span>(<span class=\"built_in\">A</span>(i,j),<span class=\"built_in\">B</span>(i,j),<span class=\"number\">1</span>,<span class=\"number\">-1</span>);  <span class=\"comment\">// 2多建一条边</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"built_in\">add_edge</span>(s,<span class=\"built_in\">A</span>(<span class=\"number\">1</span>,<span class=\"number\">1</span>),n,<span class=\"number\">0</span>);</span><br><span class=\"line\">    <span class=\"built_in\">add_edge</span>(<span class=\"built_in\">B</span>(q,p),t,n,<span class=\"number\">0</span>);</span><br><span class=\"line\">    <span class=\"built_in\">mincost</span>(s,t);</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"type\">int</span> i=<span class=\"number\">1</span>;i&lt;=ans;i++)<span class=\"built_in\">put_ans</span>(i);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></div>\n\n<p><a class=\"link\"   href=\"https://www.luogu.com.cn/record/172049267\" >AC 记录 <i class=\"fa-regular fa-arrow-up-right-from-square fa-sm\"></i></a></p>\n<h2 id=\"large-mathfrak-4th-Postscript-后记\"><a href=\"#large-mathfrak-4th-Postscript-后记\" class=\"headerlink\" title=\"$\\large\\mathfrak{4th.\\ Postscript|}$ 后记\"></a>$\\large\\mathfrak{4th.\\ Postscript|}$ 后记</h2><p>第一遍编号标错居然可以拿 $84$ 分（只有 #5 没过），这数据着实有点水……</p>\n","excerpt":"","more":"<h2 id=\"large-mathfrak-1st-Preamble-​-前言\"><a href=\"#large-mathfrak-1st-Preamble-​-前言\" class=\"headerlink\" title=\"$\\large\\mathfrak{1st.\\ Preamble|}$​ 前言\"></a>$\\large\\mathfrak{1st.\\ Preamble|}$​ 前言</h2><p>这都什么年代了网络流 24 题居然还能写题解！</p>\n<p>个人认为这篇题解讲的还是比较详细的。</p>\n<h2 id=\"large-mathfrak-2nd-Solution-题解\"><a href=\"#large-mathfrak-2nd-Solution-题解\" class=\"headerlink\" title=\"$\\large\\mathfrak{2nd.\\ Solution|}$ 题解\"></a>$\\large\\mathfrak{2nd.\\ Solution|}$ 题解</h2><p>看到题目的第一眼，我的反应是这样的：这不跟<a class=\"link\"   href=\"https://www.luogu.com.cn/problem/P4012\" >深海机器人问题 <i class=\"fa-regular fa-arrow-up-right-from-square fa-sm\"></i></a>差不多吗？<code>Ctrl-C</code> <code>Ctrl-V</code> 秒了。</p>\n<p>不过我还是讲讲怎么建模吧。</p>\n<p>这里我定义点 $(x,y)$ 表示第 $x$ 行第 $y$ 列的数，和题目中的是反过来的 <del>（题目里的那种表示方法有点反人类）</del>。</p>\n<h3 id=\"建模\"><a href=\"#建模\" class=\"headerlink\" title=\"建模\"></a>建模</h3><p>把一个点 $(x,y)$ 拆成 $(x,y)_1$ 和 $(x,y)_2$ 两个点，$x_1$ 为入点，$x_2$ 为出点。</p>\n<h4 id=\"平坦无障碍（-0-）\"><a href=\"#平坦无障碍（-0-）\" class=\"headerlink\" title=\"平坦无障碍（$0$）\"></a>平坦无障碍（$0$）</h4><ol>\n<li>建边 $(x,y)_1 \\rightarrow (x,y)_2$，容量为 $\\inf$，费用为 $0$，代表这个点可以走无数次，没有收益。</li>\n<li>建边 $(x,y)_2 \\rightarrow (x+1,y)_1$，容量为 $\\inf$，费用为 $0$，代表这个从这个点向南到下面那个点可以走无数次。</li>\n<li>建边 $(x,y)_2 \\rightarrow (x,y+1)_1$，容量为 $\\inf$，费用为 $0$，代表这个从这个点向东到右边那个点可以走无数次。</li>\n</ol>\n<h4 id=\"障碍（-1-）\"><a href=\"#障碍（-1-）\" class=\"headerlink\" title=\"障碍（$1$）\"></a>障碍（$1$）</h4><p>没法走，不用管它。</p>\n<h4 id=\"石块（-2-）\"><a href=\"#石块（-2-）\" class=\"headerlink\" title=\"石块（$2$）\"></a>石块（$2$）</h4><p>和平坦无障碍的相比，只需要再多加一条边 $(x,y)_1 \\rightarrow (x,y)_2$，容量为 $1$，费用为 $1$，代表只可以捡一次石块，收益为 $1$。</p>\n<p>最后跑最大费用最大流即可。</p>\n<h3 id=\"输出\"><a href=\"#输出\" class=\"headerlink\" title=\"输出\"></a>输出</h3><p>我建完模就直接输出费用，然后开开心心地跑去测样例，丫的，居然要输出路径！我当场懵逼，冥（cha）思（kan）苦（ti）想（jie）后得到了下面的方法：</p>\n<p>对于每条路径，从起点开始搜索，每搜到一个点，选一条反向边有剩余容量（说明被走过）的临边走过去，并把反向边的剩余容量减去 $1$，直到走到终点。</p>\n<p>如果看不懂可以看代码：</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">put_ans</span><span class=\"params\">(<span class=\"type\">int</span> a)</span></span>&#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> x=<span class=\"number\">1</span>,y=<span class=\"number\">1</span>;    <span class=\"comment\">// 从起点开始搜索</span></span><br><span class=\"line\">    <span class=\"keyword\">while</span>(<span class=\"number\">1</span>)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(x&gt;=q&amp;&amp;y&gt;=p)<span class=\"keyword\">return</span>;  <span class=\"comment\">// 到达终点</span></span><br><span class=\"line\">        <span class=\"type\">int</span> u=<span class=\"built_in\">B</span>(x,y);</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"type\">int</span> i=head[u];i;i=e[i].pre)&#123;</span><br><span class=\"line\">            <span class=\"type\">int</span> v=e[i].to;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(!e[i^<span class=\"number\">1</span>].w)<span class=\"keyword\">continue</span>;  <span class=\"comment\">// 反向边有剩余容量</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span>(v==<span class=\"built_in\">A</span>(x<span class=\"number\">+1</span>,y))&#123;x++,e[i^<span class=\"number\">1</span>].w--,<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%d 0\\n&quot;</span>,a);<span class=\"keyword\">break</span>;&#125;  <span class=\"comment\">// 向南走</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span>(v==<span class=\"built_in\">A</span>(x,y<span class=\"number\">+1</span>))&#123;y++,e[i^<span class=\"number\">1</span>].w--,<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%d 1\\n&quot;</span>,a);<span class=\"keyword\">break</span>;&#125;  <span class=\"comment\">// 向东走</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"large-mathfrak-3rd-Code-代码\"><a href=\"#large-mathfrak-3rd-Code-代码\" class=\"headerlink\" title=\"$\\large\\mathfrak{3rd.\\ Code|}$ 代码\"></a>$\\large\\mathfrak{3rd.\\ Code|}$ 代码</h2><p>我是把边权设为负数跑最小费用最大流的方式求解最大费用最大流。代码压行请见谅。</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">define</span> ll long long</span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"><span class=\"type\">const</span> ll inf=<span class=\"number\">1e18</span>,N=<span class=\"number\">5e3</span><span class=\"number\">+10</span>,M=<span class=\"number\">5e4</span><span class=\"number\">+10</span>;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"type\">int</span> <span class=\"title\">read</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"type\">int</span> x=<span class=\"number\">0</span>,f=<span class=\"number\">1</span>;<span class=\"type\">char</span> ch=<span class=\"built_in\">getchar</span>();</span><br><span class=\"line\">\t<span class=\"keyword\">while</span> (ch&lt;<span class=\"string\">&#x27;0&#x27;</span>||ch&gt;<span class=\"string\">&#x27;9&#x27;</span>)&#123;<span class=\"keyword\">if</span> (ch==<span class=\"string\">&#x27;-&#x27;</span>) f=<span class=\"number\">-1</span>;ch=<span class=\"built_in\">getchar</span>();&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">while</span> (ch&gt;=<span class=\"string\">&#x27;0&#x27;</span>&amp;&amp;ch&lt;=<span class=\"string\">&#x27;9&#x27;</span>)&#123;x=x*<span class=\"number\">10</span>+ch<span class=\"number\">-48</span>;ch=<span class=\"built_in\">getchar</span>();&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> x*f;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">ll e_cnt=<span class=\"number\">1</span>,head[N];</span><br><span class=\"line\"><span class=\"keyword\">struct</span> <span class=\"title class_\">EDGE</span>&#123;ll from,to,w,c,pre;&#125;e[M&lt;&lt;<span class=\"number\">1</span>];</span><br><span class=\"line\">ll n,p,q,s,t,ans,cost;</span><br><span class=\"line\">ll dis[N],pre[N];</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"type\">void</span> <span class=\"title\">add</span><span class=\"params\">(ll from,ll to,ll w,ll c)</span></span>&#123;</span><br><span class=\"line\">    e[++e_cnt]=(EDGE)&#123;from,to,w,c,head[from]&#125;;</span><br><span class=\"line\">    head[from]=e_cnt;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"type\">void</span> <span class=\"title\">add_edge</span><span class=\"params\">(ll u,ll v,ll w,ll c)</span></span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">add</span>(u,v,w,c),<span class=\"built_in\">add</span>(v,u,<span class=\"number\">0</span>,-c);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"type\">int</span> <span class=\"title\">A</span><span class=\"params\">(<span class=\"type\">int</span> x,<span class=\"type\">int</span> y)</span></span>&#123;<span class=\"keyword\">return</span> (x<span class=\"number\">-1</span>)*p+y;&#125;    <span class=\"comment\">// (x,y)_1</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"type\">int</span> <span class=\"title\">B</span><span class=\"params\">(<span class=\"type\">int</span> x,<span class=\"type\">int</span> y)</span></span>&#123;<span class=\"keyword\">return</span> <span class=\"built_in\">A</span>(x,y)+p*q;&#125;   <span class=\"comment\">// (x,y)_2</span></span><br><span class=\"line\"><span class=\"comment\">//------------------最大费用最大流板子---------------------</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">bool</span> <span class=\"title\">spfa</span><span class=\"params\">(ll s,ll t)</span></span>&#123;</span><br><span class=\"line\">    <span class=\"type\">bool</span> inq[N];</span><br><span class=\"line\">    <span class=\"built_in\">memset</span>(pre,<span class=\"number\">-1</span>,<span class=\"built_in\">sizeof</span>(pre));</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"type\">int</span> i=<span class=\"number\">1</span>;i&lt;=t;i++)dis[i]=inf,inq[i]=<span class=\"number\">0</span>;</span><br><span class=\"line\">    queue&lt;ll&gt;que;</span><br><span class=\"line\">    dis[s]=<span class=\"number\">0</span>,inq[s]=<span class=\"number\">1</span>,que.<span class=\"built_in\">push</span>(s);</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(!que.<span class=\"built_in\">empty</span>())&#123;</span><br><span class=\"line\">        ll u=que.<span class=\"built_in\">front</span>();</span><br><span class=\"line\">        que.<span class=\"built_in\">pop</span>();</span><br><span class=\"line\">        inq[u]=<span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"type\">int</span> i=head[u];i;i=e[i].pre)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(e[i].w&gt;<span class=\"number\">0</span>)&#123;</span><br><span class=\"line\">                ll v=e[i].to,c=e[i].c;</span><br><span class=\"line\">                <span class=\"keyword\">if</span>(dis[u]+c&lt;dis[v])&#123;</span><br><span class=\"line\">                    dis[v]=dis[u]+c;</span><br><span class=\"line\">                    pre[v]=i;</span><br><span class=\"line\">                    <span class=\"keyword\">if</span>(!inq[v])&#123;</span><br><span class=\"line\">                        que.<span class=\"built_in\">push</span>(v);</span><br><span class=\"line\">                        inq[v]=<span class=\"number\">1</span>;</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> dis[t]!=inf;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">mincost</span><span class=\"params\">(ll s,ll t)</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(<span class=\"built_in\">spfa</span>(s,t))&#123;</span><br><span class=\"line\">        ll v=t,flow=inf;</span><br><span class=\"line\">        <span class=\"keyword\">while</span>(pre[v]!=<span class=\"number\">-1</span>)&#123;</span><br><span class=\"line\">            ll i=pre[v],u=e[i].from;</span><br><span class=\"line\">            flow=<span class=\"built_in\">min</span>(flow,e[i].w);</span><br><span class=\"line\">            v=u;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        v=t;</span><br><span class=\"line\">        <span class=\"keyword\">while</span>(pre[v]!=<span class=\"number\">-1</span>)&#123;</span><br><span class=\"line\">            ll i=pre[v],u=e[i].from;</span><br><span class=\"line\">            e[i].w-=flow;</span><br><span class=\"line\">            e[i^<span class=\"number\">1</span>].w+=flow;</span><br><span class=\"line\">            v=u;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        cost+=dis[t]*flow;</span><br><span class=\"line\">        ans+=flow;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//------------end of 最大费用最大流-------------</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">put_ans</span><span class=\"params\">(<span class=\"type\">int</span> a)</span></span>&#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> x=<span class=\"number\">1</span>,y=<span class=\"number\">1</span>;    <span class=\"comment\">// 从起点开始搜索</span></span><br><span class=\"line\">    <span class=\"keyword\">while</span>(<span class=\"number\">1</span>)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(x&gt;=q&amp;&amp;y&gt;=p)<span class=\"keyword\">return</span>;  <span class=\"comment\">// 到达终点</span></span><br><span class=\"line\">        <span class=\"type\">int</span> u=<span class=\"built_in\">B</span>(x,y);</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"type\">int</span> i=head[u];i;i=e[i].pre)&#123;</span><br><span class=\"line\">            <span class=\"type\">int</span> v=e[i].to;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(!e[i^<span class=\"number\">1</span>].w)<span class=\"keyword\">continue</span>;  <span class=\"comment\">// 反向边有剩余容量</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span>(v==<span class=\"built_in\">A</span>(x<span class=\"number\">+1</span>,y))&#123;x++,e[i^<span class=\"number\">1</span>].w--,<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%d 0\\n&quot;</span>,a);<span class=\"keyword\">break</span>;&#125;  <span class=\"comment\">// 向南走</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span>(v==<span class=\"built_in\">A</span>(x,y<span class=\"number\">+1</span>))&#123;y++,e[i^<span class=\"number\">1</span>].w--,<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%d 1\\n&quot;</span>,a);<span class=\"keyword\">break</span>;&#125;  <span class=\"comment\">// 向东走</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    n=<span class=\"built_in\">read</span>(),p=<span class=\"built_in\">read</span>(),q=<span class=\"built_in\">read</span>();</span><br><span class=\"line\">    s=p*q*<span class=\"number\">2</span><span class=\"number\">+1</span>,t=s<span class=\"number\">+1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"type\">int</span> i=<span class=\"number\">1</span>;i&lt;=q;i++)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"type\">int</span> j=<span class=\"number\">1</span>;j&lt;=p;j++)&#123;</span><br><span class=\"line\">            <span class=\"type\">int</span> x;</span><br><span class=\"line\">            x=<span class=\"built_in\">read</span>();</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(x!=<span class=\"number\">1</span>)&#123;    <span class=\"comment\">// 0和2有三条相同边，合在一起，1啥也不干</span></span><br><span class=\"line\">                <span class=\"built_in\">add_edge</span>(<span class=\"built_in\">A</span>(i,j),<span class=\"built_in\">B</span>(i,j),inf,<span class=\"number\">0</span>);</span><br><span class=\"line\">                <span class=\"keyword\">if</span>(i<span class=\"number\">+1</span>&lt;=q)<span class=\"built_in\">add_edge</span>(<span class=\"built_in\">B</span>(i,j),<span class=\"built_in\">A</span>(i<span class=\"number\">+1</span>,j),inf,<span class=\"number\">0</span>);</span><br><span class=\"line\">                <span class=\"keyword\">if</span>(j<span class=\"number\">+1</span>&lt;=p)<span class=\"built_in\">add_edge</span>(<span class=\"built_in\">B</span>(i,j),<span class=\"built_in\">A</span>(i,j<span class=\"number\">+1</span>),inf,<span class=\"number\">0</span>);</span><br><span class=\"line\">                <span class=\"keyword\">if</span>(x==<span class=\"number\">2</span>)<span class=\"built_in\">add_edge</span>(<span class=\"built_in\">A</span>(i,j),<span class=\"built_in\">B</span>(i,j),<span class=\"number\">1</span>,<span class=\"number\">-1</span>);  <span class=\"comment\">// 2多建一条边</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"built_in\">add_edge</span>(s,<span class=\"built_in\">A</span>(<span class=\"number\">1</span>,<span class=\"number\">1</span>),n,<span class=\"number\">0</span>);</span><br><span class=\"line\">    <span class=\"built_in\">add_edge</span>(<span class=\"built_in\">B</span>(q,p),t,n,<span class=\"number\">0</span>);</span><br><span class=\"line\">    <span class=\"built_in\">mincost</span>(s,t);</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"type\">int</span> i=<span class=\"number\">1</span>;i&lt;=ans;i++)<span class=\"built_in\">put_ans</span>(i);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><a class=\"link\"   href=\"https://www.luogu.com.cn/record/172049267\" >AC 记录 <i class=\"fa-regular fa-arrow-up-right-from-square fa-sm\"></i></a></p>\n<h2 id=\"large-mathfrak-4th-Postscript-后记\"><a href=\"#large-mathfrak-4th-Postscript-后记\" class=\"headerlink\" title=\"$\\large\\mathfrak{4th.\\ Postscript|}$ 后记\"></a>$\\large\\mathfrak{4th.\\ Postscript|}$ 后记</h2><p>第一遍编号标错居然可以拿 $84$ 分（只有 #5 没过），这数据着实有点水……</p>\n"},{"title":"Welcome to Xlon WU's Blog.","date":"2024-08-26T07:00:00.000Z","banner":"/img/welcome.jpg","sticky":100,"_content":"### **简体中文**\n\n欢迎来到 青铜_WU 的博客小站。\n\n[点击此处查看博客页面](https://xlon-wu.github.io/)\n\n我是一名来自中国福建的 OIer，你可以在这些地方找到我：\n\n[洛谷](https://www.luogu.com.cn/user/958002) \\| [哔哩哔哩](https://space.bilibili.com/1574939163) \\| [博客园](https://www.cnblogs.com/Simon-Wu) \\| [GitHub](https://github.com/Xlon-WU) \\| [CodeForces](https://codeforces.com/profile/wuxinlong) \\| [AtCoder](https://atcoder.jp/users/SimonWU)\n\n本站基于 Hexo 博客框架搭建，使用 Redefine 主题，由 GitHub 托管。\n\n[本项目的 GitHub 仓库](https://github.com/Xlon-WU/Xlon-WU.github.io)\n\n---\n\n### **English**\n\nWelcome to Xlon WU's blog.\n\n[Click here to view the blog page.](https://xlon-wu.github.io/)\n\nI am an OIer from Fujian, China. And you can find me here:\n\n[Luogu](https://www.luogu.com.cn/user/958002) \\| [Bilibili](https://space.bilibili.com/1574939163) \\| [cnBlogs](https://www.cnblogs.com/Simon-Wu) \\| [GitHub](https://github.com/Xlon-WU) \\| [CodeForces](https://codeforces.com/profile/wuxinlong) \\| [AtCoder](https://atcoder.jp/users/SimonWU)\n\nThis site is built on the Hexo blogging framework and uses the Redefine theme, which is hosted on GitHub.\n\n[GitHub repository for this project](https://github.com/Xlon-WU/Xlon-WU.github.io)","source":"_posts/welcome-to-this-blog.md","raw":"---\ntitle: Welcome to Xlon WU's Blog.\ndate: 2024-8-26 15:00:00\ntags: 系统\nbanner: /img/welcome.jpg\nsticky: 100\n---\n### **简体中文**\n\n欢迎来到 青铜_WU 的博客小站。\n\n[点击此处查看博客页面](https://xlon-wu.github.io/)\n\n我是一名来自中国福建的 OIer，你可以在这些地方找到我：\n\n[洛谷](https://www.luogu.com.cn/user/958002) \\| [哔哩哔哩](https://space.bilibili.com/1574939163) \\| [博客园](https://www.cnblogs.com/Simon-Wu) \\| [GitHub](https://github.com/Xlon-WU) \\| [CodeForces](https://codeforces.com/profile/wuxinlong) \\| [AtCoder](https://atcoder.jp/users/SimonWU)\n\n本站基于 Hexo 博客框架搭建，使用 Redefine 主题，由 GitHub 托管。\n\n[本项目的 GitHub 仓库](https://github.com/Xlon-WU/Xlon-WU.github.io)\n\n---\n\n### **English**\n\nWelcome to Xlon WU's blog.\n\n[Click here to view the blog page.](https://xlon-wu.github.io/)\n\nI am an OIer from Fujian, China. And you can find me here:\n\n[Luogu](https://www.luogu.com.cn/user/958002) \\| [Bilibili](https://space.bilibili.com/1574939163) \\| [cnBlogs](https://www.cnblogs.com/Simon-Wu) \\| [GitHub](https://github.com/Xlon-WU) \\| [CodeForces](https://codeforces.com/profile/wuxinlong) \\| [AtCoder](https://atcoder.jp/users/SimonWU)\n\nThis site is built on the Hexo blogging framework and uses the Redefine theme, which is hosted on GitHub.\n\n[GitHub repository for this project](https://github.com/Xlon-WU/Xlon-WU.github.io)","slug":"welcome-to-this-blog","published":1,"updated":"2024-08-28T04:07:18.197Z","comments":1,"layout":"post","photos":[],"_id":"cm0qrhqz3000lf4it0jk405xr","content":"<h3 id=\"简体中文\"><a href=\"#简体中文\" class=\"headerlink\" title=\"简体中文\"></a><strong>简体中文</strong></h3><p>欢迎来到 青铜_WU 的博客小站。</p>\n<p><a class=\"link\"   href=\"https://xlon-wu.github.io/\" >点击此处查看博客页面 <i class=\"fa-regular fa-arrow-up-right-from-square fa-sm\"></i></a></p>\n<p>我是一名来自中国福建的 OIer，你可以在这些地方找到我：</p>\n<p><a class=\"link\"   href=\"https://www.luogu.com.cn/user/958002\" >洛谷 <i class=\"fa-regular fa-arrow-up-right-from-square fa-sm\"></i></a> | <a class=\"link\"   href=\"https://space.bilibili.com/1574939163\" >哔哩哔哩 <i class=\"fa-regular fa-arrow-up-right-from-square fa-sm\"></i></a> | <a class=\"link\"   href=\"https://www.cnblogs.com/Simon-Wu\" >博客园 <i class=\"fa-regular fa-arrow-up-right-from-square fa-sm\"></i></a> | <a class=\"link\"   href=\"https://github.com/Xlon-WU\" >GitHub <i class=\"fa-regular fa-arrow-up-right-from-square fa-sm\"></i></a> | <a class=\"link\"   href=\"https://codeforces.com/profile/wuxinlong\" >CodeForces <i class=\"fa-regular fa-arrow-up-right-from-square fa-sm\"></i></a> | <a class=\"link\"   href=\"https://atcoder.jp/users/SimonWU\" >AtCoder <i class=\"fa-regular fa-arrow-up-right-from-square fa-sm\"></i></a></p>\n<p>本站基于 Hexo 博客框架搭建，使用 Redefine 主题，由 GitHub 托管。</p>\n<p><a class=\"link\"   href=\"https://github.com/Xlon-WU/Xlon-WU.github.io\" >本项目的 GitHub 仓库 <i class=\"fa-regular fa-arrow-up-right-from-square fa-sm\"></i></a></p>\n<hr>\n<h3 id=\"English\"><a href=\"#English\" class=\"headerlink\" title=\"English\"></a><strong>English</strong></h3><p>Welcome to Xlon WU’s blog.</p>\n<p><a class=\"link\"   href=\"https://xlon-wu.github.io/\" >Click here to view the blog page. <i class=\"fa-regular fa-arrow-up-right-from-square fa-sm\"></i></a></p>\n<p>I am an OIer from Fujian, China. And you can find me here:</p>\n<p><a class=\"link\"   href=\"https://www.luogu.com.cn/user/958002\" >Luogu <i class=\"fa-regular fa-arrow-up-right-from-square fa-sm\"></i></a> | <a class=\"link\"   href=\"https://space.bilibili.com/1574939163\" >Bilibili <i class=\"fa-regular fa-arrow-up-right-from-square fa-sm\"></i></a> | <a class=\"link\"   href=\"https://www.cnblogs.com/Simon-Wu\" >cnBlogs <i class=\"fa-regular fa-arrow-up-right-from-square fa-sm\"></i></a> | <a class=\"link\"   href=\"https://github.com/Xlon-WU\" >GitHub <i class=\"fa-regular fa-arrow-up-right-from-square fa-sm\"></i></a> | <a class=\"link\"   href=\"https://codeforces.com/profile/wuxinlong\" >CodeForces <i class=\"fa-regular fa-arrow-up-right-from-square fa-sm\"></i></a> | <a class=\"link\"   href=\"https://atcoder.jp/users/SimonWU\" >AtCoder <i class=\"fa-regular fa-arrow-up-right-from-square fa-sm\"></i></a></p>\n<p>This site is built on the Hexo blogging framework and uses the Redefine theme, which is hosted on GitHub.</p>\n<p><a class=\"link\"   href=\"https://github.com/Xlon-WU/Xlon-WU.github.io\" >GitHub repository for this project <i class=\"fa-regular fa-arrow-up-right-from-square fa-sm\"></i></a></p>\n","excerpt":"","more":"<h3 id=\"简体中文\"><a href=\"#简体中文\" class=\"headerlink\" title=\"简体中文\"></a><strong>简体中文</strong></h3><p>欢迎来到 青铜_WU 的博客小站。</p>\n<p><a class=\"link\"   href=\"https://xlon-wu.github.io/\" >点击此处查看博客页面 <i class=\"fa-regular fa-arrow-up-right-from-square fa-sm\"></i></a></p>\n<p>我是一名来自中国福建的 OIer，你可以在这些地方找到我：</p>\n<p><a class=\"link\"   href=\"https://www.luogu.com.cn/user/958002\" >洛谷 <i class=\"fa-regular fa-arrow-up-right-from-square fa-sm\"></i></a> | <a class=\"link\"   href=\"https://space.bilibili.com/1574939163\" >哔哩哔哩 <i class=\"fa-regular fa-arrow-up-right-from-square fa-sm\"></i></a> | <a class=\"link\"   href=\"https://www.cnblogs.com/Simon-Wu\" >博客园 <i class=\"fa-regular fa-arrow-up-right-from-square fa-sm\"></i></a> | <a class=\"link\"   href=\"https://github.com/Xlon-WU\" >GitHub <i class=\"fa-regular fa-arrow-up-right-from-square fa-sm\"></i></a> | <a class=\"link\"   href=\"https://codeforces.com/profile/wuxinlong\" >CodeForces <i class=\"fa-regular fa-arrow-up-right-from-square fa-sm\"></i></a> | <a class=\"link\"   href=\"https://atcoder.jp/users/SimonWU\" >AtCoder <i class=\"fa-regular fa-arrow-up-right-from-square fa-sm\"></i></a></p>\n<p>本站基于 Hexo 博客框架搭建，使用 Redefine 主题，由 GitHub 托管。</p>\n<p><a class=\"link\"   href=\"https://github.com/Xlon-WU/Xlon-WU.github.io\" >本项目的 GitHub 仓库 <i class=\"fa-regular fa-arrow-up-right-from-square fa-sm\"></i></a></p>\n<hr>\n<h3 id=\"English\"><a href=\"#English\" class=\"headerlink\" title=\"English\"></a><strong>English</strong></h3><p>Welcome to Xlon WU’s blog.</p>\n<p><a class=\"link\"   href=\"https://xlon-wu.github.io/\" >Click here to view the blog page. <i class=\"fa-regular fa-arrow-up-right-from-square fa-sm\"></i></a></p>\n<p>I am an OIer from Fujian, China. And you can find me here:</p>\n<p><a class=\"link\"   href=\"https://www.luogu.com.cn/user/958002\" >Luogu <i class=\"fa-regular fa-arrow-up-right-from-square fa-sm\"></i></a> | <a class=\"link\"   href=\"https://space.bilibili.com/1574939163\" >Bilibili <i class=\"fa-regular fa-arrow-up-right-from-square fa-sm\"></i></a> | <a class=\"link\"   href=\"https://www.cnblogs.com/Simon-Wu\" >cnBlogs <i class=\"fa-regular fa-arrow-up-right-from-square fa-sm\"></i></a> | <a class=\"link\"   href=\"https://github.com/Xlon-WU\" >GitHub <i class=\"fa-regular fa-arrow-up-right-from-square fa-sm\"></i></a> | <a class=\"link\"   href=\"https://codeforces.com/profile/wuxinlong\" >CodeForces <i class=\"fa-regular fa-arrow-up-right-from-square fa-sm\"></i></a> | <a class=\"link\"   href=\"https://atcoder.jp/users/SimonWU\" >AtCoder <i class=\"fa-regular fa-arrow-up-right-from-square fa-sm\"></i></a></p>\n<p>This site is built on the Hexo blogging framework and uses the Redefine theme, which is hosted on GitHub.</p>\n<p><a class=\"link\"   href=\"https://github.com/Xlon-WU/Xlon-WU.github.io\" >GitHub repository for this project <i class=\"fa-regular fa-arrow-up-right-from-square fa-sm\"></i></a></p>\n"}],"PostAsset":[],"PostCategory":[],"PostTag":[{"post_id":"cm0qrhqxw0001f4itd9wn58s5","tag_id":"cm0qrhqy90003f4it6yoq04dc","_id":"cm0qrhqyi0007f4itar581rua"},{"post_id":"cm0qrhqxw0001f4itd9wn58s5","tag_id":"cm0qrhqyg0005f4itax570ih0","_id":"cm0qrhqyj0008f4ithgrr59pr"},{"post_id":"cm0qrhqy50002f4it5k7ocl05","tag_id":"cm0qrhqyh0006f4it6hbwdf8j","_id":"cm0qrhqyo000cf4ita1sdadw5"},{"post_id":"cm0qrhqy50002f4it5k7ocl05","tag_id":"cm0qrhqyk0009f4ithcr62678","_id":"cm0qrhqyp000df4itahjxaaw5"},{"post_id":"cm0qrhqy50002f4it5k7ocl05","tag_id":"cm0qrhqyl000af4it3864cdhn","_id":"cm0qrhqyt000ff4it744u648h"},{"post_id":"cm0qrhqye0004f4it2iyjgjy9","tag_id":"cm0qrhqyn000bf4itfe6hfarf","_id":"cm0qrhqyt000gf4itgguv6dz3"},{"post_id":"cm0qrhqye0004f4it2iyjgjy9","tag_id":"cm0qrhqyh0006f4it6hbwdf8j","_id":"cm0qrhqyu000hf4itbchia4nr"},{"post_id":"cm0qrhqyw000if4ite3p63cww","tag_id":"cm0qrhqyh0006f4it6hbwdf8j","_id":"cm0qrhqz7000nf4it6f2557xi"},{"post_id":"cm0qrhqyw000if4ite3p63cww","tag_id":"cm0qrhqz1000kf4it8ih7dr2f","_id":"cm0qrhqz7000of4it5iqld7wk"},{"post_id":"cm0qrhqyy000jf4it5l40h1t3","tag_id":"cm0qrhqyh0006f4it6hbwdf8j","_id":"cm0qrhqz8000qf4itfo2q2znz"},{"post_id":"cm0qrhqyy000jf4it5l40h1t3","tag_id":"cm0qrhqyg0005f4itax570ih0","_id":"cm0qrhqz9000rf4it6ct5gtov"},{"post_id":"cm0qrhqyy000jf4it5l40h1t3","tag_id":"cm0qrhqz6000mf4it7xlj10xd","_id":"cm0qrhqz9000sf4itc4tdh7yd"},{"post_id":"cm0qrhqz3000lf4it0jk405xr","tag_id":"cm0qrhqz7000pf4it5fjhfn7a","_id":"cm0qrhqz9000tf4it3cekdqh4"}],"Tag":[{"name":"转载","_id":"cm0qrhqy90003f4it6yoq04dc"},{"name":"网络流","_id":"cm0qrhqyg0005f4itax570ih0"},{"name":"题解","_id":"cm0qrhqyh0006f4it6hbwdf8j"},{"name":"线段树","_id":"cm0qrhqyk0009f4ithcr62678"},{"name":"动态规划","_id":"cm0qrhqyl000af4it3864cdhn"},{"name":"知识","_id":"cm0qrhqyn000bf4itfe6hfarf"},{"name":"博弈论","_id":"cm0qrhqz1000kf4it8ih7dr2f"},{"name":"费用流","_id":"cm0qrhqz6000mf4it7xlj10xd"},{"name":"系统","_id":"cm0qrhqz7000pf4it5fjhfn7a"}]}}